<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.TraceListener</name>
    </assembly>
    <members>
        <member name="T:Amazon.TraceListener.DynamoDBTraceListener">
            <summary>
            <para>
            DynamoDBTraceListener is a custom TraceListener that logs events to a DynamoDB table.
            The listener can be configured through the application's .config file or by instantiating
            an instance of DynamoDBTraceListener and setting the Configuration property on the instance.
            </para>
            
            <para>
            The target table must have a string hash key and a string range key.
            If the table does not exist the listener will create it during initialization with
            default read and write units set to 1 and 10, respectively, unless configured otherwise.
            </para>
            
            <para>
            While DynamoDBTraceListener is running, it will write temporary log files into current
            directory. These log files will be deleted once the data is pushed to DynamoDB.
            The logs are pushed to DynamoDB under the following conditions:
            1. Flush is called on the DynamoDBTraceListener
            2. Close is called on the DynamoDBTraceListener
            3. WritePeriod has elapsed since last write
            
            (If the listener is used with the SDK clients, Flush is invoked when the client is disposed.)
            
            If the application exits and there are still log files (in the event Flush is not invoked or
            the application terminates unexpectedly), these log files will be pushed to DynamoDB on the
            next execution of the application.
            
            Log files can also be flushed manually by creating an instance of DynamoDBTraceListener and
            using the FlushLog method on a particular log file.
            </para>
            
            <para>
            Example of an app.config entry setting up the listener with all possible configurations specified:
            <code>
            &lt;system.diagnostics&gt;
              &lt;trace&gt;
                &lt;listeners&gt;
                  &lt;add name=&quot;dynamo&quot; type=&quot;Amazon.TraceListener.DynamoDBTraceListener, AWS.TraceListener&quot;
                        AWSProfileName="default"
                        AWSProfilesLocation=".aws/credentials"
                        Region=&quot;us-west-2&quot;
                        Table=&quot;Logs&quot;
                        CreateIfNotExist=&quot;true&quot;
                        ReadCapacityUnits=&quot;1&quot;
                        WriteCapacityUnits=&quot;10&quot;
                        HashKey=&quot;Origin&quot;
                        RangeKey=&quot;Timestamp&quot;
                        MaxLength=&quot;10000&quot;
                        ExcludeAttributes=&quot;Callstack, Host&quot;
                        HashKeyFormat=&quot;{Host}-{EventType}-{ProcessId}&quot;
                        RangeKeyFormat=&quot;{Time}&quot;
                        WritePeriodMs=&quot;60000&quot;
                        LogFilesDir=&quot;C:\Logs&quot;
                    /&gt;
                &lt;/listeners&gt;
              &lt;/trace&gt;
            &lt;/system.diagnostics&gt;
            </code>
            </para>
            </summary>
        </member>
        <member name="M:Amazon.TraceListener.DynamoDBTraceListener.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.TraceListener.DynamoDBTraceListener.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="M:Amazon.TraceListener.DynamoDBTraceListener.#ctor">
            <summary>
            Constructs an instance of the DynamoDBTraceListener.
            </summary>
        </member>
        <member name="M:Amazon.TraceListener.DynamoDBTraceListener.#ctor(System.String)">
            <summary>
            Constructs a named instance of the DynamoDBTraceListener.
            </summary>
        </member>
        <member name="M:Amazon.TraceListener.DynamoDBTraceListener.FlushLog(System.String)">
            <summary>
            Flushes an existing log to DynamoDB, then deletes/empties the log file.
            This method can be invoked manually to flush left-over log files.
            </summary>
            <param name="log"></param>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configuration">
            <summary>
            Current configuration.
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.IsEnabled">
            <summary>
            Whether the DynamoDBTraceListener is enabled.
            Read-only field that is set to false if the listener is disabled.
            The listener can be disabled if initialization has failed (in which case an error will be
            logged to the event log) or the listener was closed.
            </summary>
        </member>
        <member name="T:Amazon.TraceListener.DynamoDBTraceListener.Configs">
            <summary>
            DynamoDBTraceListener configurations.
            </summary>
        </member>
        <member name="M:Amazon.TraceListener.DynamoDBTraceListener.Configs.#ctor">
            <summary>
            Constructs a default Configs instance.
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.AWSAccessKey">
            <summary>
            Access key to use.
            Config key: AWSAccessKey
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.AWSSecretKey">
            <summary>
            Secret key to use.
            Config key: AWSSecretKey
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.AWSProfileName">
            <summary>
            Profile to use.
            Config key: AWSProfileName
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.AWSProfilesLocation">
            <summary>
            Location of credentials file.
            Config key: AWSProfilesLocation
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.AWSCredentials">
            <summary>
            Credentials to use.
            This property can only be set programmatically.
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.Region">
            <summary>
            Region for the table. Default is US West 2 (Oregon).
            Config key: Region
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.ServiceURL">
            <summary>
            The URL of the DynamoDB endpoint. This can be used instead of region. This property is commonly used for connecting to DynamoDB Local (e.g. http://localhost:8000/)
            Config key: ServiceURL
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.TableName">
            <summary>
            Table used to store logs. Default is "Logs".
            Config key: Table
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.CreateTableIfNotExist">
            <summary>
            Controls whether the table will be auto created if it doesn't exist. The default is true.
            Config key: CreateIfNotExist
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.ReadUnits">
            <summary>
            The read capacity units if the table is created. The default is 1.
            Config key: ReadCapacityUnits
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.WriteUnits">
            <summary>
            The write capacity units if the table is created. The default is 10.
            Config key: WriteCapacityUnits
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.HashKey">
            <summary>
            The hash-key name if the table is created. The default is "Origin".
            Config key: HashKey
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.RangeKey">
            <summary>
            The range-key name if the table is created. The default is "Timestamp".
            Config key: RangeKey
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.MaxLength">
            <summary>
            The maximum length of any one attribute. The default is 10,000 characters.
            Config key: MaxLength
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.HashKeyFormat">
            <summary>
            Format of the hash key. The default is "{Host}".
            The format can include environment variables, attributes from the logged message, or can
            be a constant value.
            
            Environment variables are specified like so: %ComputerName%
            Attributes are specified like so: {Host}
            For example: {Host}-{EventType}-{ProcessId} or %ComputerName%-{EventType}-{ProcessId}
            
            Config key: HashKeyFormat
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.RangeKeyFormat">
            <summary>
            Format of the range key. The default is "{Time}".
            The format can include environment variables, attributes from the logged message, or can
            be a constant value.
            
            Environment variables are specified like so: %Time%
            Attributes are specified like so: {Time}
            
            Config key: RangeKeyFormat
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.ExcludeAttributes">
            <summary>
            Array of attributes to exclude from the logged item. Default is null.
            Config key: ExcludeAttributes (comma-separated list of attribute names)
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.WritePeriod">
            <summary>
            Largest time between writes to DynamoDB.
            If this period has passed since the last log write, all accumulated messages
            are written to DynamoDB immediately.
            
            The listener only pushes messages to DynamoDB when the target table is active
            AND one of the following happens:
             1. The time equal to WritePeriod since last write has elapsed
             2. Flush is called
             3. Close is called
            
            Default value is 1 minute. Smallest allowed value is 0 seconds.
            
            Config key: WritePeriodMs (number of milliseconds)
            </summary>
        </member>
        <member name="P:Amazon.TraceListener.DynamoDBTraceListener.Configs.LogFilesDirectory">
            <summary>
            The directory that temporary log files should be written to.
            If the value is not specified, listener attempts to use the application's current
            directory, then the Windows temporary directory. If none of these are accessible,
            the listener will be disabled and an error message will be written to the error log.
            
            Default value is null.
            
            Config key: LogFilesDir
            </summary>
        </member>
    </members>
</doc>
