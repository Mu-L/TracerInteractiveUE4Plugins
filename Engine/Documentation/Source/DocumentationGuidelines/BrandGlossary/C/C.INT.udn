Availability: Docs
Crumbs: %ROOT%
Title: Brand Glossary
Description: A glossary of key terms, which are used to describe the systems, features, and tools that belong to Unreal Engine 4 (UE4).
Type: Reference
Version: 4.16
Parent:BrandGlossary
Order:3
Tags:Brand Glossary

Welcome to the Unreal Engine 4 (UE4) **Brand Glossary**. If you want to create user-facing resources for the UE4 community, this guide 
helps you gain a better understanding of the terms being used to describe systems, features, and tools belonging to UE4. After reading 
through this glossary, you'll also know how to properly spell and capitalize the terms we use to describe Unreal Engine.  

<hr>
  
[<font size = "5" color=#001940>A</font>](DocumentationGuidelines/BrandGlossary/A)&nbsp;&nbsp;
[<font size = "5" color=#001940>B</font>](DocumentationGuidelines/BrandGlossary/B)&nbsp;&nbsp;
<font size = "6" color=#00327F>C</font>&nbsp;&nbsp;
[<font size = "5" color=#001940>D</font>](DocumentationGuidelines/BrandGlossary/D)&nbsp;&nbsp;
[<font size = "5" color=#001940>E</font>](DocumentationGuidelines/BrandGlossary/E)&nbsp;&nbsp;
[<font size = "5" color=#001940>F</font>](DocumentationGuidelines/BrandGlossary/F)&nbsp;&nbsp;
[<font size = "5" color=#001940>G</font>](DocumentationGuidelines/BrandGlossary/G)&nbsp;&nbsp;
[<font size = "5" color=#001940>H</font>](DocumentationGuidelines/BrandGlossary/H)&nbsp;&nbsp;
<font size = "5" color=#001940>I</font>&nbsp;&nbsp;
<font size = "5" color=#001940>J</font>&nbsp;&nbsp;
<font size = "5" color=#001940>K</font>&nbsp;&nbsp;
[<font size = "5" color=#001940>L</font>](DocumentationGuidelines/BrandGlossary/L)&nbsp;&nbsp;
[<font size = "5" color=#001940>M</font>](DocumentationGuidelines/BrandGlossary/M)&nbsp;&nbsp;
<font size = "5" color=#001940>N</font>&nbsp;&nbsp;
[<font size = "5" color=#001940>O</font>](DocumentationGuidelines/BrandGlossary/O)&nbsp;&nbsp;
[<font size = "5" color=#001940>P</font>](DocumentationGuidelines/BrandGlossary/P)&nbsp;&nbsp;
<font size = "5" color=#001940>Q</font>&nbsp;&nbsp;
[<font size = "5" color=#001940>R</font>](DocumentationGuidelines/BrandGlossary/R)&nbsp;&nbsp;
[<font size = "5" color=#001940>S</font>](DocumentationGuidelines/BrandGlossary/S)&nbsp;&nbsp;
[<font size = "5" color=#001940>T</font>](DocumentationGuidelines/BrandGlossary/T)&nbsp;&nbsp;
[<font size = "5" color=#001940>U</font>](DocumentationGuidelines/BrandGlossary/U)&nbsp;&nbsp;
[<font size = "5" color=#001940>V</font>](DocumentationGuidelines/BrandGlossary/V)&nbsp;&nbsp;
[<font size = "5" color=#001940>W</font>](DocumentationGuidelines/BrandGlossary/W)&nbsp;&nbsp;
<font size = "5" color=#001940>X</font>&nbsp;&nbsp;
<font size = "5" color=#001940>Y</font>&nbsp;&nbsp;
<font size = "5" color=#001940>Z</font>&nbsp;&nbsp;

##Camera

The PlayerCameraManager is the player’s “eyeball”, managing how it behaves. Each PlayerController typically has one of these as well. For more, see the camera workflow page.

##Cascade Particle Editor

The Cascade Particle Editor is a fully integrated and modular particle effects editor that offers real-time feedback and modular effects editing, allowing fast and easy creation of even the most complex effects.

##Character

A Character is a subclass of a Pawn Actor that is intended to be used as a player character. The Character subclass includes a collision setup, input bindings for bipedal movement, and additional code for movement controlled by the player.

##Class

A Class defines the behaviors and properties of a particular Actor or Object used in the creation of an Unreal Engine game. Classes are hierarchical, which means that a Class inherits information from its parent Classes (the Classes it was derived, or “sub-classed,” from) and passes that information to its children. Classes can be created in C++ code or in Blueprints.

##Class Viewer

Browser and picker functionality for C++ and Blueprint classes.

##Color Picker

The Color Picker allows you to easily adjust a color value for a color property in the Unreal Editor. You can adjust colors by the following values: RGBA (red, green, blue, alpha), HSV (hue, saturation, value), and Hex (ARGB). Alternatively you can select a color by clicking anywhere in the color wheel, by capturing the color under your mouse, or clicking anywhere on your monitor.

##Component

A Component is a piece of functionality that can be added to an Actor. Components cannot exist by themselves, however when added to an Actor, the Actor will have access to functionality provided by the Component.

##Content Browser

The Content Browser is the primary area of the Unreal Editor for creating, importing, organizing, viewing, and modifying content assets within Unreal Editor.

##Content Cooking

Content Cooking is the process of converting content from the internal formats used by Unreal Editor, such as PNG for texture data or WAV for audio, to the formats used by each individual platform; either because the platform uses a proprietary format, does not support the format Unreal uses to store the asset, or a more memory/performance-effective format exists.

##Controller

Controllers are non-physical Actors that can possess a Pawn or Character to control its actions.

##Curve Editor

The Curve Editor provides interactive editing and fine control of properties that change over time (for example, properties that make use of Distributions).