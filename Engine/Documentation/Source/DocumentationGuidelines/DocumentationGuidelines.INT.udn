Availability:Docs
Title: Documentation Process & Guidelines
Crumbs:
Description:Style and syntax guidelines for writing documentation.
parent:%ROOT%
order:500

For Unreal Engine 4 (UE4) documentation, custom extended markdown syntax is used and the files are stored in P4 with the engine. Hopefully, this means it will be easier to jump in and add/update documentation.

The basic workflow when creating or editing documentation is:

* Edit/Add a markdown file (`.udn`)
* Preview the page as HTML
* Repeat until you are happy with it and there are no errors
* Check-in the markdown file (use the `#doc` P4 tag for major changes/additions so we get alerted for tracking purposes)


## Markdown Files

The source markdown files are stored in P4 (at `//depot/UE4/Engine/Documentation/Source/`) and available directly in the UE4 solution in Visual Studio under the Documentation project. These files all use the .udn file extension so they are easily identified. They also contain the language code in the name, so all English markdown files are named `*.INT.udn`, Korean files are named `*.KOR.udn`, etc. You will only ever add or edit `*.INT.udn` files. The other languages are handled by the localization teams.

Since the files are in the solution, it is really easy to find and edit existing files. New files can be added through VS or manually. Just make sure you update the Documentation project files when adding new files manually using the new project file generator.

The syntax is basic standard markdown with our own additions. An overview of the syntax can be found on the [](DocumentationGuidelines\Syntax) page.

### Images and Attachments

Images and attachments for a particular page should be placed in corresponding `Images` and `Attachments` folders within the folder for that page. So, for example, the Unreal Editor User Guide is located in `Editor/UserGuide`. Within this folder is the `UnrealEdUserGuide.INT.udn` file and any localized versions of it. Also within this folder is an `Images` folder that contains all of the images for that particular page, and there could also be an `Attachments` folder to hold any attachments that might be necessary:

	+Editor
	 +UserGuide
	  +Images
	   -mainframe.png
	   -UnrealEd.png
	   -UnrealEd_banner.png
	  +Attachments
	  -UnreaEdUserGuide.INT.udn
	  -UnreaEdUserGuide.KOR.udn

Both the `Images` and `Attachments` folders are optional and only need to be present if the page contains images or attachments.

## UnrealDocTool

There is a plugin for Visual Studio that will highlight the .udn source files and also display a realtime preview of the page including notifying you of any errors. The plugin is available at:

	/depot/UE4/Engine/Extras/MarkdownMode/EpicMarkdownMode.vsix

Just run the .vsix installer and restart VS if it is running. When you open a .udn file, you will see something like this:

![](source_highlight.png)

Click the **Show Preview Window** button to see the realtime preview of the page:

[REGION:fullwidth]
![](markdown_preview.png)
[/REGION]

The preview will update as you modify the source. You can refresh at any time by saving the source file.

You can also drag images and .udn files directly into the text editor of VS to display the image or create a link to the page. The image can be dragged from any location and it will be added to the correct directory for the page.

**Images**

[REGION:fullwidth]
![](image_drag.png)(convert:false)
[/REGION]

**.UDN Files**

![](doc_drag.png)(convert:false)

### Manual Usage

There is a tool that converts the markdown to HTML. The only reason you ever need to use the tool is to preview the page you are working on. You will never have to actually generate and check-in an HTML page - this is done manually to the documentation as a whole periodically, and will eventually be handled by the builder. The tool is located at:

	UE4\Engine\Binaries\DotNET\UnrealDocTool.exe

You can simply run the .exe and use the GUI to generate the HTML version of the page in order to preview your work.

[REGION:note]
It is a command line program and instructions for using it in that manner can be found on the [](DocumentationGuidelines\UnrealDocTool) page.

The single file preview example is probably what you will want to use 99.9% of the time. This builds a temp version of the page and displays it in your default browser. The preview displays any errors - broken links, missing images, bad syntax, etc. - on the page so you can easily tell if something is not right and fix it.
[/REGION]

## Documentation Style

There are some conventions that should be followed when writing documentation for UE4 in order to try and maintain some consistency and uniformity between pages written by different people. The [](DocumentationGuidelines\StyleGuide) details these conventions.
