INTSourceChangelist:2598017
Availability:Docs
Keywords:メタデータはセミコロンでドキュメントの上部に追加します。
Title:Epic で使用している Markdown 記法と拡張機能
Crumbs:DocumentationGuidelines
Description:Epic がカスタマイズした Markdown 拡張機能を用いたドキュメンテーション ソース ファイルの作成方法

[TOC (start:2 end:3)]

[REGION:note]
**注記：** 本ドキュメントは Epic の Markdown を使用して [こちら](DocumentationGuidelines\SyntaxSource) でも記載しています。
[/REGION]

## 概要

Epic 版の Markdown は [MarkdownSharp](http://code.google.com/p/markdownsharp/) をベースとしています。MarkdownSharp は [PHP Markdown Extra](http://michelf.com/projects/php-markdown/) の機能をいくつか備えた [Markdown](http://daringfireball.net/projects/markdown/) をベースとしています。

本ドキュメントの目的は Epic の機能に対応するための拡張機能、特に Markdown Extra で対応する機能を説明することです。本ドキュメントはオリジナルドキュメント [Markdown Syntax](http://daringfireball.net/projects/markdown/syntax) の補足資料です。

## Epic 版の機能

### 目次と見出しの自動生成

ヘッダ生成を変更して、スペースを削除した見出しとなるブックマークが含まれるようにしました。複数のヘッダ名が同じ場合は、後続のヘッダに 2 で開始するインデックスを付け足して対応します。
正しいインデントでヘッダリストを生成し、ドキュメント上部にあるタグの \[TOC\] を置き換えます。

 \[TOC (start:HeadingStartLevel end:HeadingEndLevel)\] を指定すると、目次に含まれる見出しレベルを設定することができます。開始と終了をオプションの変数で、指定のない場合、開始は 1 、終了は 6 が与えられます。開始と終了はオプションの変数です。指定のない場合、開始は 1 、終了は 6 が与えられます。両方設定する場合は、終了変数は開始変数の後にきます。

スペースを削除した見出しにブックマークが含まれるように、ヘッダ生成を変更します。ヘッダの最初の文字が !! の時、目次にヘッダは含まれません。

#### Markdown 記法
	# 見出し
	[TOC(start:2)]

#### HTML 出力
	<h1 id="Heading1">Heading</h1>
	<ul><li><a href="#Heading">Heading</a></ul>


#### 結果
ページの冒頭にある目次は本セクション \[TOC\] (start:2 end:3) で説明した方法で生成されています。

### ドキュメント内のブックマークへのリンク付け

ユーザはドキュメント内へリンクするブックマークを付けるだけでなく、ドキュメント内のヘッダにもリンクを付けることができます。

#### Markdown 記法
	ファイル [目次と見出しの自動生成](#目次と見出しの自動生成) 内の見出しにリンクを付けた例です。ヘッダ テキストはテキスト内のスペースを削除するとリンク付けされます。さらに、 複数のヘッダに同じ名前が付いている場合、後に続くヘッダの名前の後にスペースをいれずに 2 、 3 などを付けて参照できます。 [Markdown Syntax 1]（#MarkdownSyntax）、 [Markdown Syntax 2]（#MarkdownSyntax2）、 [Markdown Syntax 3]（#MarkdownSyntax3） 
	[こちら](#Bookmark1) は、ドキュメント内にユーザー定義のブックマークをリンク付けした例です。
	(#Bookmark1) ブックマーク テキストは行頭文字でなければなりません。

#### HTML 出力
	<p> ファイル内の見出しにリンク付けした例です <a href="#AutogenerationofTableofContents">Auto generation of Table of Contents</a>.ヘッダ テキストはテキスト内のスペースを削除するとリンク付けされます。さらに、 複数のヘッダに同じ名前が付いている場合、後に続くヘッダの名前の後にスペースをいれずに 2,3 などを付けて参照できます <a href="#MarkdownSyntax">Markdown Syntax 1</a> <a href="#MarkdownSyntax2">Markdown Syntax 2</a> <a href="#MarkdownSyntax3">Markdown Syntax 3</a> </p>
	<p>ドキュメント内にユーザー定義のブックマークをリンク付けした例です <a href="#Bookmark1">Bookmark 1</a>.</p>
	<p><a id="Bookmark1"/> ブックマーク テキストは行頭文字でなければなりません。</p>

#### 結果

ファイル [目次と見出しの自動生成](#目次と見出しの自動生成) 内の見出しにリンクを付けた例です。ヘッダ テキストはテキスト内のスペースを削除するとリンク付けされます。さらに、 複数のヘッダに同じ名前が付いている場合、後に続くヘッダの名前の後にスペースをいれずに 2 、 3 などを付けて参照できます。 `[Markdown Syntax 1](#MarkdownSyntax)` `[Markdown Syntax 2](#MarkdownSyntax2)` `[Markdown Syntax 3](#MarkdownSyntax3)` 

[こちら](#Bookmark1) は、ドキュメント内にユーザー定義のブックマークをリンク付けした例です。

(#Bookmark1) ブックマーク テキストは行頭文字でなければなりません。

### ドキュメントの他のページへのリンク付け

他のページへは相対リンクを使用します。「markdown」フォルダにあるドキュメントは、 \%ROOT\% を使って参照します。リンク内では言語は指定されていません。今ご覧頂いている言語のファイルへリンク付けを前提としています。

#### Markdown 記法
	[UE4 Home](%ROOT%)
	[Unreal Editor User Guide](Engine/UI)

#### HTML 出力
	<a href="./../../../INT\index.html">UE4 Home</a>
	<a href="./../../../INT\Editor\index.html">Unreal Editor User Guide</a>

#### 結果
[UE4 Home](%ROOT%)

[Unreal Editor User Guide](Engine/UI)

### ローカル画像へのリンク付け

画像フォルダを参照する必要はありません。画像がドキュメント内の他のページに属している場合のみ他のパスを参照する必要があります。リンク内で言語の指定がなければ、まず言語フォルダの画像ディレクトリで画像を探し、次に INT 画像フォルダを探します。

#### Markdown 記法
	![Logo](Logo_Epic-New.jpg)
	![Editor Viewport](Engine/UI/LevelEditor\Viewports\viewport.png) 

#### HTML 出力
	<img alt="Logo" src="./../../../images\EpicMarkdownDocGuides\EpicMarkdownExtension\Logo_Epic-New.jpg"/>
	<img alt="Editor Viewport" src="./../../../images\Editor\viewport.png"/>

#### 結果
![Logo](Logo_Epic-New.jpg)

![Editor Viewport](Engine/UI/LevelEditor\Viewports\viewport.png)

### 画像のプロパティ

画像のフォーマット指示および変換方法は指定できる方がよいです。

	(w: h: a: convert: type: quality: fill: )

* 	**w:** 画像の表示幅これを省略すると、高さが指定されていなければソース画像の幅が使用され、その場合、ソース画像比に与えられた高さに対応する正しい幅が使用されます。
*	**h:** 画像表示高さこれを省略すると、幅が指定されていなければソース画像の高さが使用され、その場合、ソース画像比に与えられた幅に対応する正しい高さが使用されます。
*	**a:** 左、右、通常（初期値）のフロートスタイルが画像に指定されていることを表します。デフォルトはなしです。
*   **convert:** 画像を異なるタイプに圧縮 / 変換すべきかを `false` または `true` 値で表します。デフォルトは true です。クオリティを維持したい場合、または GIF がアニメートされている場合などリソース形式が重要な場合には false に設定します。
*	**type:** 画像形式は `jpg`、`png`、`gif` のいずれかに変換できます。デフォルトは `jpg` です。
* 	**クオリティ** 圧縮品質が jpeg となります (`1`-`100`)。圧縮クオリティのデフォルトは `80` です。デフォルト値のアッシュでは画像レベルを劣化させるアーティファクトが発生する場合は、この値を下げると便利です。
*	**fill:** * jpg 形式に変換されている場合、画像の背景色番号を示す 16 進数で入力したカラー (使用形式：`#0088FF`)。デフォルトは `#FFFFFF`です。

[REGION:note]
	* オプションの順番は重要ですが、それぞれ任意で省略可能、または画像情報の後ろのブラケットをまるまる省略することが可能です。
	* 変換パラメータがない場合、「 app.config 」ファイルのデフォルト値が使用されます。
	* 既存の Markdown 画像包含方法であるインライン方法と参照方法は、両方とも拡張して初期化に対応しています。
	* 画像を右または左に並べると、関係のないコンテンツに画像が囲まれてしまうことがあります。* 例えば、新しいセクションの開始時にヘッダが関係のない画像の横に流れてしまうことがあります。段落内のテキストは画像に平行になります。スタイルシート要素を使用して「クリアな」 [リージョン](#リージョン) の追加することでフロートスタイルをクリアするタイミングを操作し、レベル 1 、2 と hr 要素の回り込みが停止します。
[/REGION]


#### Markdown 記法
    右 ![Epic Logo](Logo_Epic-New.jpg "Here's a title")(a:right) フロートを指定、高さ、幅をブランクのままにしたインライン イメージです。
    幅、高さ、左をフローとにしたリファレンス イメージ ![Epic Logo][refepiclogo] です。
    [refepiclogo]:Logo_Epic-New.jpg "Here's a title"(w:50 h:50 a:left convert:true quality:75 fill:#000000)
	段落内のテキストは画像に平行になります。特別な div エレメントをフロートの終わりに置きます。
	[REGION:clear]
		[COMMENT:none]
 clear float 
[/COMMENT]
	[/REGION]    

#### HTML 出力
	<p>右 <img style="float: right;" title="Here's a title" alt="Epic Logo" src="./../../../images\EpicMarkdownDocGuides\EpicMarkdownExtension\Logo_Epic-New.jpg"/> フロートを指定、高さ、幅をブランクのままにしたインライン イメージです。</p>
	<p>幅、高さ、左をフローとにしたリファレンス イメージ <img width="50" height="50" style="float: left;" title="Here's a title" alt="Epic Logo" src="./../../../images\EpicMarkdownDocGuides\EpicMarkdownExtension\Logo_Epic-New.jpg"/> です。</p>
	<p>段落内のテキストは画像に平行になります。特別な div エレメントをフロートの終わりに置きます。</p>
	[REGION:clear]
		[COMMENT:none]
 clear float 
[/COMMENT]
	[/REGION]
    
#### 結果
右フロート指定で、高さと幅の左をブランクにしたインライン イメージです ![Epic Logo](Logo_Epic-New.jpg "Here's a title")(a:right)。

幅、高さ、左をフローとにしたリファレンス イメージ ![Epic Logo][refepiclogo] です。

[refepiclogo]:Logo_Epic-New.jpg "Here's a title"(w:50 h:50 a:left convert:true quality:75 fill:#000000)

段落内のテキストは画像に平行になります。特別な div エレメントをフロートの終わりに置きます。

[REGION:clear]
	[COMMENT:none]
 clear float 
[/COMMENT]
[/REGION]

### テーブル
テーブルが実装されています。MultiMarkdown 記法で利用できるフォーマットはかなり融通がききますので、 Epic のベースとして選びました。

*	 ヘッダ行のテーブルデータのアライメントを示すためにコロンを記述します。
*	 行の最初と最後にパイプ文字を記述することもできますし、省略することもできます。
*	 キャプションの追加が可能です。
*	 コルスパンが使用できます。
*	 ロースパンを使用するにはセルに ^ を使います。


#### Markdown 記法
	[表 1 - ヘッダー上部]				    
	|             | Grouping                      ||   
	 First Header | Second Header  | Third Header  |  
	 ------------ | :------------: | ------------: |  
	 Content      |          *Long Cell*          ||  
	 Content      |      **Cell**  |         Cell  |  
	 New section  |     More       |         Data  |  
	     ^        |            And more           || 


	 ------------ | :------------: | ------------: |  
	 Content      |          *Long Cell*          ||  
	 Content      |      **Cell**  |         Cell  |  
	 New section  |     More       |         Data  |  
	     ^        |            And more           || 

	[表 2 - ヘッダー右側] 				   
	| ------------ | :------------: | ------------: |  
	|  Content      |          *Long Cell*          ||  
	|  Content      |      **Cell**  |         Cell  |  
	|  New section  |     More       |         Data  |  
	| 	 ^        |            And more           || 


#### HTML 出力

	<table>
	<caption> テーブル 1 - ヘッダを上に配置した場合 </caption>
	<colgroup><col/>
	<col align="center"/>
	<col align="right"/>
	</colgroup><thead>
	<tr>
		<th colspan="1"/>
		<th colspan="2">Grouping</th>
	</tr>
	<tr>
		<th colspan="1">First Header</th>

		<th colspan="1">Second Header</th>
		<th colspan="1">Third Header</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td colspan="1">Content</td>
		<td align="center" colspan="2"><em>Long Cell</em></td>
	</tr>

	<tr>
		<td colspan="1">Content</td>
		<td align="center" colspan="1"><strong>Cell</strong></td>
		<td align="right" colspan="1">Cell</td>
	</tr>
	<tr>
		<td rowspan="2" colspan="1">New section</td>
		<td align="center" colspan="1">More</td>

		<td align="right" colspan="1">Data</td>
	</tr>
	<tr>
		<td align="center" colspan="2">And more</td>
	</tr>
	</tbody>
	</table>

	<table>
	<caption>テーブル 2 - ヘッダを右に配置した場合</caption>
	<colgroup><col/>
	<col align="center"/>
	<col align="right"/>
	</colgroup><tbody>
	<tr>
		<th colspan="1">Content</th>
		<td align="center" colspan="2"><em>Long Cell</em></td>
	</tr>
	<tr>

		<th colspan="1">Content</th>
		<td align="center" colspan="1"><strong>Cell</strong></td>
		<td align="right" colspan="1">Cell</td>
	</tr>
	<tr>
		<th rowspan="2" colspan="1">New section</th>
		<td align="center" colspan="1">More</td>

		<td align="right" colspan="1">Data</td>
	</tr>
	<tr>
		<td align="center" colspan="2">And more</td>
	</tr>
	</tbody>
	</table>	

#### 結果

[表 1 - ヘッダー上部]			    
|	          | Grouping                      ||   
 First Header | Second Header  | Third Header  |  
 ------------ | :-----------:  | -----------:  |  
 Content      |          *Long Cell*          ||  
 Content      |      **Cell**  |         Cell  |  
 New section  |     More       |         Data  |  
     ^        |            And more           || 

アライメント行上にヘッダ情報を持たない場合、一番左のカラムをヘッダと見なします。

[表 2 - ヘッダー右側]
| ------------ | :------------: | ------------: |  
|  Content      |          *Long Cell*          ||  
|  Content      |      **Cell**  |         Cell  |  
|  New section  |     More       |         Data  |  
| 	 ^        |            And more           || 

### メタデータ
メタデータは、メタデータ用 MultiMarkdowns 記法に沿って、以下のルールで実装されます。

*	 メタデータはドキュメントの一番上から開始します。前に行を挿入しないでください。
*	 メタデータはキーと値で構成されます。
*	 メタデータキーは行頭から開始します。先頭文字は文字まはた数字とします。ただし、 2 文字目以降は文字、数字、スペース、ハイフン、下線で組み合わせることができます。
*	 メタデータキーの終わりをコロンで指定します。
*	 コロンの後にメタデータ値を入れます。この値はほぼどんな文字の組み合わせでも大丈夫です（新しい行を除く） 
*	 メタデータが完了したら、ブランク行が残りの文書の開始をトリガーします。


メタデータはすべてドキュメントのヘッダにある <meta name="Key" content="Value"/> html ブロックに置かれます。
上記以外にも特殊な機能をもつキーがあります。

* タイトルメタデータはヘッダブロック <title> タイトル </title> で使用されます。
* HtmlDocumentType のメタデータは、 「include/templates」 フォルダの中で html 生成に使用するテンプレートを定義するために使用されます。存在しない場合は、 default.html テンプレート ファイルが使用されます。
* DoIndex:false からインデクサに、インデックスからドキュメントを排除し結果を検索するよう指示がでます。文書はすべて true がデフォルト値になっています。
* ForcePublishFiles: を使用して、添付と画像を「 html 」フォルダに強制的に公開することができます。


#### Markdown 記法
	Keywords:メタデータはセミコロンでドキュメントの上部に追加します。
	Title:これによりドキュメント タイトルが指定されますが、マテリアルが見つからない場合、ドキュメントへのパスがタイトルとして使用されます。


#### HTML 出力
	<title>これによりドキュメント タイトルが指定されますが、マテリアルが見つからない場合、ドキュメントへのパスがタイトルとして使用されます。</title>
	<meta name="Keywords" content="メタデータはセミコロンでドキュメントの上部に追加します" />
	<meta name="Title" content="これによりドキュメント タイトルが指定されますが、マテリアルが見つからない場合、ドキュメントへのパスがタイトルとして使用されます。" />

#### 結果
タイトル メタ タグにおいてドキュメント タイトル バーが更新されているのがわかります。
ドキュメント ソースを表示するとドキュメント ヘッドにメタ データが表示されます。

### 定義リスト

定義リストに対応する記法が変換に追加されています。定義リストのアライメントと埋め込みについては、 Markdown スタンダードリストと同じルールが適用されます。

#### Markdown 記法
	定義リスト要素が上位:
	$ 定義 1 :説明 1
	$ 定義 2 :説明 2
		* リスト要素 1
			1. Ordered
			1. Ordered
		* リスト要素 2
	$ 定義 3:説明 3


	埋め込まれる定義リスト要素:
	* リスト要素 1
		$ 定義 1 :説明 1
		$ 定義 2 :説明 2
	* リスト要素 2

#### HTML 出力

	<dl>
	<dt>定義 1 </dt>
	<dd>説明 1</dd>
	<dt>定義 2 </dt>
	<dd>説明 2

	<br/>
	<ul>
	<li>リスト要素 1
	<br/>
	<ol>
	<li>Ordered</li>
	<li>Ordered</li>
	</ol></li>
	<li>リスト要素 2</li>
	</ul></dd>
	<dt>定義 3</dt>
	<dd>説明 3</dd>

	</dl>

	<ul>
	<li>リスト要素 1
	<br/>
	<dl>
	<dt>定義 1 </dt>
	<dd>説明 1</dd>
	<dt>定義 2 </dt>
	<dd>Description 2</dd>

	</dl></li>
	<li>リスト要素 2</li>
	</ul>

#### 結果

定義リスト要素が上位:
$ 定義 1 :説明 1
$ 定義 2 :説明 2
	* リスト要素 1
		1. Ordered
		1. Ordered
	* リスト要素 2
$ 定義 3:説明 3


埋め込まれる定義リスト要素:
* リスト要素 1
	$ 定義 1 :説明 1
	$ 定義 2 :説明 2
* リスト要素 2


###バックスラッシュ以外に使用できるエスケープ文字

Markdown 記法で使用できるエスケープ文字に加えて、以下の文字も可能です。

    > より大きい
    |	パイプ
    	10 %

## Markdown Extra で使用されている機能

### ボールドとイタリック

_斜体_ と _太字_ 記法の左右にはスペースを入れてください。File_names_including_underscores で使用する場合の誤検出をなくすためです。

### フェンスド コード ブロック

#### Markdown 記法
`~~~`

3 つ以上のフェンスラインで囲まれたコード

`~~~`

#### HTML 出力
	<pre class="prettyprint"><code> 3 つ以上のフェンスラインで囲まれたコード
	</code></pre>

#### 結果
~~~
3 つ以上のフェンスラインで囲まれたコード
~~~

### リージョン

リージョンとは一般的に、 HTML の div など、スタイルを適用できるエリアを指します。この記法を用いてリージョンを指定することができます。

	[REGION:stylename]
	...
	[/REGION]

HTML では以下のように変換されます。

	<div class="stylename">
	...
	</div>

css ファイルのスタイル ルールに従って作成しなければなりません。

	.stylename
	{
		background:#123456;
		border:1px solid #654321;
	}

#### ビルトイン リージョン

リージョンに適用するスタイルの中には、注記事項、ヒント、警告、引用など共通項目に対しては既に存在するものもあります。

	[REGION:note]
	これはノートです。黄色のボックス内の左上に注記事項を表すアイコンが表示されています。
	[/REGION]

[REGION:note]
これはノートです。黄色のボックス内の左上に注記事項を表すアイコンが表示されています。
[/REGION]

	[REGION:tip]
	これはヒントです。緑色のボックス内の左上にヒントを表すアイコンが表示されています。
	[/REGION]

[REGION:tip]
これはヒントです。緑色のボックス内の左上にヒントを表すアイコンが表示されています。
[/REGION]

	[REGION:warning]
	これは警告です。赤のボックス内の左上に警告を表すアイコンが表示されます。
	[/REGION]

[REGION:warning]
これは警告です。赤のボックス内の左上に警告を表すアイコンが表示されます。
[/REGION]

	[REGION:quote]
	これは引用テキストです。青のボックス内の左上に引用を表すアイコンが表示されます。
	[/REGION]

[REGION:quote]
これは引用テキストです。青のボックス内の左上に引用を表すアイコンが表示されます。
[/REGION]

### オブジェクト

オブジェクト システムは上述のリージョンに対し、より柔軟かつ多用途です。スタイルシートでスタイルにリージョンが対応するのと同じように、オブジェクトもテンプレートに保存されているマークアップのブロックに対応します。これにより、任意のマークアップがドキュメント内に挿入できるようになります。

オブジェクトは `OBJECT` タグを使って作成されます。オブジェクト名は色 (`:`) でタブとは別に指定します。最も基本的なオブジェクトがこれです。

	[OBJECT:TemplateName][/OBJECT]

一致するテンプレートには、どのドキュメントでもオブジェクト タグのインスタンスを置き換える HTML マークアップ、 javascript などの種類が含まれることがあります。

#### テンプレート

テンプレートは `Include/Template/Objects` ディレクトリに格納されている HTML ファイルです。オブジェクトはテンプレート名でテンプレートにマッチするので、テンプレート名は重要です。例えば、 `VideoPlayer` というオブジェクト名は `VideoPlayer.html` テンプレート内にあるマークアップに置き換わります。

	[OBJECT:VideoPlayer][/OBJECT] <-> VideoPlayer.html

#### パラメータ

情報とコンテンツをテンプレートに渡し、ドキュメントに再度挿入する前にマークアップへ挿入すると、オブジェクトをより多用途に使用できます。こうすることで、同じテンプレートでも用途を柔軟にすることができます。ドキュメント内で単純に置き換えているだけではなく、この方法でオブジェクトを設定することが可能です。

ノーマルとリテラルという 2 種類のパラメータが利用できます。ノーマル パラメータはページ内でノーマル コンテンツとしてパースされます。つまり、マークダウン記法を含むことができるので、マークダウンとして処理されます。リテラル パラメータは全くパースされません。ドキュメント内に表示されたとおりにテンプレートへそのまま簡単にコピーされます。

パラメータをテンプレートへ渡すには、 `PARAM` タグと `PARAMLITERAL` タグをオブジェクト内で使用します。パラメータ名は色 (`:`)でタブとは別に指定します。以下は最もシンプルなパラメータの形です。

	[PARAM:ParamName]ParamData[/PARAM]

と 

	[PARAMLITERAL:ParamName]ParamData[/PARAMLITERAL]

次に、各パラメータのデータを使って、以下の形を取るテレンプレートのパラメータ タグを置き換えます。

	{ParamName}

以下は、前述の VideoPlayer Object を使ったパラメータの例です。

	[OBJECT:VideoPlayer]
		[PARAM:title]The **Awesome** Video[/PARAM]
		[PARAMLITERAL:video]AwesomeVideo.mp4[/PARAMLITERAL]
		[PARAM:related]
			* [Video 1](#Video1)
			* [Video 2](#Video2)
			* [Video 3](#Video3)
			* [Video 4](#Video4)
		[/PARAM]
	[/OBJECT]

VideoPlayer Object 用テンプレートには以下が含まれます。

	<div class="videoplayer">
		<div class="title">{title}</div>
		<video>
			<source src="{video}" type="video/mp4">
		</video>
		<div class="related_links">
			{related}
		</div>
	</div>

HTML ページ出力をすると、VideoPlayer Object は以下のように置き換わります。

	<div class="videoplayer">
		<div class="title">The <strong>Awesome</strong> Video</div>
		<video>
			<source src="AwesomeVideo.mp4" type="video/mp4">
		</video>
		<div class="related_links">
			<ul>
				<li><a href="#Video1">Video 1</a></li>
				<li><a href="#Video2">Video 2</a></li>
				<li><a href="#Video3">Video 3</a></li>
				<li><a href="#Video4">Video 4</a></li>
			</ul>
		</div>
	</div>

### Lightboxes

画像およびその他のコンテンツは、「Lightbox の」 [リージョン](#リージョン) 内でリンクを囲むと、ページ上に重ねられた Lightbox で表示されます。

### 画像を Lightbox に表示する

_テキスト_ をリンクする場合は表示またはサムネイル表示しますが、画像の場合はページ上に重なった全画面の画像がリンク先になるようにします。[画像のプロパティ](#画像のプロパティ) を使用すれば、同じ画像に対し画像表示サイズを制限することも可能です。

記法：

	[REGION:lightbox]
		[![](Engine/UI/LevelEditor/Editor.png)(w:480)](Engine/UI/LevelEditor/Editor.png)
	[/REGION]

結果：

[REGION:lightbox]
	[![](Engine/UI/LevelEditor/Editor.png)(w:480)](Engine/UI/LevelEditor/Editor.png)
[/REGION]

### ファイルと抜粋をインクルード

1 ページ全部のコンテンツまたはサブセクションを別の場所へインクルードすることができます。

ページ全体をインクルードするには、以下のように記述します。

	[INCLUDE:Engine/Landscape]

この記法で 1 ページがまるごと変換され、上記の行が含まれるページへ挿入されます。

以下のように記述すると、ページ内に抜粋を定義することができます。

	[EXCERPT:TerrainLayerCoords]
	...
	[/EXCERPT:TerrainLayerCoords]

この抜粋をインクルードするには以下のように記述します。

	[INCLUDE:Engine/Landscape/Materials#TerrainLayerCoords]

結果 (引用リージョンに表示)：

[REGION:quote]
[INCLUDE:Engine/Landscape/Materials#TerrainLayerCoords]
[/REGION]
