Availability:Docs
Keywords: Unreal Document Tool Usage Guide
Title: Guidelines for using the Unreal Document Tool
Crumbs:DocumentationGuidelines
Description:How to use the UnrealDoctool for previewing and publishing documentation source files.

[TOC(start:2)]

## Command Line Switches

	UnrealDocTool <File Path>|<Directory Path> [-r] [-lang=lang1[,lang2[...,langn]]] [-t=TemplateName] [-log] [-p] [-h] [-o] [-s]

The tool will attempt to convert either a single file or directory from Epic Markdown to HTML, or display usage information with the -h option.  A html file will only be generated if there are no issues raised and all linked document and image files can be found.

UnrealDocToolLogs, a log subdirectory of the executable, is created which contains saved information printed to the command line during each run.

### File Name or Directory Name
If a file path is specified, it can be either relative from the [source](#-sSource) directory or absolute.

The following command line options are available when converting a single file:
*	[-log Log](#-logLog)
*	[-p Preview](#-pPreview)
*	[-t Template Name](#-tTemplateName)
*	[-o Output](#-oOutput)
*	[-s Source](#-sSource)
*       [-clean Clean](#-cleanClean)

Alternatively, if a directory path is specified instead of a file path, the following options are available; again the path can be either relative from the [source](#-sSource) directory or absolute.
*	[-log Log](#-logLog)
*	[-lang Language](#-langLanguage)
*	[-r Recursive](#-rRecursive)
*	[-t Template Name](#-tTemplateName)
*	[-o Output](#-oOutput)
*	[-s Source](#-sSource)


### -log Log

If the Log switch is used, then no files are generated.  Each file, however, is analyzed and errors or successes are logged.

### -p Preview

Preview mode can be used to generate an html file in the temporary directory, allowing an iterative document writing style.  The document will always generate in the temporary directory whether there are errors with the markdown or not.

Errors are listed towards the top of the document in the Documentation Generation Errors section.  The errors are linked to and highlighted within the document for easily identifying the location of the error in the Markdown.

Preview mode takes precedence over the Log mode if both are specified on the command line.

### -t Template Name

Allows you to choose which template to generate against, the template files are stored in the [Source Directory](#-sSource)\include\templates.  

It is optional and if not specified on the command line, the value for DefaultTemplate in UnrealDocTool.exe.config is used.  The command line switch takes precedence over the config file value.

### -clean Clean
Delete the localized version of duplicate image files in the source directory only; -s parameter is used with this, all duplicates in -s will be removed.

### -lang Language

Allows you to choose which languages in directory mode to generate html for.

It is optional and if not specified on the command line, the value for SupportedLanguages in UnrealDocTool.exe.config is used.  The command line switch must be a comma separated list of a subset of the SupportedLanguages from the config file.

### -r Recursive

Recursively step through the directory structure from the Directory Path directory and subdirectories.

### -s Source

The Source argument is the path to the source Markdown Folder.  It can be either relative from the executable or absolute.  It is optional and if not specified on the command line, the value for SourceDirectory in UnrealDocTool.exe.config is used.  The command line switch takes precedence over the config file value.

Below is a diagram showing the source directories layout, to the right is the relationship between the files in the source directory and where in the output directories they are placed.

![Source Folders](MarkdownFolderStructure.jpg)


### -o Output

The output argument is the path to the output directory.  It can be either relative from the executable or absolute.  It is optional and if not specified on the command line, the value for OutputDirectory in UnrealDocTool.exe.config is used.  The command line switch takes precedence over the config file value.

It is ignored when the -p option is used.


The following diagram shows the relationship between the source folder structure and where files are output to.

![Folder Relationship](FolderRelationships.jpg)

## Examples


### Single file preview

	UnrealDocTool EpicMarkdownDocGuides\UnrealDocumentToolUsuage\UnrealDocToolUsuage.INT.udn -p -s=C:\UDN\Markdown -o=C:\UDN\Docs

Run the tool in preview mode where the file will be converted and information about errors will be highlighted on the web page.  The page opens in your default browser.  The file is located in the source directory combined with the File Path specified C:\UDN\Markdown\EpicMarkdownDocGuides\UnrealDocumentToolUsuage\UnrealDocToolUsuage.INT.udn


### Single file

	UnrealDocTool EpicMarkdownDocGuides\UnrealDocumentToolUsuage\UnrealDocToolUsuage.INT.udn -s=C:\UDN\Markdown -o=C:\UDN\Docs
	
Provided there are no errors, the file will have been converted and will be in the output directory in `C:\UDN\Docs\<Language>\EpicMarkdownDocGuides\UnrealDocumentToolUsuage\index.html` where Language in this example is INT.


### Recursively Process Directories

1.	Convert Korean and English files for the entire subdirectory when the config file is set up with correct values for SourceDirectory and OutputDirectory.

		UnrealDocTool . -r -lang=INT,KR
	
2.  All languages with correct directories in the config file

		UnrealDocTool . -r

	
### Validate all documents
	UnrealDocTool . -r -log -s=C:\UDN\Markdown -o=C:\UDN\Docs
	
### Run tool for specific folder all languages
	UnrealDocTool Animation -s=C:\UDN\Markdown -o=C:\UDN\Docs





