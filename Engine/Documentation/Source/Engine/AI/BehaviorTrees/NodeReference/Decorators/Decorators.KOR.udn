INTSourceChangelist:3782314
Availability:Public
Title: 비헤이비어 트리 노드 레퍼런스 - 데코레이터
Crumbs:%ROOT%, Engine, Gameplay, Engine/AI/BehaviorTrees
Description:비헤이비어 트리의 Decorator, 데코레이터 노드에 대한 레퍼런스입니다.
version: 4.9

[TOC(start:2 end:2)]


**Decorator**, 데코레이터는 다른 비헤이비어 시스템에서는 조건절이라고도 하는데, [**Composite**](Engine/AI/BehaviorTrees/NodeReference/Composites), 컴포짓이나 [**Task**](Engine/AI/BehaviorTrees/NodeReference/Tasks) 태스크 노드에 붙여 트리 내 분기 또는 노드 하나라도 실행할 것인지를 정의하는 것입니다.

## Blackboard

![](Blackboard.png)

Blackboard, 블랙보드 노드는 주어진 블랙보드 키에 값이 설정되었는지 검사해 봅니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Notify Observer** | [INCLUDE:#subprop2] |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Key Query** | [INCLUDE:#subprop4] |
| **Blackboard Key**| 블랙보드 키 - 검사할 키 입니다. Object 처럼 `None` 반환이 가능한 데이터 유형에 가장 유용한데, 다른 유형은 (0, false, {0,0,0}, 등등) 초기화된 값을 반환할 수가 있기 때문입니다. |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

[COMMENT:none]

[EXCERPT:subprop2]
| --- | --- |
| **On Result Change** | 결과 변경시 - 조건이 변경되었을 때만 재평가합니다. |
| **On Value Change** | 값 변경시 - 관찰된 블랙보드 키 변경시에만 재평가합니다. |
[/EXCERPT:subprop2]

[EXCERPT:subprop3]
| --- | --- |
| **None** | 없음 - 아무것도 중단하지 않습니다. |
| **Self** | 자신 - 자신과 이 노드 아래 실행중인 서브 트리도 중단합니다. |
| **Lower Priority** | 하위 우선권 - 이 노드보다 오른쪽에 있는 노드를 중단합니다. |
| **Both** | 양쪽 - 자신, 그 아래 실행중인 서브 트리, 이 노드 오른쪽에 있는 노드를 중단합니다. |
[/EXCERPT:subprop3]

[EXCERPT:subprop4]
| --- | --- |
| **Is Set** | 설정 되었는지? - 값이 설정되었는가? 입니다. |
| **Is Not Set** | 설정되지 않았는지? - 값이 설정되지 않았는가? 입니다. |
[/EXCERPT:subprop4]

[/COMMENT]

## Compare Blackboard Entries

![](CompareBBEntries.png)

Compare Blackboard Entries, 블랙보드 항목 비교 노드는 두 블랙보드 키 값을 비교한 결과(, `equal to` 또는 `not equal to`) 에 따라 노드의 실행을 막거나 허용합니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Operator** | [INCLUDE:#subprop5] |
| **Blackboard Key A**| 블랙보드 키 A - 이 비교에 사용할 첫 번째 키 입니다. |
| **Blackboard Key B**| 블랙보드 키 B - 이 비교에 사용할 두 번째 키 입니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

[COMMENT:none]

[EXCERPT:subprop5]
| --- | --- |
| **Is Equal To** | 동일한지 - 두 키가 서로 같은가? 입니다. |
| **Is Not Equal To** | 동일하지 않은지 - 두 키가 서로 다른가? 입니다. |
[/EXCERPT:subprop5]

[/COMMENT]

## Composite

![](Composite.png)

Composite Decorator Node, 컴포짓 데코레이터 노드는 전체 블루프린트만큼은 아니지만 내장된 노드보다는 복잡한 고급 로직을 짤 수 있도록 해 줍니다. 노드에 컴포짓 데코레이터를 추가한 이후 더블클릭하면 컴포짓의 그래프가 뜹니다. 그래프 영역에 **우클릭** 하면 데코레이터 노드를 독립형 노드로 추가시킬 수 있으며, 그런 다음 `AND` / `OR` / `NOT` 노드를 통해 연결하여 좀 더 고급 로직을 만들 수 있습니다:

![](CompositeGraph.png)(w:940)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Composite Name** | 컴포짓 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |
| **Show Operations** | 연산 표시 - 연산이 노드에 텍스트로 나타나도록 합니다. |

## Conditional Loop

조건 루는 **Key Query** 조건을 충족하는 한, 이 데코레이터가 붙어있는 노드를 반복시킵니다.

![](ConditionalLoop.png)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 노드가 표시할 이름입니다. |
| **Key Query** | [INCLUDE:#subprop4] |
| **Blackboard Key** | 블랙보드 키 - 검사할 키입니다. Object 처럼 `None` 을 반환할 수 있는 데이터 유형에 가장 좋은데, 다른 유형은 초기화된 값(0, false, {0,0,0}, 등)을 반환할 수 있기 때문입니다. |


## Cone Check

![](ConeCheck.png)

Cone Check, 원뿔 검사 데코레이터는 3 벡터 키를 받습니다. 첫 번째는 원뿔의 시작 위치, 두 번째는 원뿔이 향하는 방향, 세 번째는 원뿔 안에 있는지 검사할 위치입니다. 원뿔의 각도는 **Cone Half Angle** (원뿔 반각) 프로퍼티로 정의합니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Cone Half Angle** | 원뿔 반각 - 원뿔의 절반 각도입니다. 즉 90 도 원뿔의 경우, 이 값을 45 도로 설정해야 합니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Cone Origin** | 원뿔 원점 - 원뿔의 시작(뾰족 부분) 위치입니다. |
| **Cone Direction** | 원뿔 방향 - 원뿔의 입 부분이 향하는 방향입니다. |
| **Observed** | 피관찰자 - 원뿔 안에 있는지 검사할 액터의 위치입니다. |
| **Inverse Condition** | 조건 반전 - 결과를 (_true_ 를 _false_ 로, _false_ 를 _true_ 로) 반전시킬지 입니다. |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Cooldown

![](Cooldown.png)

Cooldown, 쿨다운 노드는 쿨다운 시간이 다될 때까지 노드 또는 분기의 실행을 막습니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Cool Down time** | 쿨 다운 시간 - 쿨다운 데코레이터가 이 노드 실행을 막을 기간으로, 초 단위입니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Does Path Exist

![](DoesPathExist.png)

Does Path Exist, 경로 존재 여부 노드는 블랙보드 키 A 와 블랙보드 키 B, 두 벡터 사이에 경로를 만들 수 있는지 검사해 봅니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Blackboard Key A**| 블랙보드 키 A - 경로의 첫 번째 위치입니다. |
| **Blackboard Key B**| 블랙보드 키 B - 경로의 두 번째 위치입니다. |
| **Path Query Type** | [INCLUDE:#subprop6] |
| **Inverse Condition** | 조건 반전 - 결과를 (_true_ 를 _false_ 로, _false_ 를 _true_ 로) 반전시킬지 입니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Filter Class** | 필터 클래스 - 어느 내비게이션 데이터를 사용할지 입니다. None 으로 설정되면 기본 내비게이션 데이터가 사용됩니다. |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

[COMMENT:none]

[EXCERPT:subprop6]
| --- | --- |
| **NavMesh Raycast 2D** | 내비메시 레이캐스트 2D - 정말 빠릅니다. |
| **Hierarchical Query** | 계층구조식 쿼리 - 빠릅니다. |
| **Regular Path Finding** | 일반 길찾기 - 느립니다. |
[/EXCERPT:subprop6]

[/COMMENT]

## Force Success

![](ForceSuccess.png)

Force Success, 강제 성공 데코레이터는 노드 결과를 성공으로 바꿉니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Gameplay Tag Condition

![](GameplayTagCondition.png)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Actor to Check** | 검사할 액터 - 검사할 액터로의 레퍼런스가 들어있는 블랙보드 키입니다. |
| **Tags to Match** | 태그 일치 - 데코레이터가 **Gameplay Tags** 프로퍼티에 나열된 태그를 **Any** (부분) 또는 **All** (전부) 일치시킬지 입니다. |
| **Gameplay Tags** | 게임플레이 태그 - 이 데코레이터에서 사용할 태그 선택을 위한 게임플레이 태그 에디터를 로드합니다. |
| **Inverse Condition** | 역조건 - 이 데코레이터의 결과를 반전시킬지 입니다. (false 는 true 가, true 는 false 가 됩니다) |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Is Blackboard Value of Given Class

![](IsBlackboardValueOfGivenClass.png)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Test Class** | 테스트 클래스 - 블랙보드 키 프로퍼티의 오브젝트 클래스에 대해 테스트할 클래스 유형입니다. |
| **Blackboard Key** | 블랙보드 키 - 테스트 대상 블랙보드 키 입니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 노드가 표시할 이름입니다. |

## Keep in Cone

![](KeepInCone.png)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Cone Half Angle** | 원뿔 반각 - 원뿔의 절반 각도입니다. 즉 90 도 원뿔의 경우, 이 값을 45 도로 설정해야 합니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Cone Origin** | 원뿔 원점 - 원뿔의 시작(뾰족 부분) 위치입니다. |
| **Observed** | 피관찰자 - 원뿔 안에 있는지 검사할 액터의 위치입니다. |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Loop 
	
![](Loop.png)

Loop, 루프는 노드나 브랜치를 수 회, 또는 무한 반복합니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Num Loops** | 루프 횟수 - 루프 실행 횟수입니다. |
| **Infinite Loop** | 무한 루프 - 이 루프를 무한히 실행할지 입니다. |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Reached Move Goal

![](ReachedMoveGoal.png)

Reached Move Goal, 이동 목표 도달됨은 (캐릭터 무브먼트 컴포넌트가 있는) 폰의 경로를 검사하여, 폰이 이동 목표에 도달한 경우 성공을 반환합니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Inverse Condition** | 조건 반전 - 결과를 (_true_ 를 _false_ 로, _false_ 를 _true_ 로) 반전시킬지 입니다. |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Set Tag Cooldown

![](SetTagCooldown.png)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Cooldown Tag** | 쿨다운 태그 - 쿨다운(재사용 대기)에 사용할 게임플레이 태그입니다. |
| **Cooldown Duration** | 쿨다운 기간 - 쿨다운의 초 단위 기간입니다. |
| **Add to Existing Duration** | 기존 기간에 추가 - 주어진 게임플레이 태그에 기존 쿨다운이 있을 경우, 거기에 추가시킬지 입니다. |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Tag Cooldown

![](TagCooldown.png)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Cooldown Tag** | 쿨다운 태그 - 쿨다운(재사용 대기)에 사용할 게임플레이 태그입니다. |
| **Cooldown Duration** | 쿨다운 기간 - 쿨다운의 초 단위 기간입니다. |
| **Add to Existing Duration** | 기존 기간에 추가 - 주어진 게임플레이 태그에 기존 쿨다운이 있을 경우, 거기에 추가시킬지 입니다. |
| **Adds/Sets Cooldown on Deactivation** | 비활성화시 쿨다운 추가/설정 - 데코레이터 비활성화시 쿨다운 태그의 값을 추가/설정 할 것인지 말 것인지 입니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |

## Time Limit

![](TimeLimit.png)

Time Limit, 시간 제한 데코레이터는 분기나 노드 완료시까지 일정 기간 기다린 다음 멈추거나 빠져나옵니다. 노드가 포커스를 받을 때마다 타이머가 리셋됩니다.

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Time Limit** | 시간 제한 - 이 기간 이후 노드를 빠져나갑니다. 초 단위입니다. |
| **Observer Aborts** | [INCLUDE:#subprop3] |
| **Node Name** | 노드 이름 - 비헤이비어 트리 그래프에 표시할 노드 이름입니다. |





