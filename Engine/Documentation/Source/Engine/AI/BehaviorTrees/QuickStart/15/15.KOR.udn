INTSourceChangelist:3717040
Availability:Public
Title: 15. 다음 단계
Crumbs:%ROOT%, Engine, Gameplay, Engine/AI/BehaviorTrees, Engine/AI/BehaviorTrees/QuickStart
Description:15 단계. 다음 단계
version: 4.9
parent:Engine/AI/BehaviorTrees/QuickStart
type:quick start
type:multi-step
order:15

[NAV]

이 단순한 트리를 가지고 할 수 있는 일이 엄청 많습니다. 다음과 같은 아이디어 시도해 보면 어떨까요?

* **Dot Product** 노드를 사용하여, AI 캐릭터 앞에 플레이어가 있을 때만 추적하도록 만듭니다.
	* 보너스: Dot Product 의 일부분으로 **AI 캐릭터** 의 회전을 사용하는 대신, Head Joint 의 회전을 사용합니다.
	* 더블 보너스: 애니메이션 블루프린트에서 Head Joint 의 회전을 제어하는 함수성을 추가한 다음, AI 가 주변을 둘러보는 서비스를 생성합니다.
* AI 캐릭터에 공격 함수성 및 비헤이비어 트리를 추가합니다.
* 플레이의 마지막 알려진 위치를 저장하는 대신, 지난 3-5 개의 위치를 저장한 다음, 플레이어 캐릭터가 더이상 보이지 않으면 갔을 확률이 가장 높은 벡터를 계산한 뒤 잠깐동안 그대로 이동하도록 합니다.
* 현재 캐릭터를 추적하지 않을 때는 그냥 제자리에 서있지만, 홈 위치 주변을 약간씩 이동하도록 만듭니다.
* 순찰 지점 **액터** 를 만들고, AI 가 그 중 아무데나 이동하도록 합니다.
	* **보너스**: 순찰 지점을 연결 순찰 지점으로 만들어 일정한 패턴대로 움직이도록 합니다.
	* **더블 보너스**: 순찰 지점에 연결가능한 지점을 여럿 만든 뒤, AI 가 선택할 수 있도록 합니다.
	* **수퍼 보너스**: **인바이런먼트 쿼리 시스템** 을 사용하여 순찰에 최적인 지점을 선택합니다.
* 비헤이비어 트리에 **인바이런먼트 쿼리 시스템** 을 통합시켜 서있거나 서성일 곳을 선택합니다.
* AI 캐릭터의 이동 속도를 변경하여 순찰중일 때는 걷게, 플레이어를 추적할 때는 뛰게 만듭니다.

## AI

* [](Engine/AI/BehaviorTrees "%Engine/AI/BehaviorTrees:description%")
* [](Engine/AI/BehaviorTrees/UserGuide "%Engine/AI/BehaviorTrees/UserGuide:description%")
* [](Engine/AI/BehaviorTrees/NodeReference "%Engine/AI/BehaviorTrees/NodeReference:description%")
* [](Engine/AI/EnvironmentQuerySystem "%Engine/AI/EnvironmentQuerySystem:description%")
	
## 외부 링크
	
* [Behavior Trees for Next-Gen Game AI](http://aigamedev.com/insider/presentation/behavior-trees/ "Hosted on AIGameDev.com, this video will talk you through the benefits and functionality of Behavior Trees. You have to sign up on the site, but sign up is free.")

[NAV]





