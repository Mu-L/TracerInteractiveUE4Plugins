INTSourceChangelist:2757389
Availability:Public
Title:行为树用户指南
Crumbs:%ROOT%, Engine, Gameplay, Engine/AI/BehaviorTrees
Description:行为树编辑器用户指南
version:4.9

[TOC(start:2 end:2)]

该文档中包含使用行为树时常见的工作流程。

## 创建行为树资源

### 创建一个行为树

可使用 **内容浏览器** 创建新行为树。

[REGION:raw]
![](Engine/AI/BehaviorTrees/QuickStart/3/newBT.png)
[/REGION]

1. 在 **内容浏览器** 中 **左键单击** “New” 按钮。
1. 在 **Miscellaneous** 类目下选择 **Behavior Tree**。

### 创建一个黑板

可使用 **内容浏览器** 创建黑板资源。

[REGION:raw]
![](Engine/AI/BehaviorTrees/QuickStart/3/newBB.png)
[/REGION]

1. 在 **内容浏览器** 中 **左键单击** “New” 按钮。
1. 在 **Miscellaneous** 类目下选择 **Blackboard**。


如您已开始编辑行为树（或只想为行为树添加一个新黑板），可在 **Behavior Tree Editor** 中点击 **New Blackboard** 按钮（在行为树编辑模式中）。

![](NewBBinBTE.png)(w:920 convert:false)

### 创建一个 Task（蓝图）

1. 在行为树编辑器中点击 **New Task** 按钮（在行为树编辑模式中）。
1. 选择需要继承的 **Behavior Tree Task** 类，`BTTask_BlueprintBase` 是默认的“空白”类。
1. 新 Task 蓝图将创建于行为树资源的相同文件夹中。

### 创建一个 Decorator（蓝图）

1. 在行为树编辑器中点击 **New Decorator** 按钮（在行为树编辑模式中）。
1. 选择需要继承的 **Behavior Tree Decorator** 类，`BTDecorator_BlueprintBase` 是默认的“空白”类。
1. 新 Decorator 蓝图将创建于行为树资源的相同文件夹中。

### 创建一个 Service（蓝图）

1. 在行为树编辑器中点击 **New Service** 按钮（在行为树编辑模式中）。
1. 选择需要继承的 **Behavior Tree Service** 类，`BTService_BlueprintBase` 是默认的“空白”类。
1. 新 Service 蓝图将创建于行为树资源的相同文件夹中。

## 编辑黑板

黑板有两种编辑方式。在 **内容浏览器** 中 **双击**，将其在 **行为树编辑器** 中打开：

![](Engine/AI/BehaviorTrees/QuickStart/5/BBAsset.png)(convert:false)

或将当前打开的 **行为树编辑器** 切换至 **黑板编辑模式**：

![](blackboardMode.png)(convert:false)

### 添加 Keys

1. 点击 **New Key** 按钮。
1. 选择要添加的 Key 类型。
1. 修改 Key 名称。

### 删除 Keys

1. 选择需要删除的 Key。
1. 按下 **Delete** 键。

### 重命名 Keys

1. 选择需要重命名的 Key。
1. **单击右键** 选择 **Rename** （或按 F2 键）。
1. 为 Key 输入一个新名字。

### Object Key 特性

Object Key 的特殊性在于可改变其单独的类型。因此它们能存储从对象（如 Actors）中继承的任意类型数据。

因为部分 Decorator 和 Service 功能需要 Actor Key，在此说明如何将 Object Key 转变为 Actor Key。

1. 选择一个 **Object** Key
1. 在 **Details** 面板中，打开 **Key Type** 属性。
1. 将 Base Class 属性改为需要的 Object 类型。

### 编辑行为树

行为树有两种编辑方式。在 **内容浏览器** 中 **双击**，将其在行为树编辑器中打开：

![](btAsset.png)(convert:false)

或将当前打开的 **行为树编辑器** 切换至 **行为树编辑模式**：

![](Engine/AI/BehaviorTrees/QuickStart/14/btMode.png)(convert:false)

### 设置使用的黑板资源

1. 在行为树上选择 **Root** 节点（或取消选择所有节点）
1. 在 **Details** 面板中，将 **黑板资源** 设在所需的黑板上。

[REGION:raw]
![](settingBB.png)
[/REGION]

### 添加节点（Composites 和 Tasks）

1. 在行为树图表区域中 **单击右键** 呼出快捷菜单。
1. 从快捷菜单中选择需要添加的节点。

![](newNode.png)

### 删除节点

1. 点击左键选择节点。
1. 按下 **Delete** 键。

### 连接节点

在行为树中连接节点的方式和在蓝图中连接引脚的方式颇为相似。然而主要的区别在于起作用连接的方向：只能将输出引脚和输入引脚连接起来。

### 连接节点的步骤：

1. 在输出条上 **单击** 并长按鼠标左键。
1. 将光标拖至输入条。
1. 松开鼠标左键。

![](Engine/AI/BehaviorTrees/QuickStart/14/connectNodes.png)

### 断开连接

1. 在连接条上 **单击右键** 呼出快捷菜单。
1. 选择 “Break Link(s)”

![](context1.png)

**或**

1. 在已连接的条上按下 **Alt + 左键单击** 组合键。

### 编辑节点属性

1. **单击左键** 选择一个节点。
1. 使用 **Details** 面板调整节点属性。

### 将 Decorators 和 Services 添加至节点

[REGION:raw]
![](newDecSer.png)
[/REGION]

1. 在 Composite 或 Task 节点上 **单击右键** 呼出快捷菜单。

	在左右边沿 **单击右键** 效果最佳。

1. 选择需要添加至节点的 Decorator 或 Service。

### 将 Decorators 和 Services 从节点移除

1. **左键单击**，在节点上选择一个 **Decorator** 或 **Service**（Decorator 或 Service 上将出现一个红色边框）。

	![](selectDec.png)

1. 按下 **Delete** 键。

### 编辑 Decorators 和 Services

1. **左键单击**，在节点上选择一个 **Decorator** 或 **Service**（Decorator 或 Service 上将出现一个红色边框）。

	![](selectDec.png)

1. 使用 **Details** 面板调整 **Decorator** 或 **Service** 属性。

	![](details.png)

### Composite Decorator 特性

**双击** Composite Decorator 呼出其图表。

Composite Decorator 图表的工作方式和简单蓝图相似，但仅限于处理行为树可用的多个 Decorators 的 True/False 返回。

[REGION:raw]
![](compositeEdit.png)(w:920)
[/REGION]


### 编辑 Task（蓝图）

在行为树编辑器中 **双击** 一个放置好的 Task 节点，使其在蓝图编辑器中打开。

或在 **内容浏览器** 中 **双击** Task。

### 编辑 Service（蓝图）

在行为树编辑器中 **双击** 一个放置好的 Service，使其在蓝图编辑器中打开。

或在 **内容浏览器** 中 **双击** Service。

### 编辑 Decorator（蓝图）

在行为树编辑器中 **双击** 一个放置好的 Decorator，使其在蓝图编辑器中打开。

或在 **内容浏览器** 中 **双击** Decorator。







