Availability: Public
Title: Skeletal Mesh Actors
Crumbs: %ROOT%, Engine, Engine/Actors
Description:Creating and using Skeletal Mesh Actors
Related: Engine/Actors
Related: Engine/Animation
version: 4.9
Parent:Engine/Actors/Types
order:3
type:overview


[TOC(start:2 end:3)]

![](SkeletalMeshActor_Matinee_Example.png)


When playing a video game that uses Unreal Engine 4 (UE4), the character that you are controlling on screen is often made up of a special kind of mesh called a **Skeletal Mesh Actor**. Skeletal Mesh Actors are special because they can be used to display complex animation data that was made inside of an external 3D application and then imported into UE4. The following guide aims to show you the ins and outs of how to use Skeletal Mesh actors inside UE4.

[region:tip]
All content for this tutorial was taken from the Matinee demo which you can download for free from the Learn Tab. 
[/region]

## What is a Skeletal Mesh Actor
A Skeletal Mesh Actor is a special type of Actor that is used to display complex animation data that was created in an external 3D animation program. Skeletal Mesh Actors are different than Static Mesh Actors because Skeletal Mesh Actors have a complex skeleton inside of them the helps to move the individual vertices of the Skeletal Mesh to match the current animation that is playing. Because of a Skeletal Mesh Actor's ability to use a complex Skeleton, they are generally used for things like characters, creatures, complex machinery, or for anything that needs to deform or display complex motion. Inside of UE4, you will find that Skeletal Mesh Actors are not only used for characters but also used with Matinee to create cinematic sequences. 

## Placing a Skeletal Mesh Actor in a Level
Skeletal Mesh Actors are placed in maps using standard Actor placement methods; either through the **Right-click** context menu of the viewports or by dragging and dropping from the [Content Browser](Engine/Content/Browser).

**Drag & Drop**

You can drag and drop Skeletal Mesh Actors right from the **Content Browser** right into the level you are working with by following these few simple steps.
1. In the **Content Browser**, locate the Skeletal Mesh you want to add to the map as a Skeletal Mesh Actor.

1. **Left-click** on the Skeletal Mesh in the **Content Browser** and drag the mouse (while holding the **Left Mouse Button** down) from the **Content Browser** to the location in the viewport where you want to place the mesh. The location does not need to be exact. You can always reposition and rotate the mesh afterwards.   

1. Release the **Left Mouse Button** to place the mesh in the map as a Skeletal Mesh, as seen in the **Details** panel.   

![](SkeletalMeshContextMenu.png)

**Context Menus**

You can also place Skeletal Mesh Actors in the world using the **Right-click** context menu by following these few simple steps.

1. In the **Content Browser**, select the Skeletal Mesh Actor you want to add to the level as a Skeletal Mesh Actor.
   
1. **Right-click** in the viewport where you want to add the mesh and choose **Place Actor: Skeletal Mesh** from the context menu. The location does not need to be exact. You can always reposition and rotate the mesh afterwards. 

1. Once the **Place Actor: Skeletal Mesh** option has been clicked on with the mouse, the Skeletal Mesh you selected should now be placed in the scene. 

![](SkeletalMeshDragAndDrop.png)

## Playing Animation on a Skeletal Mesh Actor 
Getting a Skeletal Mesh Actor so that it will animate while the game is running can be done two different ways inside of UE4. You can use an [Animation Blueprint]( Engine/Animation/AnimBlueprints), which will allow you to play and blend multiple animations together. Or you can use and Animation Asset to play a single [Animation Sequence]( Engine/Animation/Sequences). In this tutorial, we will be focusing on using an Animation Sequence to play our animation while the game is running. 

### Skeletal Mesh Actor Setup
The setup for getting a Skeletal Mesh Actor ready to play an animation is actually quite simple and can be done in the following steps.
1. First find the **Skeletal Mesh** you want in the **Content Browser**
1. Once you have found the **Skeletal Mesh** you wish to use, add it to the level either via dragging and dropping or via the **Context Menus**.
1. When completed, you should have something that looks like this.  
	![](SkeletalMeshActor_Adding_Mesh_To_Scene.png)

### Skeletal Mesh Animation Setup
Now that the Skeletal Mesh Actor has been added to the level, it is now time to add an animation to it by performing the following steps. 
1. The first thing that needs to be done is that we need to find an **Animation Sequence** to play. For this example, we will be using the **Trooper_Main** Animation Sequence. 

	![](SkeletalMeshActor_Finding_Anim_Sequance.png)

1. With the animation that we want to use located, it is now time to setup the Skeletal Mesh Actor so that it can use it. The first thing that needs to be done is that the **Animation Mode** needs to be set from **Use Animation Blueprint** to **Use Animation Asset**.

	![](SkeletalMeshActor_Use_Anim_Asset.png)

1. Once the **Animation Mode** is set correctly, it is now time to choose the animation that we want to play. To do this, simply select the **Animation Sequence** that you want to play from the **Content Browser** and then assign it to the **Anim to Play** section by either dragging or dropping the **Animation Sequence** on to **Anim to Play** or by using the Arrow to the right of the **Anim to Play** input box.
	
	![](SkeletalMeshActor_Anim_To_Play.png)

### Playing the Skeletal Mesh Animation	

1. Now make sure that both **Looping** and **Playing** are checked (which they should be by default) and then press the **Play Button** to see your animation playing during game.

	![](SkeletalMeshActor_Looping_Playing.png)


## Material Override
Sometimes you might need to override the material that is already applied to the Skeletal Mesh Actor you want to work with. New Materials can be assigned to Skeletal Mesh Actors materials array manually or by simply dragging and dropping the Material on to the Skeletal Mesh Actor in the editor viewport. Changing the material on a Skeletal Mesh Actor is no different than changing the material on any other Actor.
[Region:note]
Materials that are to be used with Skeletal Mesh Actors need to have the material usage flag **Used with Skeletal Mesh** enabled to work correctly. You can find this flag in the **Usage** section of the materials **Details** panel. 
![](SkeletalMeshActor_Material_Usage_Flag.png)
[/region]

## Collision
Normal collision creation and detection does not work with Skeletal Mesh Actors. In order for your Skeletal Meshes to collide with objects in the level, your Skeletal Mesh Actors need to have a Physics Asset that is specially created for your object. 

### Creating Collision for a Skeletal Mesh Actor 

To create a Physics Asset for your mesh, all you have to do is simply **Right-click** on the mesh in the **Content Browser** and then choose **Create** -> **Create Physics Asset**. You can read more about how to create Physics Assets by checking out the [Physics Asset Tool](Engine/Physics/PhysicsAssetEditor) documentation.

![](SkeletalMeshActor_Create_Physics_Asset.png)

### Assigning a Physics Asset
Once your Physics Asset has been created, it is now time to assign it to your mesh. Physics Assets can be assigned to Skeletal Meshes by simply opening up the Skeletal Mesh and then assigning the Physics Asset to the **Physics Asset** slot that is under the **Physics** section. 

![](SkeletalMeshActor_Assign_Physics_Asset.png)

You can also override Physics Assets in your level by simply selecting your Skeletal Mesh and then under the **Physics** section of the **Details** panel, you can supply a new Physics Asset in the **Physics Asset Override** section.

![](SkeletalMeshActor_Add_Physics_Assets_In_Level.png)





