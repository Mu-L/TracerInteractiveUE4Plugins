INTSourceChangelist:3429227
Availability:Public
Title:变换Actor
Crumbs: %ROOT%, Engine, Engine/Actors
Description:修改放置在关卡中的Actor的定位、旋转和缩放。
parent:Engine/Actors
type:overview
order:3
topic-image:actortransform_topic.png


[TOC(start:2)]

变换Actor是指移动、旋转或缩放Actor，这是关卡编辑过程中的一个重要部分。在虚幻编辑器中有两种变换Actor的基本方法。这两种方法都可以将变换应用到当前选中的所有Actor上。

(#manualtransformation)
## 手动变换

[INCLUDE:Engine/UI/LevelEditor/Details/Customizations/Transform#Transform]

(#interactivetransformation)
## 交互式变换

第二种变换Actor的方法涉及到使用视口中显示的可视化工具或控件。使用该控件，您可以使用鼠标来直接在视口中移动、旋转及缩放Actor。这种方法的优缺点和手动变换方法正好相反。尽管它非常直观，但不是那么精确，而有时候需要一定精确度。拖曳网格、旋转网格和缩放网格可以帮助确保更加精确。与已知值对齐或以已知增量对齐的能力能够实现更精确的控制。

视口中用于操作Actor的可视化工具称为变换控件。通常，变换控件由几个部分组成，这些部分根据它们所影响的轴进行颜色编码：

* 红色意味着影响X轴。
* 绿色意味着影响Y轴。
* 蓝色意味着影响Z轴。

变换控件采用不同的形式，具体取决于正在执行的变换类型：平移、旋转或缩放。您可以通过单击视口右上角部分工具栏中的变换控件图标，来选择想要使用的变换控件类型。

![](LE_Trans_WidgetIcons.png)

[REGION:tip]
您可以通过按键盘上的空格键，来在不同类型的变换控件之间切换。
[/REGION]

(#translationwidget)
### 平移控件

[EXCERPT:TranslateWidget]

**平移控件（Translation Widget）** 由一组颜色编码的箭头组成，这些箭头分别指向场景中每个轴的正方向。每个箭头实质上是一个手柄，可以拖拽它来沿着特定的轴移动选中的Actor。当鼠标光标悬停在其中一个手柄上时，手柄变为黄色，表示拖拽操作将沿着相应的轴移动对象。

![Translation Widget - Axis](LE_Trans_Widget.png)

同时，每个手柄上会伸出一条线，这些线沿其他每个轴彼此交汇在一起。这些线构成了与每个平面(XY, XZ, YZ)匹配的方形。将鼠标悬停到其中一个方形上，会使得该方形和两个相关箭头变为黄色。拖拽操作可以沿着这两个轴定义的平面移动Actor。

![Translation Widget - Plane](LE_Trans_Plane.png)

在三个轴的相交处，有一个白色的小球体。当您将鼠标悬停到该球体上时，它的颜色变为黄色，表示可以拖拽它。通过拖拽中心球体，可以在空间中相对于场景摄像机自由移动，从而可能改变沿三个轴的位置值。

![Translation Widget - All](LE_Trans_All.png)

[/EXCERPT:TranslateWidget]

(#rotationwidget)
### 旋转控件

**旋转控件（Rotation Widget）** 是由一组三个颜色编码的弧，每个弧与一个轴相关联。当您拖拽其中一个弧时，选中的Actor则绕相应的轴旋转。如果使用 **旋转控件（Rotation Widget）**，受到任何相关弧影响的轴都与该弧本身垂直。这意味着，与XY平面匹配的弧实际上将绕Z轴旋转Actor。

![Rotation Widget](Transform_Rotate.png)

当鼠标悬停到一个特定弧上时，该弧会变为黄色，表示您可以拖拽它来改变Actor的旋转度。

![Rotation Widget](Transform_Rotate_Axis.png)

当您开始拖拽来旋转选中的Actor时，控件会改变形状，仅显示Actor绕其进行旋转的轴。旋转量可以实时显示，以便帮助您调整您的进度。

![Rotation Widget](Transform_Rotate_Offset.png)

(#scalingwidget)
### 缩放控件

**缩放控件（Scaling Widget）** 具有颜色编码的手柄，手柄的尾部是立方体形状。当您通过其中一个手柄拖拽控件时，您仅可以沿相关轴缩放选中的Actor。这些手柄是按轴进行颜色编码的，同 **平移控件（Translation Widget）** 及 **旋转控件（Rotation Widget）** 类似。 

![Scaling Widget](LE_Trans_ScaleWidget.png)

您可以同时沿两个轴缩放Actor，同您使用 **平移控件（Translation Widget）** 同时沿由两个轴定义的平面移动Actor一样。**缩放控件（Scaling Widget）** 的每个手柄会伸出一条线，沿其他每个轴彼此交汇到一起。这些线构成了与三个平面(XY, XZ, YZ)中的一个平面匹配的三角形。拖拽其中一个三角形，则沿定义相应的平面的两个轴缩放Actor。当鼠标悬停到其中一个三角形上时，相关手柄将变为黄色。

![Scaling Widget - Plane](LE_Trans_Scale2Axes.png)

您也可以沿着三个轴缩放Actor，从而维持其原始比例。如果您将鼠标悬停到三个轴相交的立方体处，则三个手柄都会变为黄色。通过拖拽中心立方体，可以按比例缩放Actor。

![Scaling Widget - All](LE_Trans_ScaleAll.png)

(#actorpivotadjustment)
### Actor支点调整

当变换对象时，您通常都是从对象的基本支点开始进行变换的。但是，对于某些变换操作，您可能想要调整该支点的位置。

![](DefaultPivot.png)(w:500)

通过从 **平移控件（Translation Widget）** 的中心点，单击并拖拽 **鼠标中键**，您可以临时移动支点。然后，您可以像往常一样通过按下空格键来在各个变换工具之间进行切换。

![](AdjustedPivot.png)(w:500)

现在，您可以使用该新支点来变换Ator。

![](TransformAroundNewPivot.png)(w:500)

一旦您单击（选择）了其他对象，该支点就会跳回到其默认位置。

(#worldandlocaltransformationmodes)
### 场景变换模式和本地变换模式

当您使用交互式变换方法时，您可以选择您执行变换时想要使用的参考坐标系。这意味着，您可以在场景空间中沿场景坐标变换Actor，也可以在它自己的本地空间中沿本地轴变换Actor。这提供了更大的灵活性，而且这几乎是手动设置值所不能做到的；至少在没有事先经过大量复杂计算的情况下是不可能实现的。
[REGION:imagetable]
| ![](Transform_World.png)(w:400) | ![](Transform_Local.png)(w:400) |
| ------ | ------ |
| 场景 | 本地 |
[/REGION]

默认情况下，虚幻编辑器以场景变换模式启动。要想切换到本地变换模式，请单击视口右上角部分工具栏中的地球图标。当地球图标变为一个立方体图标时，这表示您现在处于本地变换模式中。

![](LE_Trans_CubeIcon.png)

点击立方体图标可以切换回到场景变换模式。


(#snapping)
## 对齐

这三个手动变换工具都可以让其值对齐到特定的增量。这对于在关卡中精确地放置对象很有用。在UE4中，可以通过4中不同的方式来完成对齐处理：

* 拖曳网格 
* 旋转网格 
* 缩放网格
* 顶点对齐



(#draggrid,rotationgrid,andscalegrid)
### 拖曳网格、旋转网格和缩放网格

[VAR:GridImage]
w:300
[/VAR]

[REGION:imagetable]
|![](DragGrid.png)(%GridImage%)|![](RotationGrid.png)(%GridImage%)|![](ScaleGrid.png)(%GridImage%)|
|:---:|:---:|:---:|
|拖曳网格|旋转网格|缩放网格|

[/REGION]

**拖曳网格（Drag Grid）** 允许对齐到场景中的一个三维隐式网格上。**旋转网格（Rotation Grid）** 提供了增量旋转对齐。**缩放网格（Scale Grid）** 强制缩放控件对齐到附加的增量，但是可以在对齐偏好设置中设置为百分比值。

每个对齐网格可以通过单击视口工具栏中的相应图标来激活。激活后，该图标将会高亮显示。每个网格的增量可以通过其激活按钮右侧的下拉菜单来进行修改。


(#snappingpreferences)
### 对齐偏好设置

拖拽网格、旋转网格、缩放网格的设置都可以在编辑器偏好设置（Editor Preferences）面板中进行设置，同时还可以有其他几个有关对齐行为的设置。 

可以通过从主菜单栏选择 **Edit（编辑） > 编辑器偏好设置（Editor Preferences）> 视口（Viewports）** 并向下滚动到 **对齐（Snap）** 类型，来进行访问这些偏好设置。

![](SnapSettings.png)


(#userdefinedincrements)
#### 用户定义的增量

当使用拖拽网格、旋转网格或缩放网格时，您可能注意到每个工具的下拉菜单包含一列预设增量和一列用户定义的增量：

![](UserDefinedIncrementsShown.png)

要想填充用户定义的列表，使用在对齐偏好设置（Snap Preferences）中找到的数组属性：

![](UserDefinedArrays.png)

* **网格大小（Grid Sizes）** - 存放用户为平移控件定义的对齐增量。
* **旋转对齐间隔（Rotation Snap Intervals）** - 存放用户为旋转控件定义的对齐增量。
* **缩放网格大小（Scale Grid Sizes）** - 存放用户为缩放控件定义的对齐增量。

(#vertexsnapping)
### 顶点对齐

偶尔，您可能想要使用一个网格体的多边形顶点来将某个对象对齐到另一个对象。只需在使用平移控件时按住 **V键**，就可以做到这一点。按下 **V** 键后，一旦您开始移动一个对象，您就会注意到所有可用的多边形都高亮显示：

![](VertexSnapping.png)(w:500)

当同支点调整结合使用时，这非常有用，因为您可以直接将支点对齐到一个顶点上，然后使用它用作一种对齐到另一个对象的顶点的方法。在下图中，我们展示了我们如何使用这种方法精确地对齐两段管道。

![](VertexSnappedPivot.png)(w:500)
[REGION:caption]
通过使用V+鼠标中键，我们可以将该对象的支点对齐到一个现有顶点。
[/REGION]

一旦该支点移动了，我们可以使用新的支点位置来将该对象对齐到另一个网格体的相应顶点。

![](VertexSnappingObjects.png)(w:500)
[REGION:caption]
通过在拖拽过程中使用V键，我们可以将该对象对齐到另一个网格体的相应顶点上。
[/REGION]

通过重复这一过程，我们就可以很好地定位网格体。这种方法对于通道、墙壁、门或者需要相对于另一个网格体或对象进行精确放置的物体很有用。

![](snappedMeshes.png)(w:500)




