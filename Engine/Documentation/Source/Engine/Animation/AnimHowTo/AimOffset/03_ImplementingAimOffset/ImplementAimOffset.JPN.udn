INTSourceChangelist:3782314
Availability:Public
Title:3 - Aim Offset を実装する
Crumbs: %ROOT%, Engine, Engine\Animation, Engine\Animation\AnimHowTo
Description:Aim Offset を Animation ブループリントに追加し、それを既存の Anim Graph に接続します。 
version:4.14
skilllevel:Advanced
parent:Engine/Animation/AnimHowTo/AimOffset
type:how-to
type:multi-step
order:3
tags:Animation
tags:Aim Offset

[NAV]

Aim Offset を Animation ブループリントに追加し、それを既存の Anim Graph に接続します。 

## ステップ

1. **「Content/AnimStarterPack」** フォルダで **UE4ASP_HeroTPP_AnimBlueprint** を開いて、**MyBlueprint** パネルで **AnimGraph** を **ダブルクリック** します。 

	![](step3_01.png)

1. **アセット ブラウザ** タブから Aim Offset アセットをドラッグします。 

	![](step3_02.png)

1. 以下のように Aim Offset を接続します。次に **Yaw** ピンと **Pitch** ピンの上で **右クリック** し、**[Promote to Variable (変数に昇格)]** にして、**Aim Yaw** と **Aim Pitch** という名前を付けます。 

	![](step3_03.png)

	この 2 つの変数はプレイヤーがマウスを使って照準を合わせるときに使用されて、Aim Offset のポーズを操作します。 

1. **[MyBlueprint]** パネルで **EventGraph** にジャンプします。 

	![](step3_04.png)

1. **EventGraph** でスクリプトの  Movement 部分内にある **Sequence** ノードを探します。 

	![](step3_05.png)

	**Sequence** ノード上の **[Add pin]** ボタンをクリックします。 

	![](step3_05b.png)

1. **[MyBlueprint]** パネルで **[Alt]** キーを押したまま、**Aim Yaw** と **Aim Pitch** をドラッグして **Sequence** ノードに接続します。 

	![](step3_06.png)

1. **Cast To Ue4ASP_Character** ノードからドラッグして **Get Control Rotation** ノードと **Get Actor Rotation** ノードを追加します。 

	![](step3_07.png)

1. **Get Control Rotation** ノードからドラッグして、**Delta(Rotator)** ノードを追加します。 

	![](step3_08.png)

1. **Get Actor Rotation** を **Delta(Rotator) B Pin** に接続します。次に、**Return Value** から **RInterp To** ノードを追加します (Current から Targetへの接続をスワップします)。 

	![](step3_09.png)

	[REGION:tip]
	**Ctrl** キーを押したまま、**Current** ピン上で左クリックし、その接続を **Target** ピンまでドラッグします。 
	[/REGION]

1. **RInterp To** ノードの **Current** ピンをドラッグして、**Make Rotator** を選択します。 

	![](step3_10.png)

1. **[MyBlueprint]** パネルで **[Ctrl]** キーを押したまま、**Aim Pitch** 変数と **Aim Yaw** 変数をドラッグして **Make Rotator** ノードの **Pitch** と **Yaw** に接続します。 

	![](step3_11.png)

1. **Movement** スクリプトの開始時に、**Event Blueprint Update Animation** ノードを探して、**Delta Time X** を **Time** と呼ばれる変数に昇格し、以下のように接続します。 

	![](step3_12.png)

1. **RInterp To** ノードに戻り、新しい **Time** 変数を接続し、**Interp Speed** を **15** に設定します。 

	![](step3_13.png)

	キャラクターの回転とプレイヤーの入力の回転を使用して新規ローテーターを作ります。これは、キャラクターがある方向にどの程度曲がることができるかを制限します。 

1. **RInterp To** ノードから **Break Rotator** と **Pitch** と **Yaw** の **Clamp Angle を追加します。最小角度と最大角度はそれぞれ **-90** と **90** **に設定します。 

	![](step3_14.png)

1. **Pitch** から **Clamp Angle** を **Aim Pitch** に接続し、**Yaw** から **Aim Yaw** に接続します。 

	![](step3_15.png)

	Aim Offset を操作する Aim Yaw の値と Aim Pitch の値は、キャラクターの回転、プレイヤーの現在のコントローラーの回転を考慮し、キャラクターが一方向に回転しすぎないようにクランプされます。 
	角度をクランプしないとキャラクターが後ろを向いているのにその足は前を向き、逆方向をポイントしてしまいますが、これは避けたいでしょう。 

セットアップがほぼ終わったので、次のステップではすべてをつなげて、キャラクターの照準機能をテストします。 


[NAV]