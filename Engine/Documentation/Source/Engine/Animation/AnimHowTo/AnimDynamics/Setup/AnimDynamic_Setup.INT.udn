Availability: Docs
Title:1 - Required Setup
Crumbs: %ROOT%, Engine, Engine/Animation, Engine/Animation/AnimHowTo, Engine/Animation/AnimHowTo/AnimDynamics
Description:In this step we will set up the character we will use to apply dynamic animations to. 
SkillLevel:Advanced
Version:4.11
checkpoint: editorqs
parent:Engine/Animation/AnimHowTo/AnimDynamics
type:how-to
type:multi-step
Order: 1
 
[NAV]

Before we get started with applying dynamic animations to our character we need to set up the character we wish to use. 
The template characters do not have any dynamic bones we can use so we will retarget animations from the template character over to an Infinity Blade character who has bones that we can influence with AnimDynamics. 

[REGION:note]
For this guide, we created a New Project using the **Blueprint Third Person** template. 

We then added the **Infinity Blade: Adversaries** pack which is available for free on the Marketplace to the project.
![](AdversariesPack.png)
[/REGION]


## Steps

With your **Blueprint Third Person** based template project open and the **Infinity Blade** assets added:

1. In the **Content Browser** under **Content/Mannequin/Character/Mesh**, open the **UE4_Mannequin_Skeleton** asset. 

	![](1_OpenMesh.png)

1. Click the **Retarget Manager** button, then under **Select Rig** assign the **Humanoid** rig. 

	![](2_SetRig.png)

	We are going to [retarget](Engine/Animation/AnimHowTo/Retargeting) this character's AnimBlueprint and Animations to an Infinity Blade character. 

1. In the **Content Browser** navigate to and open the **SK_Master_Grunt_Skeleton** in the Infinity Blade Adversaries folder. 

	![](3_OpenGrunt.png)

1. Click the **Retarget Manager** button, then select **Humanoid** under the **Select Rig** option. 

1. For each node on the Rig, assign a Bone from the Skeleton. 

	![](4_AssignBones.png)

	The full assignment is shown in the table below. 
		
	| Node (Rig) | Bone (Skeleton) |
	| ------- | ------------ |
	| **Root** | b_MF_Root |
	| **Pelvis** | b_MF_Pelvis |
	| **spine_01** | b_MF_Spine_01 |
	| **spine_02** | b_MF_Spine_02 |
	| **spine_03** | b_MF_Spine_03 |
	| **clavicle_l** | b_MF_Clavicle_L |
	| **upperarm_l** | b_MF_UpperArm_L |
	| **lowerarm_l** | b_MF_Forearm_L |
	| **hand_l** | b_MF_Hand_L |
	| **clavicle_r** | b_MF_Clavicle_R |
	| **upperarm_r** | b_MF_UpperArm_R  |
	| **lowerarm_r** | b_MF_Forearm_R  |
	| **hand_r** | b_MF_Hand_R  |
	| **neck_01** | b_MF_Neck  |
	| **head** | b_MF_Head  |
	| **thigh_l** | b_MF_Thigh_L  |
	| **calf_l** | b_MF_Calf_L  |
	| **foot_l** | b_MF_Foot_L  |
	| **thigh_r** | b_MF_Thigh_R  |
	| **calf_r** | b_MF_Calf_R  |
	| **foot_r** | b_MF_Foot_R  |

	Before we proceed with retargeting, we will adjust the Translation Retargeting to ensure that our animations play correctly. 

1. In the **Skeleton Tree**, click the **Show Advanced Options** button. 

1. **Right-click** on the **b_MF_Root** bone and select **Recursively Set Translation Retargeting Skeleton**. 

	![](5_TranslationRetargetingA.png)

1. Under **Translation Retargeting**, set **b_MF_Root** to **Animation** and **b_MF_Pelvis** to **Animation Scaled**. 

	![](5_TranslationRetargetingB.png)

	Our Skeleton is set up and we can now retarget the AnimBluperint and Aniamtions from the template character.

1. Navigate to the **ThirdPersonAnimBP** and **Right-click** on it and select **Duplicate Anim Blueprints and Retarget**. 

	![](6_RetargetAnimBP.png)

1. In the **Select Skeleton** window, select the **SK_Master_Grunt_Skeleton** asset then choose **Retarget**. 

	![](7_SetTarget.png)

	[REGION:tip]
	You can click the **Change...** button to assign where the retargeted assets are copied to if you like. 
	[/REGION]

1. Navigate to the duplicated assets and rename the new AnimBlueprint to **GruntAnimBP**. 

	![](8_RenameAnimBP.png)

1. Navigate to and open the **ThirdPersonCharacter** Blueprint. 

	![](9_OpenThirdBP.png)

1. Click the **Mesh** in the **Components** window, then assign the **SK_Master_Grunt** and **GruntAnimBP_C** in the **Details** panel. 

	![](10_AssignNewCharacter.png)

1. **Compile** and **Save**, then close the Blueprint. 


## End Result

At this point if you play in the Editor, you should be controlling the Grunt Character who can run and jump with **WASD** and **Spacebar**. 

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
WEVotwqetOs
[/PARAMLITERAL]
[/OBJECT]

Notice the limited movement of the harness and furnace around the characters neck. It appears relatively static and our character would look more natural if these objects moved along with the character's movement. 

In the next step we will use the AnimDynamics node to animate the harness and furnace so it reacts to character movement. 

[NAV]