INTSourceChangelist:3717037
Availability:Public
Title:アニメーションのファストパスによる最適化
Crumbs: %ROOT%, Engine, Engine/Animation
Description:パフォーマンスを高めるためにアニメーション グラフの構造に適用できる最適化について説明します。
version:4.11
topic-image:AnimationFastPathOptimization_topic.png
parent:Engine/Animation/Optimization

[EXCERPT:Intro]
Animation ブループリントはアニメーション システムを構築する非常にフレキシブルな方法です。ただし、ブループリント ベースのロジックの実行に伴うパフォーマンス オーバーヘッドは、 
グラフが複雑になるにつれて、非常に高くなることがあります。
こうしたオーバーヘッドを緩和するために、アニメーション グラフを構造化する方法があります。
[/EXCERPT:Intro]

## メンバー変数に直接アクセスする

![](DirectMemberAccess.png)

## 無効化されたブール メンバー変数にアクセスする

![](NegatedBooleanAccess.png)

## ネスティングされた構造体のメンバーにアクセスする

![](NestedStructAccess.png)

## "Break Struct" ノードを使用するメンバーにアクセスする

![](BreakStructAccess.png)

"Break Transform" のような一部の "Break Struct" ノードでは、現在ファストパスを使用しません。
単にデータをコピーするのではなく、内部で変換を行うからです。

## 最適化した Animation ブループリントを監査し、維持する

![](WarnAboutBlueprintUsage.png)

Animation ブループリントを最適な方法で設定後、その後のイタレーションで
新しい効率の悪い construct になる可能性があります。これを追跡するために、Animation ブループリントのクラスのデフォルトにある 
[Warn About Blueprint Usage] オプションを有効にすることができます。これは特定の Animation ブループリントを最適化する場合にも役立ちます。