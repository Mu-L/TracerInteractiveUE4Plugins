INTSourceChangelist:3782314
Availability:Public
Title:애니메이션 시스템 개요
Crumbs: %ROOT%, Engine, Engine/Animation
Description:애니메이션 블루프린트, 블렌드 스페이스, 애니메이션 시퀀스를 사용해서 애니메이션 데이터 기반 스켈레탈 메시를 변형하는 시스템에 대한 개요입니다.
Related: Engine/Content/FBX/Animations
Related: Engine/Animation/PhysicallyDrivenAnimation
Related: Engine/Content/Tools/MayaRiggingTool
version: 4.14
type:overview
topic-image:AnimationToolsTopic.png
tags:Animation
tags:Getting Started


[TOC(start:2 end:2)]

[EXCERPT:Intro]
언리얼 엔진 4(UE4)의 애니메이션 시스템은 여러가지 애니메이션 툴과 에디터로 이루어져 있으며, 스켈레탈 기반 메시 변형 정보를 모프 기반 버텍스 변형 정보와 혼합시켜 복잡한 애니메이션을 만들 수 있습니다.
미리 녹화된 **애니메이션 시퀀스** 를 재생하고 블렌딩하여 기본 플레이어 움직임에 사실감을 더해주거나, **애님 몽타주** 를 사용한 벽이나 돌출부의 스케일 작업같은 맞춤형 특수 동작을 제작하거나, 
**모프 타깃** 을 통해 대미지 이펙트 또는 얼굴 표정을 적용하거나, **스켈레탈 컨트롤** 을 사용하여 본의 트랜스폼을 직접 제어하거나, **스테이트 머신** 기반 로직을 만들어 캐릭터에 주어진 상황에 맞는 애니메이션을 결정하도록 할 수도 있습니다. 
[/EXCERPT:Intro]


이 문서는 언리얼 엔진 4 의 애니메이션 시스템에 대한 하이 레벨 개요서로써 쓰여졌으며, 언리얼의 애니메이션을 새로 접하신 분들을 주요 대상으로 합니다. 그렇다고 언리얼 엔진에서 스켈레탈 애셋에 애니메이션을 적용하는 방법을 완벽하게 설명해 주는 안내서가 되지는 못합니다. 그보다는 애니메이션 시스템의 여러 부분에 대한 개념을 잡은 다음, 그 부분들이 어떻게 조합되는가, UE4 의 애니메이션이 전보다 얼마나 강력하고 유연해 졌는가 살펴보는 입문서 정도로 생각해 주시기 바랍니다.

## 용어와 개념

먼저 UE4 의 애니메이션 시스템에 대한 주요 용어와 개념을 알아보는 것으로 시작하겠습니다 (각 제목을 클릭하면 상세 문서를 확인할 수 있습니다):

(#Skeleton)
### %Engine/Animation/Persona/Modes:title%

%Engine/Animation/Persona/Modes:topiccompact%

[INCLUDE:Engine/Animation/Persona/Modes#overview]

### %Engine/Animation/Skeleton:title%

%Engine/Animation/Skeleton:topiccompact%

**Skeleton** (스켈레톤) 이란 본의 위치와 회전값을 계층구조로 나타낸 것으로, 스켈레탈 메시의 변형(deform)에 사용됩니다. UE4 에서 스켈레톤은 스켈레탈 메시에서 추출하여 별도의 애셋으로 만들었습니다. 즉 애니메이션은 스켈레탈 메시가 아니라 스켈레톤에 저장된다는 뜻입니다. 같은 스켈레톤을 사용하면 한 애니메이션을 다수의 스켈레탈 메시에 공유할 수 있습니다.

### %Engine/Animation/Sequences:title%

%Engine/Animation/Sequences:topiccompact%

[INCLUDE:Engine/Animation/Sequences#Intro]

### %Engine/Animation/Sequences/Notifies:title%

%Engine/Animation/Sequences/Notifies:topiccompact%

[INCLUDE:Engine/Animation/Sequences/Notifies#Intro]

### %Engine/Animation/AnimBlueprints:title%

%Engine/Animation/AnimBlueprints:topiccompact%

[INCLUDE:Engine/Animation/AnimBlueprints#Intro]

### %Engine/Animation/Blendspaces:title%

%Engine/Animation/Blendspaces:topiccompact%

[INCLUDE:Engine/Animation/Blendspaces#Intro]

### %Engine/Animation/AnimMontage:title%

%Engine/Animation/AnimMontage:topiccompact%

[INCLUDE:Engine/Animation/AnimMontage#Intro]

### %Engine/Animation/NodeReference/SkeletalControls:title%

%Engine/Animation/NodeReference/SkeletalControls:topiccompact%

[INCLUDE:Engine/Animation/NodeReference/SkeletalControls#Intro]

### %Engine/Animation/StateMachines:title%

%Engine/Animation/StateMachines:topiccompact%

[INCLUDE:Engine/Animation/StateMachines#Intro]


[REGION:note]
일부 애니메이션 기능에 대한 예제는 에픽 게임즈 런처의 **학습 탭** 에서 무료로 받을 수 있는 [Content Examples](Resources/ContentExamples/) (콘텐츠 예제) 프로젝트에서도 확인할 수 있습니다.
[/REGION]

## 시스템 분해도

다음은 애니메이션 시스템의 특정 부분이 어디서 생성되고 편집되는가에 대한 분해도입니다.

[REGION:raw]
![](CreationDiagram.png)
[/REGION] 

이 도표는 언리얼에서의 전형적인 애니메이션 캐릭터에 대한 데이터 흐름과 소유를 나타냅니다.

[REGION:raw]
![](AnimationDiagram.png)
[/REGION] 



## 애니메이션 디버그 기능

디버그 기능은 플레이 모드시 ` 키를 눌러 콘솔을 띄워 접할 수 있습니다.

### 스켈레탈 메시 본 렌더링

![](AnimationShowDebugBones.jpg)(h:320)

**스켈레탈 메시 본** 을 표시하려면, 콘솔에 `ShowDebug Bones` 명령을 입력합니다. 위 그림에서 보듯이 본은 개별적인 흰 선으로 나타납니다.

`ShowDebug Bones` 명령은 플레이 세션 도중 플레이 가능한 캐릭터 관련 정보를 표시해 줍니다. (플레이어 캐릭터 이외) 다른 캐릭터의 디버그 애니메이션을 보려면, `viewactor ExampleCharacterID` 명령을 사용하면 되며, ExampleCharacterID 는 보고자 하는 캐릭터에 할당된 Character ID 를 말합니다. 이 ID 는 [월드 아웃라이너](Engine/UI/LevelEditor/SceneOutliner) 에서 캐릭터 위에 커서를 올리면 그 ID 이름이 표시됩니다.

[REGION:note]
현재 `viewactor` 명령을 사용하면, 카메라가 현재 보고 있는 액터로 이동하여 고정됩니다. 디버깅 도중 카메라를 조작할 필요가 있다면, 이에 대한 우회법은 드롭다운 메뉴에서 [에디터에서 플레이](Engine/UI/LevelEditor/InEditorTesting) 세션을 플레이어 둘 이상으로 실행하여 창 하나는 디버깅 용으로 쓰고 다른 하나는 플레이어 캐릭터 제어용으로 쓰면 됩니다.
[/REGION]

본을 흰색 선으로 표시하는 대신, 콘솔에 `ShowDebugToggleSubCategory 3DBones` 명령을 입력하여 3D 본으로 표시할 수도 있습니다.

### 애니메이션 디버그 출력

![](AnimationShowDebugToggle.jpg)

**애니메이션 디버그 출력** 정보는 `ShowDebug Animation` 콘솔 명령으로 켤 수 있습니다.

표시되는 정보는 다섯 부분으로 나뉘어 있으며, 그 각각은 `ShowDebugToggleSubCategory` 명령에 아래의 카테고리 이름을 붙여 토글시킬 수 있습니다 (예: `ShowDebugToggleSubCategory SyncGroups`). 

| 버튼 | 설명 |
|-------|------|
| **SyncGroups** | 현재 최종 포즈에 공헌하고 있는 애니메이션 애셋 싱크 그룹별로 (그룹에 속해있지 않으면 Ungrouped 로) 체계 정리하여 보여줍니다. 기본적으로 이 섹션에 표시된 블렌드 스페이스는 모든 공헌 애니메이션/웨이트를 표시합니다. `ShowDebugToggleSubCategory FullBlendspaceDisplay` 명령으로 이 칸을 토글시켜 출력이 차지하는 화면 공간을 줄일 수 있습니다. |
| **Montages** | 현재 캐릭터에 사용중인 몽타주를 나열합니다. 활성 몽타주는 초록으로 강조됩니다. |
| **Curves** | 애니메이션 재생으로 활성화된 커브 값을 (이름 : 값 짝으로) 나열합니다. |
| **Notifies** | 현재 발효중인 노티파이 스테이트를 표시합니다. |
| **Graph** | 활성 포즈 그래프를 표시합니다. 최종 포즈를 나타내는 마지막 (루트) 노드로 시작해서 그 최종 포즈를 이루는 모든 노드가 나열됩니다. 노드는 계층구조가 유지되는 방식으로 표현되어, 사용자는 원본 블루프린트 애셋을 확인할 필요 없이 어떤 노드가 연결되었는지 확인할 수 있습니다. 활성 노드는 (`ShowDebugToggleSubCategory FullGraph` 명령으로 표시되도록 토글된 경우) 초록색, 비활성 노드는 회색으로 표시됩니다. |

[COMMENT:none]
 Pulled from the intro section (overkill for overview page).
		
		**Additive Animation**
		
		Animations can be used as absolute or additive at any time. The system performs the appropriate calculations to 
		convert the data to offsets when necessary. This makes the system much more flexible than that of previous versions 
		of the engine since you do not have to specify ahead of time that an animation is to be considered additive.
		
		**Blending Animations**
		
		Animations can be blended together to create more complex final poses through the use of [](Engine/Animation/NodeReference/Blend) 
		and [](Engine/Animation/Blendspaces). For instance, a running animation can be blended with aim poses or 
		facial animation to create an output animation of the player running and aiming or talking at the same time while 
		being able to keep the source animations separate. This allows for the reuse of a single source animation in many 
		circumstances.

		**Animation Poses**

		An Animation Pose is essentially a snapshot of the Skeleton, including the position and rotation of all of its 
		bones. Think of a pose as what you see if you pause the playback of an animation. For example, if you paused a run 
		animation mid-stride, you might see something like this:

		![](AnimationPose_Running.png)(w:600)

		It is as if the mesh, via the underlying Skeleton, has been posed. The data that represents the transforms of 
		all of the bones in the Skeleton is what makes up the actual Animation Pose.

		Some AnimationSequences are designed purely to be used as poses. For instance, you might have a series of short 
		one- or two-frame animations that simply define a pose. The pose below is from this type of Animation Sequence, 
		which is designed to be used to cause the mesh to aim its weapon where the player is looking.

		![](AnimationPose_Aiming.png)(w:600)

		The Animation system uses this concept of Animation Poses within the AnimGraph. The data output from an AnimationSequence, 
		Blendspace, or simple blend node is an Animation Pose, or snapshot of the animation up to that point, to apply 
		to the SkeletalMesh. 

		**Component vs Local Space**

		[INCLUDE:Engine/Animation/NodeReference/SpaceConversion#intro]

		**Morph Targets**

		[INCLUDE:Engine/Content\FBX\MorphTargets#Intro]

[/COMMENT]
