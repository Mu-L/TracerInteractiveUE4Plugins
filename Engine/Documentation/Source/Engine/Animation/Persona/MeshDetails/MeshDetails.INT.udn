Availability:Public
Title:Skeletal Mesh Asset Details
Crumbs: %ROOT%, Engine, Engine/Animation, Engine/Animation/Persona
Description:User guide for the Asset Details panel in the Skeletal Mesh Editor.
Related: Engine/Content/Types/SkeletalMeshes
Related: Engine/Rendering/Materials
Related: Engine/Content/Types/StaticMeshes/HowTo/LODCollision
Related: Resources/ContentExamples/Cloth
Related: Engine/Content/FBX/SkeletalMeshes
version: 4.16
type:reference
topic-image:SkeletalMeshAssetDetails.png
tags:Animation
tags:Skeletal Mesh
tags:FBX Importing

[TOC (start:2 end:2)]

![](MeshDetails.png)(w:940)

[EXCERPT:Overview]
The **Asset Details** panel, which is located inside of the **Skeletal Mesh Editor**, shows specific properties pertaining to a Skeletal Mesh (such as the Materials being applied to its surface) as well as skinning and LOD options. 
You can also assign and adjust APEX clothing, or define and associate a **Physics Asset** for the Skeletal Mesh (which is needed for creating ragdoll type motions). 
[/EXCERPT:Overview]

This page highlights each section within the Asset Details panel with links to additional documentation.

## Materials 

All materials applied to meshes modeled in external applications will be exported with the mesh. 
When importing a mesh into Unreal Engine 4 (UE4), you can automatically import its materials as part of the [FBX Import Process](Engine/Content/FBX/Materials). 
Materials will appear inside of the Skeletal Mesh Editor under the **Materials** section and can be overridden by any other Materials that exist within the UE4 project. 

![](MaterialsTable.png)

[REGION:tip]
You can add **Material Slots**, which can be used to override an LOD's section (excluding the base LOD).
[/REGION]

## LODs

When importing a Skeletal Mesh, you can also import the [Level of Details](Engine/Content/ImportingContent/ImportingSkeletalLODs/) (**LODs**) that were created and associated with the mesh. 

![](LODSection.png)

You can **Highlight** portions of the mesh, or **Isolate** portions to only show certain sections of the mesh by clicking your desired option's checkbox. 
You can also assign Material Elements from the Material section to **Material Slots**, or override sections per LOD.

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![Highlight On](HighlightOption.png)(w:1000)
	[/PARAM]
	[PARAM:after]
	![Isolate On](IsolateOption.png)(w:1000)
	[/PARAM]
[/OBJECT]

_The comparison slider toggles between highlighting the helmet with its character, versus isolating the helmet from its associated character._

The LODs section also allows you to define when to use your LODs with the **Screen Size** option (how near or far the LOD should become visible), as well as defining the amount of **LODHysteresis** (flickering) to avoid when you're on an LOD boundary. 
Inside of the **Viewport**, you can click the **Preview LODs** button to switch between the available LODs (it may also help to enable **Display Info** for statistical information). 

![](previewLODs.png)

Using the LOD Previewer, you can inspect the visual differences between LODs. Also, you can inspect statistical information about each LOD. For example, the amount of triangles in LOD 2 is almost half the amount of triangles in LOD 0. 

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![LOD 0](LOD0.png)
	[/PARAM]
	[PARAM:after]
	![LOD 2](LOD2.png)
	[/PARAM]
[/OBJECT]

You can turn on/off casting shadows on a per element, per LOD basis (some areas might not require shadow casting).

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![Cast Shadows On](castshadows1.png)(w:1000)
	[/PARAM]
	[PARAM:after]
	![Cast Shadows Off](castshadows2.png)(w:1000)
	[/PARAM]
[/OBJECT]

## Reduction Settings

[REGION:warning]
These options require the use of Simplygon. For more information on LODs and Reduction settings, please see the [](Engine/Content/Types/StaticMeshes/LOD) page for more information. 
[/REGION]

In addition to the options outlined above, each generated LOD allows for defining the **Reduction Settings** for optimization. 

![](ReductionSettings.png)

As of Unreal Engine 4.16, you can also bake a pose into an LOD using the **Bake Pose** reduction setting. This can be set to a single frame animation sequence which will be applied to the resulting LOD mesh. 
This is useful when removing bones and still wanting to retain a pose, similar to the example video shown below. 

[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:videoid]
	4vcmZwpzV74
	[/PARAMLITERAL]
	[PARAMLITERAL:width]
	100
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	56.25
	[/PARAMLITERAL]
	[PARAMLITERAL:units]
	%
	[/PARAMLITERAL]
	[PARAMLITERAL:type]
	simple
	[/PARAMLITERAL]
[/OBJECT]


## Clothing

The **Clothing** section associates an [](Engine/Physics/Apex) clothing file with the mesh. Click the **Add APEX clothing file...** button to begin importing an .apb or .apx file, 
which uses the same pipeline as importing an FBX file. 

![](AddApex.png)

Once you've imported your Apex file, you can adjust its [Physics Properties](Engine/Physics/PhAT/Reference) to achieve your desired results. 

![](OwenApexCloth.png)

[REGION:caption]
For example, this character has two Apex files associated with it; one for the character's tie, and the other for the character's coat.
[/REGION]


## Mesh

In the **Mesh** section, you can see what [Skeleton](Engine/Animation/Skeleton) asset the mesh is using and navigate to it with the **Content Browser**. 
There are also options for setting **Positive Bounds Extension** and **Negative Bounds Extension** values, which can be used to offset the bounds values of the mesh when they're being imported. 
The other option, **Use Full Precision UVs** can be turned on to use 32 bit UVs (or left off to save memory, thereby using 16 bit UVs). 

![](MeshSection.png)

## Physics

The **Physics** section allows you to **Enable Per Poly Collision** for the mesh, which uses skinned data for collision information. Per Poly Collision cannot be used for simulation. In most cases, you're better off using a **Physics Asset**. 
There is also the ability to assign a [Physics Asset](Engine/Physics/PhAT) to the Skeletal Mesh, which is used for processing physics and collision information. This is used for per-bone hit detection, accurate bounding box calculation, and ragdoll physics. 

![](PhysicsSection.png)

## Lighting

The **Shadow Physics Asset** option in the Lighting section allows you to specify a Physics Asset, with shapes that will be used for shadowing when components have their **Cast Character Capsule Direct Shadow** or **Cast Character Capsule Indirect Shadow** option(s) enabled. 
Only spheres and sphyl shapes in the Physics Asset are supported. Additionally, it's imporant to remember that capsule shadows can result in higher rendering costs when more shapes are used. 

![](Lighting.png)

In-game, indirect capsule shadows are a good way to ground characters to the environment: 

![](IndirectShadows.png)(w:840)

Direct capsule shadows can be used to achieve soft character shadows in an efficient baked lighting environment. 

![](DirectShadows.png)(w:840)

The light's **Source Radius** or **Source Angle** determines how soft the shadows will be. Capsule shadowing is very efficient because it computes shadowing at half-resolution with a depth-aware up-sample, using screen tile culling to limit the shadowing work (where it's needed). 
The GPU cost is proportional to the number of capsules and the number of pixels affected by the casted shadow. 

## Skeletal Mesh

In this section, you can assign a **Post Process Anim Blueprint**, which is an [Animation Blueprint](Engine/Animation/AnimBlueprints) class, to run as a Post Process for the mesh. This Blueprint will be run before Physics, but after the Main Anim Instance for any [Skeletal Mesh Component](Engine/Components/SkeletalMesh/) using the mesh. 

![](SkeletalMesh.png)

This allows you to set up [](Engine/Animation/NodeReference/SkeletalControls/AnimDynamics/) or other controllers that will always be applied to the associated mesh, whether that mesh is viewed with the Animation Tools, as part of a Sequencer cinematic, or through a Skeletal Mesh Actor placed in a level. 
This is especially useful for complex characters that run multiple Animation Blueprints; because any Anim Dynamics, controllers, and IK (among other Anim Blueprint features) will be related to the mesh and not have to be duplicated in every Animation Blueprint intended to be used with the mesh. 

To assign a Post Process Anim Blueprint, select the drop-down menu and specify your default Animation Blueprint. 

![](SelectPostProcessAnimBP.png)

The example video illustrates how the Post Process Anim Blueprint is run during gameplay on a Skeletal Mesh. 

[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:videoid]
	uroFU3M_-C4
	[/PARAMLITERAL]
	[PARAMLITERAL:width]
	100
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	56.25
	[/PARAMLITERAL]
	[PARAMLITERAL:units]
	%
	[/PARAMLITERAL]
	[PARAMLITERAL:type]
	simple
	[/PARAMLITERAL]
[/OBJECT]


If you have a more complex animation setup that uses multiple Animation Blueprints, you may need to include a **Sub-Graph Input** node to the Post Process Anim Blueprint. 

![](SubGraphInput.png)

[REGION:caption]
This will allow you to get the pose information from a parent Animation Blueprint (if applicable) rather than using the Skeletal Mesh's base pose.
[/REGION]

## Transform

The **Transform** section inside of the **Skeletal Mesh Editor** allows you to offset the mesh from the world origin (when imported) to match its position in the source art program through the **Import Translation** option. 
**Import Rotation** will rotate the mesh (when imported) to match its position in the source art program, while the **Import Uniform Scale** option will import the uniform scaling of the mesh from the source art program. 

![](TransformSection.png)

## Thumbnail

**Thumbnail** options allow you to modify how the mesh is framed in the thumbnail that appears in the **Content Browser** or **Editor Toolbar**. 

![](ThumbnailSection.png)

## Import Settings

The **Import Settings** section allows you to modify any of the settings used during the initial [FBX Skeletal Mesh Import Process](https://docs.unrealengine.com/latest/INT/Engine/Content/FBX/ImportOptions/#skeletalmeshoptions) for the mesh. 

![](ImportSettingsSection.png)

