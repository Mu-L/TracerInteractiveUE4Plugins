Availability:Public
Title:Skeletal Mesh Asset Details
Crumbs: %ROOT%, Engine, Engine/Animation, Engine/Animation/Persona
Description:User guide for the Asset Details panel in the Skeletal Mesh Editor.
Related: Engine/Content/Types/SkeletalMeshes
Related: Engine/Rendering/Materials
Related: Engine/Content/Types/StaticMeshes/HowTo/LODCollision
Related: Resources/ContentExamples/Cloth
Related: Engine/Content/FBX/SkeletalMeshes
version: 4.16
type:reference
topic-image:SkeletalMeshAssetDetails.png
tags:Animation
tags:Skeletal Mesh
tags:FBX Importing


![](MeshDetails.png)(w:940)

The **Asset Details** panel, which is located inside of the **Skeletal Mesh Editor**, shows specific properties pertaining to a Skeletal Mesh (such as the Materials being applied to its surface) as well as skinning and LOD options. You can also assign and adjust APEX clothing, or define and associate a **Physics Asset** for the Skeletal Mesh (which is needed for creating ragdoll type motions).

This page highlights each section within the Asset Details panel with links to additional documentation.

## Materials

All materials applied to meshes modeled in external applications will be exported with the mesh. When importing a mesh into Unreal Engine 4 (UE4), you can automatically import its materials as part of the [FBX Import Process](Engine/Content/FBX/Materials). Materials will appear inside of the Skeletal Mesh Editor under the **Materials** section and can be overridden by any other Materials that exist within the UE4 project.

![](MaterialsTable.png)

[REGION:tip]
You can add **Material Slots**, which can be used to override an LOD's section (excluding the base LOD).
[/REGION]

## LODs

When importing a Skeletal Mesh, you can also import the [Level of Details](Engine/Content/ImportingContent/ImportingSkeletalLODs) (**LODs**) that were created and associated with the mesh.

![](LODSection.png)

You can **Highlight** portions of the mesh, or **Isolate** portions to only show certain sections of the mesh by clicking your desired option's checkbox. You can also assign Material Elements from the Material section to **Material Slots**, or override sections per LOD.

[OBJECT:ComparisonSlider]
 [PARAM:before]
 ![Highlight On](HighlightOption.png) 
 [/PARAM]
 [PARAM:after]
 ![Isolate On](IsolateOption.png) 
 [/PARAM]
[/OBJECT]

You can turn on/off casting shadows on a per element, per LOD basis (some areas might not require shadow casting).

[OBJECT:ComparisonSlider]
    [PARAM:before]
    ![Cast Shadows On](castshadows1.png) 
    [/PARAM]
    [PARAM:after]
    ![Cast Shadows Off](castshadows2.png) 
    [/PARAM]
[/OBJECT]

Inside of the **Viewport**, you can click the **Preview LODs** button to switch between the available LODs (it may also help to enable **Display Info**  for statistical information).

![](previewLODs.png "previewLODs.png")

Using the LOD Previewer, you can inspect the visual differences between LODs. Also, you can inspect statistical information about each LOD. For example, in the image below, the amount of triangles in LOD 2 is almost half the amount of triangles in LOD 0.

[OBJECT:ComparisonSlider]
    [PARAM:before]
    ![LOD 0](LOD0.png) 
    [/PARAM]
    [PARAM:after]
    ![LOD 2](LOD2.png) 
    [/PARAM]
[/OBJECT]

### LOD Info

The LOD Info section enables you to define how to render the LOD along with other settings related to the current LOD: 

![LOD Info Section-2.png](LOD20Info20Section-2.png "LOD Info Section-2.png")

| Property | Description |
| --- | --- |
| **Screen Size** | Screen Size to display the LOD. The Screen Size is based around the projected diameter of the bounding sphere of the model. For example, 0.5 means half the screen's maximum dimension. |
| **LOD Hysteresis** | Used to avoid "flickering" when on LOD boundry. Only take into account when moving from complex to simple. |
| **Source Import Filename** | The filename of the file that was used to import the LOD if it was not auto-generated. |
| **Allow CPUAccess** | Keeps the LODs data on the CPU so it can be used for things such as sampling in FX. |
| **Support Uniformly Distributed Sampling** | Mesh supports uniformly distributed sampling in constant time. Memory cost is 8 bytes per triangle. Example usage is uniform spawning of particles. |
| **Bake Pose** | Enables you to bake a single frame into in LOD mesh (this is useful for when you are removing bones and want to retain a pose, see the example video below this table). |
| **Bones to Remove** | Bones which should be removed from the Skeleton for the LOD level. |
| **Reduction Settings** | [Reduction settings](https://docs.unrealengine.com/en-us/Engine/Animation/Persona/MeshDetails#reductionsettings) to apply when building render data. |
| **Regenerate LOD** | Enables you to regenerate the current LOD. |
| **Remove this LOD** | Enables you to remove the current LOD. |
| **Reimport** | Enables you to reimport the LOD from your computer. |
| **Reimport (New File)** | Enables you to reimport a new LOD to overwrite the existing LOD. |

The following is an example of using Bake Pose to retain the hand pose of our character while moving between LODs. 

[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:videoid]
	4vcmZwpzV74
	[/PARAMLITERAL]
	[PARAMLITERAL:width]
	100
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	56.25
	[/PARAMLITERAL]
	[PARAMLITERAL:units]
	%
	[/PARAMLITERAL]
	[PARAMLITERAL:type]
	simple
	[/PARAMLITERAL]
[/OBJECT]

## Reduction Settings

In addition to the options outlined above, each generated LOD allows for defining the **Reduction Settings** for optimization. 

[REGION:warning]
As of engine release 4.22, UE4 support for Simplygon has been deprecated and will no longer be supported. You can continue to get updates from Simplygon but will have to do your own integration into the engine. As an alternative, we have our own internal solution which you can read more about on the [Skeletal Mesh Simplification](Engine/Content/Types/SkeletalMeshes/SkeletalMeshReductionTool) documentation pages.
[/REGION]

![](ReductionSettingsOnly.png "ReductionSettingsOnly.png")

The following settings can be applied when building render data: 

| Property | Description |
| --- | --- |
| **Reduction Method** | The method to use when optimizing the Skeletal Mesh LOD. You can set this to Triangles, Accuracy or Any (when either requirement is met). |
| **Triangle Percentage** | The simplification uses this percentage of the source meshe's triangle count as a target. |
| **Accuracy Percentage** | The simplification uses this as how much to deviate from the source mesh. Works better with hard surfaces. Setting this to 100% is the same as the Base LOD. |
| **Remap Morph Targets** | Remap the morph targets from the base LOD onto the reduced LOD. |
| **Silhouette** | How important the shape of the geometry is. |
| **Texture** | How important texture density is. |
| **Shading** | How important shading quality is. |
| **Skinning** | How important the skinning quality is. |
| **Welding Threshold** | The welding threshold distance. Vertices under this distance will be welded. |
| **Recompute Normal** | Whether Normal smoothing groups should be preserved. If true, then Hard Edge Angle (Normals Threshold) is used. |
| **Hard Edge Angle** | If the angle between two triangles are above this value, the normals will not be smooth over the edge between those two triangles. This is only used when Recalculate Normals is set to True. |
| **Max Bones Influence** | Maximum number of bones that can be assigned to each vertex. |
| **Base LOD** | Base LOD index to generate this LOD. By default, we generate from LOD 0. |

Reduction Settings that use a Bone List also allows whitelist joints (as well as blacklist), so that you can just keep only certain joints. 

![](BoneFilterAction_01.png "BoneFilterAction_01.png")

Use the **Bone Filter Action Option** to define your desired setting after adding Bones to the Bone List.

## Sharing LOD Settings

Skeletal Meshes can use a shared Data Asset of the **LOD Settings** Asset type instead of setting LOD information directly (this includes the ability to share Reduction Settings). Inside the **Asset Details** panel for a Skeletal Mesh, under **LOD Settings**, you can select which LOD Settings asset to use or click the **Generate Asset** button to generate a new LOD Settings asset based on the current settings. 

![](LODSettings.png "LODSettings.png")

After selecting an LOD Settings Asset, options will be grayed out and use the information contained within the asset. 

![](AssignedLODSettings.png "AssignedLODSettings.png")  

**To create a new LOD Settings Asset:**  

1\. In the **Content Browser** from the **Add New** button under **Miscellaneous**, select **Data Asset.**

![](DataAsset.png "DataAsset.png")

2\. After creating the asset, assign the **SkeletalMeshLODSettings** as the class. 

![](DataAssetClass.png "DataAssetClass.png")

3\. You can then set up your LOD Groups and settings to store with the asset that can be used with other Skeletal Meshes. 

![](LOD_DataAsset.png "LOD_DataAsset.png")

## Clothing

The **Clothing** section associates an [APEX](Engine/Physics/Apex) clothing file with the mesh. Click the **Add APEX clothing file...** button to begin importing an .apb or .apx file, which uses the same pipeline as importing an FBX file.

![](AddApex.png)

Once you've imported your Apex file, you can adjust its [Physics Properties](Engine/Physics/PhysicsAssetEditor/Reference) to achieve your desired results.

![](OwenApexCloth.png)

[REGION:caption]
For example, this character has two Apex files associated with it; one for the character's tie, and the other for the character's coat.
[/REGION]

## Mesh

In the **Mesh** section, you can see what [Skeleton](Engine/Animation/Skeleton) asset the mesh is using and navigate to it with the **Content Browser**. There are also options for setting **Positive Bounds Extension** and **Negative Bounds Extension** values, which can be used to offset the bounds values of the mesh when they're being imported. The other option, **Use Full Precision UVs** can be turned on to use 32 bit UVs (or left off to save memory, thereby using 16 bit UVs).

![](MeshSection.png)

## Physics

The **Physics** section allows you to **Enable Per Poly Collision** for the mesh, which uses skinned data for collision information. Per Poly Collision cannot be used for simulation. In most cases, you're better off using a **Physics Asset**. There is also the ability to assign a [Physics Asset](Engine/Physics/PhysicsAssetEditor) to the Skeletal Mesh, which is used for processing physics and collision information. This is used for per-bone hit detection, accurate bounding box calculation, and ragdoll physics.

![](PhysicsSection.png)

## Lighting

The **Shadow Physics Asset** option in the Lighting section allows you to specify a Physics Asset, with shapes that will be used for shadowing when components have their **Cast Character Capsule Direct Shadow** or **Cast Character Capsule Indirect Shadow** option(s) enabled. Only spheres and sphyl shapes in the Physics Asset are supported. Additionally, it's imporant to remember that capsule shadows can result in higher rendering costs when more shapes are used.

![](Lighting.png)

In-game, indirect capsule shadows are a good way to ground characters to the environment:

![](IndirectShadows.png)(w:840)

Direct capsule shadows can be used to achieve soft character shadows in an efficient baked lighting environment.

![](DirectShadows.png)(w:840)

The light's **Source Radius** or **Source Angle** determines how soft the shadows will be. Capsule shadowing is very efficient because it computes shadowing at half-resolution with a depth-aware up-sample, using screen tile culling to limit the shadowing work (where it's needed). The GPU cost is proportional to the number of capsules and the number of pixels affected by the casted shadow.

## Skeletal Mesh

In this section, you can assign a **Post Process Anim Blueprint**, which is an [Animation Blueprint](Engine/Animation/AnimBlueprints) class, to run as a Post Process for the mesh. This Blueprint will be run before Physics, but after the Main Anim Instance for any [Skeletal Mesh Component](Engine/Components/SkeletalMesh) using the mesh.

![](SkeletalMesh.png)

This allows you to set up [AnimDynamics](Engine/Animation/NodeReference/SkeletalControls/AnimDynamics) or other controllers that will always be applied to the associated mesh, whether that mesh is viewed with the Animation Tools, as part of a Sequencer cinematic, or through a Skeletal Mesh Actor placed in a level. This is especially useful for complex characters that run multiple Animation Blueprints; because any Anim Dynamics, controllers, and IK (among other Anim Blueprint features) will be related to the mesh and not have to be duplicated in every Animation Blueprint intended to be used with the mesh.

To assign a Post Process Anim Blueprint, select the drop-down menu and specify your default Animation Blueprint.

![](SelectPostProcessAnimBP.png)

The example video illustrates how the Post Process Anim Blueprint is run during gameplay on a Skeletal Mesh.

[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:videoid]
	uroFU3M_-C4
	[/PARAMLITERAL]
	[PARAMLITERAL:width]
	100
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	56.25
	[/PARAMLITERAL]
	[PARAMLITERAL:units]
	%
	[/PARAMLITERAL]
	[PARAMLITERAL:type]
	simple
	[/PARAMLITERAL]
[/OBJECT]

If you have a more complex animation setup that uses multiple Animation Blueprints, you may need to include a **Sub-Graph Input** node to the Post Process Anim Blueprint.

![](SubGraphInput.png)

[REGION:caption]
This will allow you to get the pose information from a parent Animation Blueprint (if applicable) rather than using the Skeletal Mesh's base pose.
[/REGION]

You can also control whether or not the Post Process instance runs on a Skeletal Mesh Component through Blueprints or get the Post Process Instance assigned. 

![](TogglePostProcess.png)

Above, we have a Skeletal Mesh Component called **Mesh** in which we can call **Toggle Disable Post Process Blueprint** to toggle the state of the assigned Post Process Blueprint. We also use the **Get Post Process Instance** node to return the active Post Process Instance if one is assigned. This is set on the mesh that the component is using, and is evaluated immediately after the main instance.

  
You can also set the value directly inside the **Details** panel when the Skeletal Mesh Component is selected. 

![](DetailsPanel.png "DetailsPanel.png")

## Transform

The **Transform** section inside of the **Skeletal Mesh Editor** allows you to offset the mesh from the world origin (when imported) to match its position in the source art program through the **Import Translation** option. **Import Rotation** will rotate the mesh (when imported) to match its position in the source art program, while the **Import Uniform Scale** option will import the uniform scaling of the mesh from the source art program.

![](TransformSection.png)

## Thumbnail

**Thumbnail** options allow you to modify how the mesh is framed in the thumbnail that appears in the **Content Browser** or **Editor Toolbar**.

![](ThumbnailSection.png)

## Import Settings

The **Import Settings** section allows you to modify any of the settings used during the initial [FBX Skeletal Mesh Import Process](Engine/Content/FBX/ImportOptions/#skeletalmeshoptions) for the mesh.

![](ImportSettingsSection.png)
