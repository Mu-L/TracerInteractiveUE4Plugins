Availability: Docs
Title: AI Perception
Description: Documents the AI Perception Component and how it is used to generate awareness for AI. 
Type: landing
Version: 4.21
Parent: Engine/ArtificialIntelligence
Tags: AI
Tags: Artificial Intelligence
Tags: Perception
Tags: AI Systems
topic-image: AI_Perception_Topic.png
social-image: AI_Perception_Topic.png
topic-icon: AI_Perception_Topic.png
Order: 2


[TOC (start:2 end:3)]

In addition to [Behavior Trees](Engine/ArtificialIntelligence/BehaviorTrees) which can be used to make decisions on which logic to execute, and the [Environmental Query System (EQS)](Engine/ArtificialIntelligence/EQS) used to retrieve information about the environment; another tool you can use within the AI framework which provides sensory data for an AI is the **AI Perception System.** This provides a way for Pawns to receive data from the environment, such as where noises are coming from, if the AI was damaged by something, or if the AI sees something. This is accomplished with the **AI Perception Component **that acts as a stimuli listener and gathers registered Stimuli Sources. 

When a stimuli source is registered, the event **On Perception Updated** (or **On Target Perception Updated** for target selection) is called which you can use to fire off new Blueprint Script and (or) update variables that are used to validate branches in a Behavior Tree. 

## AI Perception Component

The **AI Perception Component** is a type of [Component](Engine/Components) thatcan be added to a Pawn's Blueprint from the **Components **window and is used to define what senses to listen for, the parameters for those senses, and how to respond when a sense has been detected. You can also use several different functions to get information about what was sensed, what Actors were sensed, or even disable or enable a particular type of sense. 

To add the **AI Perception Component**, click the **+Add Component **button in your Blueprint and select **AIPerception**.

![](AddingPerceptionComponent.png "AddingPerceptionComponent.png")

Once the **AI Perception Component** has been added, you can access its properties inside the **Details **panel. 

### AI Perception Properties

In addition to the common properties available with in the [Details](Engine/Blueprints/Editor/UIComponents/Details) panel for the **AI Perception Component**, you can add the type of **Senses **to perceive under the **AI Perception **and **Senses Config **section. Depending on the type of **Sense**, different properties are available to adjust how the **Sense **is perceived. 

![](AddingSenses.png "AddingSenses.png")

[REGION:note]
The **Dominant Sense** property can be used to assign a **Sense** that should take precedence over other senses when determining a sensed Actor's location. This should be set to one of the senses configured in your **Senses Config **section or set to **None**.
[/REGION]

#### AI Damage

If you want your AI to react to damage events such as [Event Any Damage](Engine/Blueprints/UserGuide/Events#eventanydamage), [Event Point Damage](Engine/Blueprints/UserGuide/Events#eventpointdamage), or [Event Radial Damage](Engine/Blueprints/UserGuide/Events#eventradialdamage), you can use the **AI Damage Sense Config**. The **Implementation **property (which defaults to the engine class **AISense_Damage**) can be used to determine how damage events are handled, however you can create your own damage classes through C++ code. 

![](Perception_Damage.png "Perception_Damage.png")

  
| Property | Description |
| --- | --- |
| **Implementation** | The AI Sense Class to use for these entry (defaults to **AISense_Damage**). |
| **Debug Color** | When using the [AI Debugging](Engine/ArtificialIntelligence/AIDebugging) tools, what color to draw the debug lines. |
| **Max Age** | Determines the duration in which the stimuli generated by this sense becomes forgotten (0 means never forgotten). |
| **Starts Enabled** | Determines whether the given sense starts in an enabled state or must be manually enabled/disabled. |

#### AI Hearing

The **AI Hearing **sense can be use to detect sounds generated by a **Report Noise Event**, for example, a projectile hits something and generates a sound which can be registered with the AI Hearing sense. 

![](Perception_Hearing.png "Perception_Hearing.png")

  
| Property | Description |
| --- | --- |
| **Implementation** | The AI Sense Class to use for this entry (defaults to **AISense_Hearing**). |
| **Hearing Range** | The distance in which this sense can be perceived by the AI Perception system. |
| **Lo SHearing Range** | [INCLUDE:#excerpt_0] |
| **Detection by Affiliation** | Determines if **Enemies**, **Neutrals**, or **Friendlies **can trigger this sense. |
| **Debug Color** | When using the [AI Debugging](Engine/ArtificialIntelligence/AIDebugging) tools, what color to draw the debug lines. |
| **Max Age** | Determines the duration in which the stimuli generated by this sense becomes forgotten (0 means never forgotten). |
| **Starts Enabled** | Determines whether the given sense starts in an enabled state or must be manually enabled/disabled. |

<!--
[EXCERPT:excerpt_0]

This is used to display a different radius in the debugger for **Hearing Range**.   

[/EXCERPT:excerpt_0]
-->

#### AI Prediction

This asks the Perception System to supply Requestor with PredictedActor's predicted location in PredictionTime seconds. 

![](Perception_Prediction.png "Perception_Prediction.png")

  
| Property | Description |
| --- | --- |
| **Debug Color** | When using the [AI Debugging](Engine/ArtificialIntelligence/AIDebugging) tools, what color to draw the debug lines. |
| **Max Age** | Determines the duration in which the stimuli generated by this sense becomes forgotten (0 means never forgotten). |
| **Starts Enabled** | Determines whether the given sense starts in an enabled state or must be manually enabled/disabled. |

#### AI Sight

The **AI Sight** config enables you to define parameters that allow an AI character to "see" things in your Level. When an Actor enters the **Sight Radius**, the AI Perception System signals an update and passes through the Actor that was seen (for example a Player enters the radius and is perceived by the AI who has Sight Perception). 

![](Perception_Sight.png "Perception_Sight.png")

  
| Property | Description |
| --- | --- |
| **Implementation** | The AI Sense Class to use for this entry (defaults to **AISense_Sight**). |
| **Sight Radius** | The max distance over which this sense can start perceiving. |
| **Lose Sight Radius** | The max distance in which a seen target is no longer perceived by the sight sense. |
| **Peripheral Vision Half Angle Degrees** | [INCLUDE:#excerpt_1] |
| **Detection by Affiliation** | [INCLUDE:#excerpt_2] |
| **Auto Success Range from Last Seen Location** | When greater than zero, the AI will always be able to see the a target that has already been seen as long as they are within the range specified here. |
| **Debug Color** | When using the [AI Debugging](Engine/ArtificialIntelligence/AIDebugging) tools, what color to draw the debug lines. |
| **Max Age** | Determines the duration in which the stimuli generated by this sense becomes forgotten (0 means never forgotten). |
| **Starts Enabled** | Determines whether the given sense starts in an enabled state or must be manually enabled/disabled. |

<!--
[EXCERPT:excerpt_1]

How far to the side the AI can see in degrees. The value represents the angle measured in relation to the forward vector, not the whole range. 

[REGION:note]
You can use **SetPeripheralVisionAngle** in Blueprint to change the value at runtime.
[/REGION]
[/EXCERPT:excerpt_1]
-->
<!--
[EXCERPT:excerpt_2]

Determines if **Enemies**, **Neutrals**, or **Friendlies **can trigger this sense. 

[REGION:note]
This property can be used to set up Sight perception for teams. Currently, **Affiliation** can only be defined in C++. For Blueprints, you can use the **Detect Neutrals** option to detect all Actors, then use **Tags** to filter out Actor types.
[/REGION]
[/EXCERPT:excerpt_2]
-->

#### AI Team

This notifies the Perception component owner that someone on the same team is close by (radius is sent by the gameplay code which sends the event). 

![](Perception_Team.png "Perception_Team.png")

  
| Property | Description |
| --- | --- |
| **Debug Color** | When using the [AI Debugging](Engine/ArtificialIntelligence/AIDebugging) tools, what color to draw the debug lines. |
| **Max Age** | Determines the duration in which the stimuli generated by this sense becomes forgotten (0 means never forgotten). |
| **Starts Enabled** | Determines whether the given sense starts in an enabled state or must be manually enabled/disabled. |

#### AI Touch

The **AI Touch** config setting gives you the ability to detect when the AI bumps into something or something bumps into it. For example, in a stealth based game, you may want a Player to sneak by an enemy AI without touching them. Using this Sense you can determine when the Player touches the AI and can respond with different logic. 

![](Perception_Touch.png "Perception_Touch.png")

  
| Property | Description |
| --- | --- |
| **Debug Color** | When using the [AI Debugging](Engine/ArtificialIntelligence/AIDebugging) tools, what color to draw the debug lines. |
| **Max Age** | Determines the duration in which the stimuli generated by this sense becomes forgotten (0 means never forgotten). |
| **Starts Enabled** | Determines whether the given sense starts in an enabled state or must be manually enabled/disabled. |

### Perception Events

The **Events** section enables you to define what happens when the AI Perception System receives an update or when the AI Perception Component is activated or deactivated. 

![](Perception_Events.png "Perception_Events.png")

  
| Property | Description |
| --- | --- |
| **On Perception Updated** | ![](PerceptionUpdated_Event.png "PerceptionUpdated_Event.png") <br> This Event will fire when the Perception System receives an update and will return an array of Actors that signaled the update.  |
| **On Target Perception Updated** | [INCLUDE:#excerpt_3] |
| **On Component Activated** | An Event that is fired when the AI Perception Component is activated. |
| **On Component Deactivated** | [INCLUDE:#excerpt_4] |

<!--
[EXCERPT:excerpt_3]

![](TargetPerceptionUpdated_Event.png "TargetPerceptionUpdated_Event.png")

This Event will fire when the Perception System receives an update and will return the Actor that signaled the update. It also returns an **AI Stimulus** struct that can be broken down to retrieve additional information.   

![](TargetPerceptionStimulus_Event.png "TargetPerceptionStimulus_Event.png")

  
| Property | Description |
| --- | --- |
| **Age** | How long since the Stimulus occurred. |
| **Expiration Age** | How long before the Stimulus becomes invalid. |
| **Strength** | The weight defined in the Stimulus. |
| **Stimulus Location** | Where the Stimulus originated from. |
| **Receiver Location** | Where the Stimulus was registered by the AI Perception System. |
| **Tag** | Any Gameplay Tag associated with the Stimulus. |
| **Successfully Sensed** | Whether the Stimulus was sensed by the AI Perception System (returns True or False). |

[/EXCERPT:excerpt_3]
-->
<!--
[EXCERPT:excerpt_4]

An Event that is fired when the AI Perception Component is deactivated.   

[/EXCERPT:excerpt_4]
-->

### Perception Function Calls

The following functions can be called through Blueprint to get information from or affect the Perception System. 

  
| Function | Description |
| --- | --- |
| **Get Actors Perception** | Retrieves whatever has been sensed about a given Actor and returns a Sensed Actor's Data structure. |
| **Get Currently Perceived Actors** | Returns all Actors that are being perceived based on a given Sense. If no Sense is specified, all Actors currently perceived in any way will be returned. |
| **Get Known Perceived Actors** | Returns any Actors that have been perceived (and not yet forgotten) based on a given Sense. If no Sense is specified, all Actors that have been perceived will be returned. |
| **Get Perceived Hostile Actors** | Returns the list of Hostile Actors (any hostile Actors that had a stimulus sensed which is not expired or successfully sensed). Method can be overridden in Blueprint to return whatever Actors list the user wants. |
| **Request Stimuli Listener Update** | Manually forces the AI Perception System to update properties for the specified target stimuli listener. |
| **Set Sense Enabled** | [INCLUDE:#excerpt_5] |

<!--
[EXCERPT:excerpt_5]

Enable or Disable the specified **Sense Class**. 

[REGION:note]
This only works if the given Sense has already been configured for the target component instance.
[/REGION]
[/EXCERPT:excerpt_5]
-->

## Stimuli Source

The **AI Perception Stimuli Source **Component gives the owning Actor a way to automatically register itself as a stimuli source for the designated Sense(s) within the Perception System. An example use case would be to have an AI character with an AI Perception Component set up to perceive stimuli based on Sight. You could then use the Stimuli Source Component in an Actor (such as an item pickup Actor) and register it as a stimuli for Sight (which would enable the AI to "see" the Actor in the Level). 

To add the **AI Perception Stimuli Source **Component, click the **+Add Component **button in your Blueprint and select **AIPerception Stimuli Source**. 

![](AddingStimuliSource.png "AddingStimuliSource.png")

Once the **AI Perception Stimuli Source **Component has been added, you can access properties for it inside the **Details **panel. 

### Stimuli Properties

In the **Details **panel for the **AI Perception Stimuli Source **Component, the following two options are available for AI Perception: 

![](StimuliSource_Properties.png "StimuliSource_Properties.png")

  
| Property | Description |
| --- | --- |
| **Auto Register as Source** | Whether to automatically register the stimuli for the specified sense with respect to the owning Actor. |
| **Register as Source for Senses** | [INCLUDE:#excerpt_6] |

<!--
[EXCERPT:excerpt_6]

An array of Senses to register as a source for. Click the **+ **sign to add a Source, then click the drop-down and assign the desired Sense. 

![](StimuliSource_Senses.png "StimuliSource_Senses.png")

[/EXCERPT:excerpt_6]
-->

[REGION:note]
You can also assign any custom Senses that have been based on the **AISense** Class.
[/REGION]

### Stimuli Function Calls

The following functions can be called through Blueprint for the **AI Perception Stimuli Source **Component: 

  
| Function | Description |
| --- | --- |
| **Register for Sense** | Registers owning Actor as a stimuli source for the specified Sense class. |
| **Register with Perception System** | [INCLUDE:#excerpt_7] |
| **Unregister from Perception System** | Unregisters the owning Actor from being a source of Sense stimuli. |
| **Unregister from Sense** | Unregisters the stimuli for the specified sense with respect to the owning Actor. |

<!--
[EXCERPT:excerpt_7]

Registers owning Actor as a stimuli source for Senses specified in the **Register as Source for Senses **property and through the **Register for Sense **function call. 

You do not need to call this function if the Auto Register as Source property is enabled.

[/EXCERPT:excerpt_7]
-->

## AI Perception Debugging

You can debug AI Perception using the AI Debugging tools by pressing the '(apostrophe) key while your game is running, then pressing numpad key 4 to bring up the Perception information. 

![](PerceptionDebug_Image.png "PerceptionDebug_Image.png")

[REGION:note]
Please see the AI Debugging tools page and the [Perception](Engine/ArtificialIntelligence/AIDebugging#perception) section for more information.
[/REGION]
