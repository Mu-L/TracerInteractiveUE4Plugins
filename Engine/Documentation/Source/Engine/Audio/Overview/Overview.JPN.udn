INTSourceChangelist:3782314
Availability:Public
Title:オーディオ システムの概要
Crumbs: %ROOT%, Engine, Engine/Audio
Description:SoundCues ノードベースのオーディオ アセット使用などのゲーム内のサウンド再生に使用するオーディオ システムの概要
version:4.12
parent:Engine/Audio
type:overview
order:1
topic-image:Engine/Audio/audio_topic.png


[TOC(start:2)]


アンリアル エンジン 4 (UE4) のオーディオ システムは、いくつかのコンポーネントから構成されます。それぞれが連携してプレイヤーのオーディオ体験を作り出します。 
オーディオ ファイルをエンジンにインポートし、レベル内にドロップすると、調整するための基本的な **ボリューム** レベルや **ピッチ** レベル、さらに **Sound Attenuation (サウンドの減衰)** などを微調整する設定があります。サウンドの減衰では、発生源からの距離に応じてサウンドがどのように聴こえるかを定義します。 

UE4 では、**サウンドキュー** と **サウンドキュー エディタ** でサウンドを合成することができます。これにより、サウンドを結合したり、最終出力を変更するために **Sound ノード** と呼ばれるモディファイアを適用することができます。 
サウンドがどのように聴こえるか、再生されるかを定義するために使ういくつかの追加のエレメントがあります。このページでは、こうしたエレメントと詳しいドキュメントへのリンクを各セクションで示します。 


##サウンド ファイルのインポート

UE4 は、現在、任意のサンプルレートによる非圧縮のリトルエンディアン 16 ビット wave ファイルのインポートをサポートしています (以下のチャートをご覧ください)。最良の結果を得るために、44100 Hz または 22050 Hz のサンプルレートの使用を推奨します。 

| --- | --- |
| 規格 | PCM, ADPCM, DVI ADPCM |
| 形式 | .wav |
| ビット レート | 16 |
| スピーカー チャンネル | Mono、Stereo、2.1、4.1、 5.1、6.1、 7.1 |

サウンド ファイルをエディタにインポートすると、**Sound Wave** アセットが生成されます。これは、レベルに直接ドロップしたり、サウンドキュー を作成するために使用したり、**サウンドキュー エディタ** 内で編集することができます。 

サウンド ファイルは次の 2 種類の方法でインポートできます。 

**コンテンツ ブラウザ** で以下の操作を行います。

1. 	 コンテンツ ブラウザで **[Import (インポート)]** ボタンをクリックします (以下の図参照)。
	![](ImportButton_UI.png)
1. インポートする WAV ファイルを選択します。

または

1. Windows のファイル エクスプローラー ウィンドウからサウンド ファイルを選択します。
1. クリックして、UE4 内の **コンテンツブラウザ** にドラッグします。

UE4 は、マルチチャンネル (例、5.1) サウンドもサポートしており、マルチチャンネル用途でファイルをインポートする場合、特殊な命名規則を使用します。

インポートとマルチチャンネル用途に関する情報については、[オーディオ ファイル](Engine/Audio/WAV/) のドキュメントをご覧ください。 


## サウンド アセットのタイプ

サウンド アセットを追加するには、 **コンテンツ ブラウザ** から ![](CB_button_NewAsset.png) ボタンをクリックし、**サウンド** を選択し、メニューから追加したいアセットを選択します。 

![](selectSoundAsset.png)(h:400)

プロジェクトに追加できるサウンドアセットのタイプがいくつかあります。以下で説明します。 

###サウンド キュー
![](soundCueEditor.png)(w:640)

サウンド キュー は、オーディオ再生の動作を修正、オーディオ エフェクトの結合、**サウンド ノード** でオーディオ モディファイアを適用し最終出力を変更できる合成サウンドです。 

詳細は [サウンドキュー エディタ](Engine/Audio/SoundCues/Editor) のページをご覧ください。 

### サウンド減衰
Sound Attenuation (サウンド減衰) アセットは、減衰プロパティを再利用可能な方式で定義することができます。一度限りの減衰プロパティを指定する場所のどこでも、かわりに Sound Attenuation (サウンド減衰) アセットを指定することができます。これにより、各サウンドの場所に個別に行かなくても減衰プロパティを調整することができます。

![](soundAttenuation.png)

**Distance Model Attenuation** の詳しい情報については、[サウンド減衰](Engine/Audio/DistanceModelAttenuation) のページをご覧ください。 


### リバーブ エフェクト

**Reverb Effect** は、簡単に調整し、レベル内に配置された **Audio Volume** に適用できるいくつかのプロパティを持つ定義可能なアセットです。 
Reverb Effect で、エコー密度、全体的なリバーブ ゲイン、空気吸収などのエレメントを制御できる設定 (以下の画面を参照) を使用して、望ましい全体的な感覚を作り出します。  

![](reverbeffect.png)


### Sound クラス
**Sound クラス** は多数のサウンド アセットに適用できるプロパティの集まりです。

Sound クラス内のプロパティは、既存の値の乗数として機能し、その Sound クラス に割り当てられたすべてのサウンド アセットによって実行されます。  

![](soundClassProperties.png)

階層は、**子クラス** を追加することで作成できます。これにより、親クラスから指定されたプロパティだけを子クラスに渡すことができます。**Sound クラス エディタ** 内でクラスをまとめて接続できます。これは、**サウンドキュー エディタ** のようなノード ベースのインターフェースを使用しています。

 ![](soundClassEditor.png)(w:640)

**Passive Sound Mixes** (以下の **Sound Mix** のセクションを参照) を サウンド クラス に追加することもできます。これは、サウンド クラス が再生されるといつでも自動的に開始し、アクティベートします (例、ダイアログの サウンド クラス が再生されるたびに、音楽を自動的に低くします)。  


### Sound Mix
Sound Mix では、**EQ settings** (Equalizer Settings) を設定し、Sound クラスの **ボリューム** と **ピッチ** のプロパティを変更することができます。

![](soundMixDetails.png)

複数の Sound Mix を同時にアクティブにすることが可能であり、すべてが全体的なオーディオ エフェクトに寄与します。**Push Sound Mix Modifier** ノードと **Pop Sound Mix Modifier** ノードを使用して、Sound Mix を直接ブループリント内に **Push** (アクティベート) または **Pop** (非アクティベート) することができます。または、特定の Sound クラスでサウンドが指定閾値内で再生している場合に受動的にアクティベートします。

しかし、この **Push/Pop** 方式は、サウンド ミックスが大量にあってその中で切り替えようとすると非常に複雑になることがあります。そこで **Set Sound Mix Class Override** Blueprint ノードが役立ちます。アクティブな Sound Mix で持っている Sound クラスを使うように設定し、現在の Sound クラスと新しい Sound クラスとの間で時間の経過に伴い補間するようにします。

![](image_37.jpg)

次に、**Clear Sound Mix Class Override** を使って Sound Mix を元の設定に戻すことができます。

**コンテンツ ブラウザ** でアセットを **ダブルクリック** して開くことができる Sound Mix アセットの中には、いくつかのプロパティがあります。 
このサウンド ミックスに対して EQ 設定を指定して、高、中、低の周波数とゲインを調整することができます。複数の Sound Mix の EQ Settings は結合できないため、**EQ Priority** ではアクティブなサウンド ミックスのプロパティの中で特定の時間にどれを適用するかを制御できます。

Sound クラスのセクション内では、どの Sound クラスが、サウンド ミックスの影響を受けるかを設定します。各 Sound クラス について、**ボリューム** や **ピッチ** のアジャスターを設定できます。サウンドミックスの設定を子クラスに適用するかどうかを設定します。または、**VoiceCenterChannelVolume** を修正します。

Sound Mix のセクションでは、Sound Mix プロパティをどのように適用するか、または取り除くかについて指定できます。**Delay** は、サウンド ミックスのプロパティの適用がどれくらい前に開始すべきかを示します。**Fade in Time** と **Fade out Time** は、エフェクト無しから指定したプロパティにどれくらい速く移行するかを指定します。**Duration** では、指定持続期間後に、プッシュされた Sound Mix を自動的にポップすることができます。値 1 は、決して自動的にポップしないことを表し、受動的に適用された Sound Mixes は自動的にポップしません。


### Dialogue Voice と Dialogue Wave
**Dialogue Voice** アセットと **Dialogue Wave** アセットは、インゲームの dialogue event の生成、サブタイトルの作成、ローカリゼーション作業を補うために使用されます。 

新規作成した Dialogue Voice アセットを編集する場合、ボイス アクタの **Gender (性別)** と **Plurality (複数)** を定義することができます。Dialogue Voice 内でオーディオ アセットは指定しませんが、ここで提供する情報は、Dialogue Wave 内で参照することができます。 

Dialogue Wave にはさらに多くのオプションがあり、オーディオとスピーカー / リスナーがつながる場所です。ダイアログのオーディオとサブタイトル テキストとの相関関係が作られる場所でもあります。Dialogue Wave は、ダイアログの一行を表し、Dialogue Wave 設定の中心となるコンポーネントは、**Dialogue Contexts** セクションです。 

![](dialogueWaveDetails.png)

**[Dialogue Contexts (ダイアログ コンテキスト)]** セクション内で、Dialogue Voice を割り当てることで、**Speaker** または **Directed At (ダイアログの相手)** を各セクションで指定することができます。 
ダイアログの実際のオーディオ ラインを Sound Wave として追加することができます。これを行うには、コンテキスト ウィンドウを展開し、ドロップダウンメニューから必要なアセットを選択する、または **コンテンツ ブラウザ** でアセットをポイントします。 

同じダイアログのセリフを発する複数のアクタが存在する場合、 **[Add Dialogue Context (ダイアログ コンテキストの追加)]** オプションを使用して、新しい **Speaker** と **Directed At** のセクションを設定し、ダイアログに対して新しいエントリを作成することができます。

[REGION:note]
Dialogue Wave アセットは、**Sound Cue Editor** 内で Dialogue Player ノードを使用することで、サウンド キューにも適用することができます。また、**Play Dialogue at Location** ノードと **Play Dialogue Attached** ノードを使用して、ブループリント内から直接 Dialogue Wave にアクセスすることもできます。 
[/REGION]

Dialogue Contexts に加えて、**Mature** フィルタを適用することができます。**Mature** フィルタは、年齢制限のあるアダルト コンテンツを含む旨をダイアログにフラグ付けします。**Script** で、**Spoken Text** セクション内でアタッチされたオーディオで話されているテキストを入力することができます。 
翻訳目的またはボイスアクタへの注記のためにオーディオの状況に応じた情報を **Voice Actor Direction** セクションに入力することもできます。 

詳細は、[](Engine/Audio/Dialogue) の例を参照してください。


## 戦略

### 全般的な音量のガイドライン

最大音量は、機能する全体的なバンド幅で変動します。 
例えば、ボリューム 1.0 のステレオ ファイルは、モノファイルの 2 倍の音量になります。同様に、4 つのモノファイルは音量が 4 倍になります。しかし、最終的には全体の閾値に達してしまい、出力にクリップやゆがみが発生します。

どのサウンドキューでも、約 2.0 までのボリューム設定は、オーディオ ファイルの認知音量を増加させますが、2.0 より大きなものは増加しません。 
単独キューは決してゆがみませんが、ゲーム内で複数のキューが同時に再生されるとオーバーロードの原因となるため、すべてのファイルを最大音量にしないでください。

一貫性のあるボリューム案を練るか、以下の一般的なガイドラインを考慮してください。

|カテゴリ| およその音量| 
| --- | --- |
| ダイアログ | 1.4 | 
| 音楽 | 0.75 | 
| 武器 | 1.1 | 
| 環境音 | 0.5 | 

さらに、一貫性を保持するために、音楽を除いて、ほぼすべての場所でモノ アセットのみの使用を考慮してもよいでしょう。

### ボリューム ダッキング

**ボリューム ダッキング** は一般的に、ダイアログなど聴こえる必要があるものを除いて他のサウンドすべての音量を下げるために使用します。 

このプロセスは通常、次の要素から構成されます。 

* ダッキングを生じさせる Sound クラス を特定する (例、ダイアログ)
* Sound クラス からのサウンドがトリガーされると、他の Sound クラス の音量が下がり始めます (Sound Mix : Fade in Time = 0.3 秒)
* 他の Sound クラス の音量を下げる量を指定します。 (Sound Mix : Volume Adjuster = 0.4).
* ダッキングしている Sound クラスからのサウンドが停止すると、音量を大きくしている他のクラスの音量が通常の音量になります (Sound Mix : Fade Out Time = 0.3 秒).
* ダッキング プロセスに対する Sound クラスの例外 (例：音楽) 、もしくは影響を受けない Exceptions と呼ばれる Sound クラス が必要な場合もあるでしょう。

類似の手法を使用して、オーディオの重要な部分を強調して、表面的な重要でないオーディオ要素に埋もれないようにします。 


### サウンドのメモリ使用の最適化

コンテンツ オーサリング時は、オーディオの忠実度を維持する一番低いサンプルレートの使用が最適です。例えば、高周波数 (ガンショットなど) 一般的に再生されるエフェクトはより高い周波数 (例えば 40.0 KHz) でなくてはいけないのに対し、ダイアログでは 22.1 kHz でもまだ聞こえがよくなります。 
クオリティ設定に同じようなヒューリスティックを適用することができます。




