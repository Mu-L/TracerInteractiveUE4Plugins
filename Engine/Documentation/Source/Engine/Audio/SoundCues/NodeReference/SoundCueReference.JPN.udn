INTSourceChangelist:3782314
Availability:Public
Title:サウンド キュー リファレンス
Crumbs: %ROOT%, Engine, Engine/Audio
Description:サウンド キューとそのプロパティに使用できるノードを説明したリファレンス
version:4.9
Parent:Engine/Audio
type:reference
order:6

[TOC (start:2)]


アンリアル エンジンには、プロパティを変更できる様々なサウンド ノードがあり、**サウンド キュー エディタ** で複雑で面白いサウンド キューを作成できます。こうしたサウンド ノードは **[Palette (パレット)]** パネルにあります。

![Sound node list](SoundCueEditor_NodeList.png)

このページでは、使用できるサウンド ノードをプロパティと合わせて説明します。

**サウンド キュー エディタ** に関する詳細は、 [](Engine/Audio\SoundCues\Editor) をご覧ください。**サウンドキュー エディタ** の UI に関する詳細は、 [](Engine/Audio\SoundCues\Editor\Interface) をご覧ください。

[REGION:tip]
ノードを右クリックしてから **[Add Input(入力を追加)]** をクリックして、入力を追加できるノードもあります。
[/REGION]

## Attenuation ノード

**Attenuation (減衰)** ノードは、空間化、減衰、半径の各プロパティを調整するために使用されます。

[REGION:note]
Attenuation ノードを使ってサウンド キューの減衰設定をオーバーライドしたい場合は、**サウンド キュー エディタ** で Attenuation ノードの **[Override Attenuation]** チェック ボックスを True に設定し、レベル エディタの **[Details (詳細)]** パネルでサウンド キュー アセットの **[Override Attenuation]** チェック ボックスを False に設定する必要があります。
[/REGION]

![Attenuation Node](SoundCueEditor_Attenuation.png)

| プロパティ | 説明 |
| --- | --- |
| [REGION:tablesection]減衰[/REGION] ||
| **Attenuation Settings** | Sound Attenuation (サウンド減衰) アセットからコピーされた減衰設定です。既存の減衰設定を使用したい場合にこのプロパティを使用します。
| **Attenuate** | true の場合は、入力されたサウンドを距離に応じてフェードアウトさせます。 |
| **Spatialize** | true の場合は、入力されたサウンドを 3D 空間に配置します。 |
| **Distance Algorithm** | 入力サウンドを減衰する際に使用する補間方法です。距離アルゴリズムの各タイプの説明については、[距離モデルの減衰カーブ](Engine/Audio/DistanceModelAttenuation) をご覧ください。 |
| **Attenuation Shape** | ドロップダウン リストからの減衰エリアの形です。 |
| **Radius** | 減衰の半径です。 |
| **Falloff Distance** | 減衰に対するフォールオフ距離です。 |
| **Non-Spatialized Radius** | 音源が空間化されているものとして処理されている場合の音源からの距離です。 |
| **Attenuate With LPF (ローパス フィルタによる減衰)** | true の場合はローパス フィルタ (LPF) による減衰が有効になります。 |
| **LPFRadius Min (ローパス フィルタ半径最小) ** | ローパス フィルタの適用が開始される音源からの距離。 |
| **LPFRadius Max (ローパス フィルタ半径最大) ** | ローパス フィルタの最大量が適用される音源からの距離。 |
| **Override Attenuation** | true の場合、既存の減衰設定をオーバーライドします。 |


ステレオ ファイルは、左右のチャンネルで均等に再生され、 **Radius min** 値と **Radius Max** 値の間で音量がフェードするように減衰します。ただし、空間化はされません。Attenuation (減衰) ノードを含まないキューは、ローカライズされず、一貫してサウンド キューのボリューム設定値で再生されます。

## Branch ノード

**Branch** ノードは Boolean パラメータの値に基いて子ノードを選択します。

![Branch Node](SoundCueEditor_Branch.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Branch[/REGION] ||
| **Bool Parameter Name** | 使用される子ノードを決定する Boolean パラメータ名です。 |


## Concatenator ノード

**Concatenator** ノードはサウンドの連続再生に使用します (例、指定した一連のトラックを再生するシンプルな BGM プレイリストを作成する)。このノードは連続再生処理は行いますが、あるサウンドアセットから次のものへのブレンドは行いません。 

![Concatenator Node](concatenator_node.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Concatenator[/REGION] ||
| **Input Volume** | Concatenator へアタッチされている各サウンド アセットについて個別にボリューム設定ができます。 |

##Continuous Modulator ノード

**Continuous Modulator (持続的モジュレータ)** ノードでは、Gameplay パラメータがボリュームとピッチ モジュレーション (変調) をリアルタイムで制御できるようにします。典型的な例としては、ビークルの速さをエンジン音のピッチに対応させる場合があげられます。このモジュレータは希望する目的に沿ってコードで接続する必要があります。サウンド キュー エディタ内でそれ自体では機能しません。

[REGION:note]
入力サウンドのピッチとボリュームのデフォルト設定は一様分布ですが、サウンド キュー エディタでお好きなタイプに変更することができます。
[/REGION]

![Continuous Modulator Node](SoundCueEditor_ContinuousModulation.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Modulator Continuous[/REGION] ||
| [REGION:tablesection]Pitch Modulation Params[/REGION] ||
| **Parameter Name** | ピッチ制御に使用するパラメータです。 |
| **Default** | ピッチのモジュレーション (変調) のデフォルト レベルです。 |
| **Min Input** | 入力サウンドの最小ピッチです。 |
| **Max Input** | 入力サウンドの最大ピッチです。 |
| **Min Output** | 出力サウンドの最小ピッチです。 |
| **Max Output** | 出力サウンドの最大ピッチです。 |
| **Param Mode** | [INCLUDE:Engine/Audio/SoundCues/NodeReference/#ParamMode] |
| [REGION:tablesection]Volume Modulation Params[/REGION] ||
| **Parameter Name** | ボリューム制御に使用するパラメータです。 |
| **Default** | ボリュームのモジュレーション (変調) のデフォルト レベルです。 |
| **Min Input** | 入力サウンドの最小ボリュームを設定します。 |
| **Max Input** | 入力サウンドの最大ボリュームを設定します。 |
| **Min Output** | 出力サウンドの最小ボリュームを設定します。 |
| **Min Output** | 出力サウンドの最大ボリュームを設定します。 |
| **Param Mode** | [INCLUDE:Engine/Audio/SoundCues/NodeReference/#ParamMode] |

[REGION:note]
ランダム化のために Min と Max の入力フィールドが与えられています。 
[/REGION]


[COMMENT:none]
-
[EXCERPT:ParamMode]
パラメータを適用するモードは以下の通りです。 
* **MPM_Normal** - 入力値を範囲 (MinInput, MaxInput) にクランプしてから範囲 (MinOutput、MaxOutput) に対してマッピングします。 
* **MPM_Abs** - 入力値を絶対値として扱う点を除けば、 MPM_Normal と同じです。
* **MPM_Direct** - Min あるいは Max の入力および出力値をスケールまたは参照せず、入力値をそのまま使用します。
[/EXCERPT:ParamMode]
-
[/COMMENT]



## Crossfade by Distance ノード

**Crossfade by Distance (距離クロスフェード)** ノードは、サウンド キューの原点からの距離に応じて、2 つ以上の入力サウンド間でフェードさせることができます。デフォルトで、このノード上にある入力はデフォルトでは 2 つですが、Crossfade by Distance ノード上を右クリックし、コンテキストメニューの **[Add Input]** (インプットを追加) をクリックすれば入力の追加が可能です。サウンド ノードは、Crossfade by Distance ノードの入力へ直接接続することもできますが、それらの間にノードを追加することによって、レイヤーごとに独立した制御を行うことも可能です。

![Crossfade by Distance Node](SoundCueEditor_CrossfadeDistance.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Distance Cross Fade[/REGION] ||
| [REGION:tablesection]Cross Fade Input[/REGION] ||
| **Fade in Distance Start** | サウンドが聴こえ始めるリスナーからの距離です。 |
| **Fade in Distance End** | サウンドがフルボリュームになるリスナーからの距離です。 |
| **Fade Out Distance Start** | サウンドがフェードアウトし始めるリスナーからの距離です。 |
| **Fade Out Distance End** | サウンドがもはや聴こえなくなるリスナーからの距離です。 |




## Crossfade by Param ノード

**Crossfade by Param** ノードは Crossfade by Distance ノードと同じように機能します。違う点は、Crossfade by Param ノードでは、クロスフェードを制御するパラメータ値をコードもしくはブループリントでプログラムで操作できることです。

![Crossfade by Param Node](SoundCueEditor_CrossfadeParam.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Cross Fade[/REGION] ||
| **Param Name** | クロスフェードの制御に使用するパラメータ名 |
| [REGION:tablesection]Sound Node Distance Cross Fade[/REGION] ||
| [REGION:tablesection]Cross Fade Input[/REGION] ||
| **Fade in Distance Start** | サウンドが聴こえ始めるリスナーからの距離です。 |
| **Fade in Distance End** | サウンドがフルボリュームになるリスナーからの距離です。 |
| **Fade Out Distance Start** | サウンドがフェードアウトし始めるリスナーからの距離です。 |
| **Fade Out Distance End** | サウンドがもはや聴こえなくなるリスナーからの距離です。 |


## Delay ノード

**Delay (遅延)** ノードは入力サウンドが出力として渡される前に一連のオーディオノードを一時停止して遅延を加えます。遅延時間は **[Details]** パネルで指定する **Delay Min** から **Delay Max** の間のランダム値です。

![Delay Node](SoundCueEditor_Delay.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Delay[/REGION] ||
| **Delay Min** | Delay ノードが一時停止する時間の最小値を設定します。 |
| **Delay Max** | Delay ノードが一時停止する時間の最大値を設定します。 |


## DialoguePlayer ノード

**DialoguePlayer** ノードは特定の条件で再生される Dialogue Wave サウンド アセットを設定します。Dialogue Wave の使用目的は純粋に会話への使用なので、DialoguePlayer ノードはユーザーに、話し手とダイアログを再生するターゲットの両方を指定するように要求します。これにより、Dialogue Wave はスピーカーの声やローカライズ化で必要となる性別 / 複数 / 敬称対応に合わせて正しいオーディオの部分を再生できるようになります。

![DialoguePlayer Node](SoundCueEditor_DialoguePlayer.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Dialogue Player[/REGION] ||
| **Dialogue Wave** | ノードが再生する Dialogue Wave です。 |
| **Context** | 話し手と話す対象です。 |
| **Looping** | true の場合、会話をループ再生します。 |

## Doppler ノード

**Doppler** ノードは、急速に近づくにつれてサウンドのピッチがあがり、遠ざかるにつれて下がる、Doppler エフェクトをシミュレートします。現実の世界では、救急車が通り過ぎるときのサイレンの音がこの現象になります。

![Doppler Node](SoundCueEditor_Doppler.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Doppler[/REGION] ||
| **Doppler Intensity** | Doppler エフェクトの聞こえ具合の度数に対する乗数値です。エフェクトを明確にするには度数をあげます。 |

## Enveloper ノード

**Enveloper** ノードでは、分布カーブ経由で時間経過に伴うサウンドのボリュームとピッチを制御するオプションのループ機能を使ってエンベロープを作成できます。これらのカーブは、組み込まれた小さなカーブ エディタを使うか、または **コンテンツ ブラウザ** の既存の Float Curve アセットで定義されたカーブに基いて編集することができます。

[REGION:note]
**Modulation** カテゴリのプロパティを使用すると、エンベロープ上で定義された全てのポイントに対して、事前に定義された値をランダム化することができます。
[/REGION]

![Enveloper Node](SoundCueEditor_Enveloper.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Looping[/REGION] ||
| **Loop Start** | エンベロープのループが始まる時間 (秒) です。 |
| **Loop End** | エンベロープのループが終わる時間 (秒) です。 |
| **Duration After Loop** | 最終ループが完了した後、エンベロープのフェードアウトにかかる時間 (秒) です。 |
| **Loop Count** | ループが有効化されており、エンベロープが無制限にループするように設定されていない場合の、エンベロープがループすべき回数です。 |
| **Loop Indefinitely** | これが有効化されている場合、Loop Count 値に関係なくエンベロープはループし続けます。 |
| **Loop** | これが有効化されている場合、エンベロープはループ設定を使用してループします。 |
| [REGION:tablesection]Envelope[/REGION] ||
| **Volume Curve** | ボリューム エンベロープを定義する分布です。 |
| **Pitch Curve** | ピッチ エンベロープを定義する分布です。 |
| [REGION:tablesection]Modulation [/REGION] ||
| **Pitch Min** | 入力サウンドの最小ピッチを設定します。 |
| **Pitch Max** | 入力サウンドの最大ピッチを設定します。 |
| **Volume Min** | 入力サウンドの最小ボリュームを設定します。 |
| **Volume Max** | 入力サウンドの最大ボリュームを設定します。 |


[REGION:note]
Enveloper ノードの **[Details (詳細)]** パネルにはエンベロープ カーブ作成用の各種オプションがあります。

![](Engine/Audio\SoundCues\NodeReference\SoundCueEditor_Curve.png)

1. **Curve Editor** - カーブを手動で定義します。
1. **Float Curve picker** - カーブを定義するために既存の Float Curve アセットを選択します。
1. **Create External Curve button** - カーブを手動で作成する場合、 Float Curve アセットとして保存して、他の場所で再利用することができます。

カーブ エディタに関する詳細は、[](Engine/UI/CurveEditor) をご覧ください。

[/REGION]

## Group Control ノード

**Group Control** ノードは、定義されたグループのどのサウンドが既に再生されているか、またそのサウンドとリスナーとの近さに応じて、再生する Sound Wave を決定します。 


![Group Control Node](SoundCueEditor_GroupControl.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Group Control[/REGION] ||
| **Group Sizes** | グループ内の Sound Wave ノード数から 1 をひいた数 (最初の Sound Wave ノードは 0 )。|

[COMMENT:none]
 get more info here 
[/COMMENT]


## Looping ノード

**Looping** ノードは Sound Wave をループに設定するために使用します。Mixer ノードと一緒に使用すれば、複数のオーディオ ファイルを独立してループすることができます。

![Looping Node](SoundCueEditor_LoopingNode.png)

[REGION:warning]
Looping ノードは、遅延の導入など、ロジカルなループまたはプロシージャルなループに対してのみ使用すべきです。これらのサウンドはシームレスには再生されません。サウンドをシームレスかつ無制限にループさせたい場合は、当該サウンドの Wave Player ノード上で Looping フラグを使用します。
[/REGION]

## Mature ノード

**Mature** ノードは、ESRB (Entertainment Software Rating Board) レーティング システムの「Mature (17 歳以上)」表示にあたるコンテンツを含む特定のノードまたはサウンド キューにラベル付けできるようにします。このノードで、ゲームの特定バージョンの Mature 表示にあたるコンテンツをフィルタすることができます。

![Mature Node](SoundCueEditor_Mature.png)

## Mixer ノード

**Mixer** ノードは、複数の Sound Wave ノードを同時にトリガーする場合に使用します。サウンド ノードは、Mixer ノードの入力へ直接接続することもできますが、それらの間にノードを追加することによって、レイヤーごとに独立した制御を行うことも可能です。


![Mixer Node](SoundCueEditor_Mixer.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Mixer[/REGION] ||
| **Input Volume** | 入力サウンド別に使用するボリュームのリストです。異なるソース ボリュームを持つサウンドの標準化を可能にします。 |

## Modulator ノード

**Modulator** ノードは、ランダムなボリュームとピッチのモジュレーションを加えるために使用されます。Max および Min の値によって、ランダムに抽出される値の範囲が決まります。サウンド キューがトリガーされると、その範囲内にある値がランダムに選択されます。Max および Min を同じ値に設定すると、Modulator ノードを使用してボリューム + ピッチが一貫するように調整できます。また、サウンド キュー内に含まれている複数の Sound Wave ノードの相対ボリュームを調整するために使用することもできます。Modulator ノードを Looping ノードと一緒に使用すると、ループ周期毎ではなく、サウンド キューの再トリガーによってランダムに選択します。

![Modulator Node](SoundCueEditor_Modulator.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Modulation [/REGION] ||
| **Pitch Min** | 入力サウンドの最小ピッチを設定します。 |
| **Pitch Max** | 入力サウンドの最大ピッチを設定します。 |
| **Volume Min** | 入力サウンドの最小ボリュームを設定します。 |
| **Volume Max** | 入力サウンドの最大ボリュームを設定します。 |


## Oscillator ノード

**Oscillator** ノードは、時間経過に伴う継続的なピッチとボリュームのオシレーションを加えるために使用されます。サウンドをループさせ、継続している動作を大きくする場合、特に便利です。

![Oscillator Node](SoundCueEditor_Oscillator.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]オシレーター[/REGION] ||
| **Modulate Volume** | _true_ の場合、ボリュームのモジュレーションが有効化されます。 |
| **Modulate Pitch** | _true_ の場合、ピッチのモジュレーションが有効化されます。 |
| **Amplitude Min** | 値 1 を中心にした、正弦波のモジュレーションの最小振幅です。 |
| **Amplitude Max** | 値 1 を中心にした、正弦波のモジュレーションの最大振幅です。 |
| **Frequency Min** | 正弦波のモジュレーションの最小周波数です。この値を 2 で割ったものがヘルツに等しくなります。 |
| **Frequency Max** | 正弦波のモジュレーションの最大周波数です。この値を 2 で割ったものがヘルツに等しくなります。  |
| **Offset Min** | 正弦波に適用される最小オフセット値です。一般的には位相 (phase) と呼ばれています。この値はすべて 2*Pi が乗じられます。 |
| **Offset Max** | 正弦波に適用される最大オフセット値です。一般的には位相 (phase) と呼ばれています。この値はすべて 2*Pi が乗じられます。 |
| **Center Min** | 中心が振動する最小値です。 |
| **Center Max** | 中心が振動する最大値です。 |

[REGION:note]
ランダム化のために Min と Max の入力フィールドが与えられています。 
[/REGION]


## Random ノード

**Random** ノードは、Sound Wave ノードのグループの中からランダムに Sound Wave ノードをトリガーするために使用されます。ウェイトは、そのサウンド キューの他の Sound Wave ノードに相対的に、その Sound Wave ノードがトリガーされる確率を指定します。**RandomWithoutReplacement** のチェックボックスによって、繰り返す前に、可能な Sound ノードの全リストが使い尽くされます。各オーディオファイルのために入力を追加するには、 Random ノード上で右クリックして、 **[Add Input]** を選択します。Sound Wave ノードは、Random ノードに直接接続することもできますが、それらの間にノードを追加することによって、追加の制御を行うことも可能です。


![Random Node](SoundCueEditor_Random.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Random[/REGION] ||
| **Weights** | 特定のサウンドが選ばれる確率を決定する、各入力サウンドのためのウェイト リストです。 |
| **Preselect at Level Load** | レベルのロード時に選択され、プレイ セッション中に常に使用される、ランダムな Sound Wave ノードです。この設定の適用は、アンリアル エディタ外でのゲームのビルドに限られます。エディタで再生中、またはシミュレーション中は適用されませんのでご注意ください。
| **Randomize Without Replacement** | true の場合は、入力サウンドが全部再生されるまで入力 Sound Wave ノードが再度再生されることはありません。これにより、繰り返しが行われる前に、全てのサウンドが確実に再生されるようにします。

[COMMENT:none]
 get more info 
[/COMMENT]

## SoundClass ノード

**SoundClass** ノードでは、 Sound Wave の入力ノードで使う Sound Class アセットの再マッピングを可能にします。

![SoundClass Node](SoundCueEditor_SoundClass.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Class[/REGION] ||
| **Sound Class Override** | Sound Wave の入力ノードに対する現在の Sound クラスをオーバーライドする Sound Class アセットです。 |


[COMMENT:none]
 get more info 
[/COMMENT]


## Switch ノード

**Switch** ノードは整数パラメータ値に基いて入力ノードを選択します。

![Switch Node](SoundCueEditor_Switch.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Switch[/REGION] ||
| **Int Parameter Name** | 使用する入力を決定するために使う整数パラメータ名です。 |

[COMMENT:none]
 get more info 
[/COMMENT]



## Crossfade by Param ノード

**Wave Param** ノードは実行時パラメータを受け取って、入力ピンへ入力されるものとは異なる Sound Wave を再生するかどうかを決定します。指定されたパラメータ名が有効な Sound Wave アセットに設定されている場合、その Sound Wave アセットが Sound Wave の入力ノードの代わりに再生されます。 



[REGION:note]
パラメータはコードもしくはブループリントで設定することができます。
[/REGION]

![Wave Param Node](SoundCueEditor_WaveParam.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Sound Node Wave Param[/REGION] ||
| **Wave Parameter Name** | 再生する Sound Wave を決定するために使う整数パラメータ名です。パラメータが存在しない、または無効の Sound Wave を指している場合、入力ノードに接続されたツリーによって指定されたその Sound Wave を評価して、どの Sound Wave を代わりに再生するかを決めます。 |

[COMMENT:none]
 get more info 
[/COMMENT]



##Wave Player ノード

**Wave Player** ノードには **コンテンツ ブラウザ** からの Sound Wave アセットが含まれます。

![](SoundCueEditor_WavePlayer.png)

| プロパティ | 説明 |
| -------- | ----------- |
| [REGION:tablesection]Wave Player[/REGION] ||
| **Sound Wave** | このノードで使用する Sound Wave アセットです。 |
| [INCLUDE:Engine/Audio/SoundCues/NodeReference/#TableSpacing] **Looping** | true の場合、Sound Wave をループ再生します。| 


[EXCERPT:TableSpacing]
<*> 
[/EXCERPT:TableSpacing]

## 例

以下はさらに複雑なサウンド キューの調整例です。

![Example 1](SoundCueEditor_Example1.png)(w:900)

このサウンド キューでは Sound Waves に減衰、ランダム化、ループ、遅延などの各種プロパティを混在させています。

![Example 2](SoundCueEditor_Example2.png)(w:900)

このサウンド キューは Sound Waves の Sound クラスを変更します。

![Example 3](SoundCueEditor_Example3.png)(w:900)

このサウンド キューは、パラメータが True に設定されていると 1 つのサウンドを再生し、 False の場合は別のサウンドを再生します。


