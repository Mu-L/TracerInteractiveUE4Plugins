INTSourceChangelist:2677620
Availability:Public
Title:ソース コントロールとして SVN を使用する
Crumbs: %ROOT%, Engine, Engine\Basics\SourceControl
Description:チーム内の他のメンバーとアセットを共有できるように SVN をセットアップする方法 
Related:Engine/UI/SourceControl
Related:Engine/Content/Browser
Related:Engine/Basics/Redirectors
Related:Engine/UI/ProjectSettings
Related:Programming/Basics/ConfigurationFiles
version:4.9

[TOC(start:2)]

UE4 では、Subversion または短縮して SVN と呼ばれるバージョン管理ソフトウェアを使用してプロジェクトで共同作業できる統合的な方法があります。 
バージョン管理を使用すると、チーム内のユーザーはアセットやコードを互いに共有し、バックアップや変更履歴を残すこともできます。 
こうすることで、ファイルに何か問題が生じた場合に前のバージョンに戻ることができます。


## UE4 で Subversion (SVN) を使用する
Perforce が選択肢にない場合は、Subversion (SVN) を利用できます。ユーザーがどのようにデータを扱うかという点において SVN はPerforce に類似しています。 
以下のガイドでは、UE4 のプロジェクト用に SVN ソース コントロール サーバーをセットアップする方法について説明します。 

### SVN サーバーをセットアップする
SVN サーバーのセットアップは、Subversion コマンドライン ツールを使用して行うことができます。しかし、ここでは簡単に使用するために Windows で VisualSVN を使用してサーバーをセットアップする方法を説明します。 

[region:note]
Windows 版 SVN をダウンロードするには [ここ](https://www.visualsvn.com/server/download/) をクリックし、SVN ウェブサイトからプログラムをダウンロードします。 
[/region]

### ローカルマシンで SVN サーバーをセットアップする

1. SVN をインストールしたら SVN を開き、 VisualSVN で **リポジトリ** ツリー アイテム上で **右クリック** し、**[Create New Repository (新規リポジトリを作成)]** を選択します。

	![](SC_SVN_Create_New_Repository.png)

1. リポジトリ タイプを尋ねられたら、とりあえず、**Regular Files System** を選択します。

	![](SC_SVN_Choose_Regualr_File_System.png)

1. リポジトリ名を入力します。

	![](SC_SVN_Repository_Name.png)

1. 次にリポジトリに追加する初期フォルダが必要であるかを選択します。
	![](SC_SVN_Initial_Repo_Structure.png)


**Trunk**、**Branches**、および **Tags** のディレクトリを追加すると、他の人々との C++ コードの同時開発の計画がある場合に役立ちます。
初期セキュリティ設定もこの時点でセットアップできます。ここで何を設定するかがはっきりわからない場合は、そのままデフォルトにすると Subversion のユーザー全員が読み出し/書き込みすることができます。
作成すると、ツリービューにリポジトリが表示されます。


### ローカル ネットワーク上のサーバー
共同使用するためにサーバーをローカルのネットワーク上にセットアップすることができます。 
これを行うには、サーバーに関する上記の手順に従い、サーバーの URL を使用してクライアントから接続します。

### セキュアなアクセス
多くのユーザーはリポジトリにアクセスするためにセキュアな接続の使用を望みます。こうした接続には、**https://** で始まる URL があり、セットアップ時に意識すべき多くのことがあります。
HTTPS を使用するためにサーバーは **信用できる証明書 (trusted certificate)** を提供する必要があります。これは、クライアント側がセキュアなサーバーに接続していることを認識するためです。内部ユーザーがセキュアに接続できるように、VisualSVN はローカル認証を発行することができます。
この詳細を見るには、ツリー ビューのルートを **右クリック** して **プロパティ** を選択し、**Certificate** タブに移動します。

![](SC_SVN_Certificate.png)

[region:note]
セキュアな接続を使用して SVN サーバーに接続するには、サーバーによって発行される証明書がユーザーが接続のために使用するものと同じ名前で発行される必要があります。 
例えば、ユーザーが URL **https://my-server/svn** を使用してサーバーにアクセスする場合、証明書は "my-server" (引用符なし) で発行される必要があります。 
同様にユーザーが IP アドレス **https://192.168.0.1/svn** で接続する場合は、証明書は "192.168.0.1" (引用符なし) で発行される必要があります。
[/region]

### クラウド プロバイダ
SVN サーバーをオフサイトでホストし、リモートで共同作業するための様々なクラウド プロバイダがあります。 
**SVN Hosting** でオンラインで簡単に検索するといくつかの結果が得られます。各ホスティング プロバイダは異なりますが、最終的にはサーバーへの接続に使用できる URL、ユーザー名、およびパスワードが得られます。

### ローカルのワーキング コピーをチェックアウトする
SVN の管理下にあるファイルで作業するには、**ワーキング コピー** をセットアップし、ローカル マシンでファイルを管理できるようにします。 
現時点ではアンリアル エディタ内でこれを行うことはできません。SVN コマンドライン ツールでこれを行うことはできます。しかし、ここでは簡単に使用するために 
Windows で TortoiseSVN を使用してワーキング コピーをセットアップする方法について説明します。 

[region:note]
Windows 版 TortoiseSVN  をダウンロードするには、 [ここ](http://tortoisesvn.net/) をクリックし、TortoiseSVN ウェブサイトからプログラムをダウンロードします。 
[/region]

新規プロジェクトを作成したら、C++ コードおよびブループリント エレメントを含むか否かを選択することができます。プロジェクトで C++ コードを使用している場合は、**Source/** ディレクトリも表示されます。
最初にプロジェクトの以下のディレクトリを追加します。

![](SC_SVN_Added_Filese.png)

**緑** でハイライトされているフォルダやファイルはデポに追加します。**黄色** のバイナリ フォルダはオプションです。チームがどのように共同作業するかに応じて変わります。
 チームの各メンバーがエディタ/ゲームを自分でコンパイルする場合は不要ですが、チームのメンバーのいずれかがデポからバージョンを取得してコンテンツを作成する場合は **初期追加 (initial add)** に含める必要があります。 

[region:note]
他の誰かが既に作成したプロジェクトを編集する場合は、以下の手順は該当しないためスキップしてください。
[/region]


ワーキング コピーを作成するには、リポジトリの (空が前提) ルートを **チェックアウト** します。これを行うには Windows Explorer でプロジェクトのフォルダを右クリックし、**SVN Checkout** を選択します。

![](SC_SVN_Checkout.png)

続いてリポジトリの URL を入力して、どこでチェックアウトすべきかを入力します (不要なサブディレクトリを作らないようにしてください)。

![](SC_New_Workspace.png)

次に **OK** をクリックすると非表示の **.svn** ディレクトリが作成されます。このディレクトリは SVN がワーキング コピーに関する情報を格納するために使用します。


### Subversion にファイルを追加する
1. リポジトリにファイルを追加するには Windows Explorer でアイテムを選択し、**右クリック** して追加し、**TortoiseSVN->Add** オプションを選択します。

	![](SC_SVN_Add.png)

1. これを行う場合、SVN はリポジトリに追加するために選択したファイルにマークを付けます。
	プロジェクトが入っているディレクトリを **右クリック** して **TortoiseSVN->SVN Commit** を選択します。

	![](SC_SVN_Commit.png)

1. これで変更/追加が加えられたかについてディレクトリをスキャンし、変更や追加があればそれを [Commit] ダイアログに表示します。

	![](SC_SVN_Commit_Message.png)

1. コミット メッセージを入力し、**OK** をクリックして追加をサーバーにアップロードします。誰かが既に開始したプロジェクトで作業を開始する場合、 
	TortoiseSVN を使用して SVN から最新改訂版を取得する必要があります。これを行うには上記の **SVN Checkout** ステージを行い、チェックアウトの深さに応じて
	**Fully Recursive (完全に再帰的)** なセットを持っていることを確認します。これにより、すべての既存のファイルがローカル マシンにダウンロードされます。

### アンリアル エディタか らSubversion に接続する
アンリアル エディタから SVN サーバーに接続することができます。これはツールバーにある **ソース コントロール** アイコンをクリックして行います。

![](SC_SVN_Connect_From_UE4_1.png)

開いたらソース コントロールのログイン ダイアログからプロバイダとして **Subversion** を選択し、ログインの認証情報を入力します。パスワード欄はオプションであり、毎回入力する必要はありません。 
パスワードを一度正しく入力すると SVN が記憶します。

![](SC_SVN_Connect_From_UE4_2.png)

### セキュアな接続で Mac OSX で SVN を使用する
パスワードなどのセキュリティ情報の Mac の格納方法に起因して、**https://** 接続を介してエディタをサーバーに接続するために、いくつかの追加の手順が必要になる場合があります。
以下のようなエラーがログにある場合、こうした手順を行う必要があるかもしれません。

	E175002:Unexpected HTTP status 400 'Bad Request' on '/projectname/'
	E175002:Unexpected HTTP status 405 'Method Not Allowed' on '/projectname/'
	E215004:Authentication failed and interactive prompting is disabled; see the --force-interactive option
	E215004:No more credentials or we tried too many times.

これを修正するには、コマンド プロンプトを開いて入力します。

	cd [Engine Installation Directory]/Engine/Binaries/ThirdParty/svn/Mac/bin

これはディレクトリを UE4 に同梱される SVN バイナリがある場所に変更します (エンジンのインストール ディレクトリを置き換えます)。 

続いて以下のように入力します。 

	svn info --username=me https://example.com/svn/repo

ユーザー名とリポジトリ URL を適切に置き換えます。以下のようにパスワード プロンプトが表示されるはずです。

	Authentication realm: 
	Password for 'me':

パスワードを入力するとキーチェーンに保存されます。この後、上記の通常の指示に従いエディタは正しくサーバーに接続されるようになります。







