Availability: Public
Title:Blueprint Basic User Guide
Crumbs: %ROOT%, Engine, Engine\Blueprints, Engine\Blueprints\BP_HowTo
Description:A quick guide on the elements needed to begin working with Blueprints. 
Related: Engine/Blueprints
Related: Engine/Blueprints/GettingStarted
Related: Engine/Blueprints/UserGuide
Related: Engine/Blueprints/UserGuide/CheatSheet
Related: Gameplay
Version: 4.9
Parent:Engine/Blueprints/Anatomy
Tags:Class Blueprints
tags:Blueprints


[TOC(start:2 end:2)]


This page aims to quickly get you started using **Blueprints** by covering the most basic use cases and commonly used actions. 

For more detailed information on Blueprints, refer to the [](Engine/Blueprints) documentation. 

## Creating Blueprints

There are several methods in which you can create Blueprints, the first is through the **Content Browser** using the **Add New** button: 

[INCLUDE:Engine/Blueprints/UserGuide/Types/ClassBlueprint/Creation#CreateBP1]


After you select your class, a new Blueprint asset will be added to the **Content Browser** which you can then assign a name. 

![](Basic4.png)

[COMMENT:none]

1.	After you have entered a name, the Blueprint creation process is complete. 

	![](Basic5.png)

	You will see an asterisk on the Blueprint in the **Content Browser**, this indicates that the Blueprint has not yet been saved. 

1.	Click the **Save All** button at the top of the **Content Browser** window to save your Blueprint. 

	![](Basic6.png)

1.	When the **Save Content** window appears, your Blueprint will be displayed in the window. Click the **Save Selected** button to save. 

	![](Basic7.png)

[/COMMENT]

### Create Blueprint Using Assets

You can also create a Blueprint by **Right-clicking** on an asset in the **Content Browser**, then under _Asset Actions_, selecting the **Create Blueprint Using This...** option. 

![](Basic8.png)

[REGION:note]
This option is only available for assets that support it - Static Meshes, Skeletal Meshes, Particle Effects, Sound Cues or Sound Waves, etc. If the option is not available for the selected asset, it will appear grayed out. 
[/REGION]

After selecting the **Create Blueprint Using This...** option, you will be prompted on where you want to save the Blueprint. After confirming your save location, the Blueprint will automatically open in the Blueprint Editor.

[COMMENT:none]

### Replace Assets with Composited Blueprint

Similar to the create Blueprint using assets method, the replace assets with composited Blueprint option will automatically add components to and create a Blueprint based off assets placed in your level. 

With an object selected in your level, inside the **Details** panel for the object near the bottom of the window is an option to **Replace With Composited Blueprint**. 

![](Basic9.png)

[REGION:note]
This option does not work with [Geometry Brush Actors](Engine/Actors/Brushes) as they cannot be included in a Blueprint. 
[/REGION]

This option is useful in the event that you have several objects in your level and you want to convert them all into a single Blueprint. For example, you can have a light, light fixture, light switch and a trigger box all selected and converted into a Blueprint which holds all those objects as a single Blueprint Actor.

[REGION:tip]
When creating a Blueprint using an asset from the **Content Browser** or by replacing assets in your level with a Composited Blueprint, you do not need to provide any logic in its Graph for the Blueprint to work in your levels. As stated in the example above, you can take several Components and combine them in a Blueprint to create a new singular asset in your level. 
[/REGION]

[/COMMENT]

## Placing Blueprints in Levels

To place a Blueprint in your level, you can either...

**Drag-and-drop** it from the **Content Browser** into your level. 

![](DragAndDropBP.png)

Or with the Blueprint selected in the **Content Brower**, you can **Right-click** in the level and select **Place Actor** from the context menu. 

![](RightClickMethod.png)

[COMMENT:none]

## Editing a Blueprint

Depending upon the type of Blueprint you are working with, different **Blueprint Modes** may be available for you to work with to determine what your Blueprint does or how it functions. This section focuses on Blueprints created through the methods described above, for more information on the different types of Blueprints, refer to the links below. 

* For Animation Blueprints, see the [](Engine/Animation/AnimBlueprints) documentation. 
* For Widget Blueprints used with the UMG UI Editor, see the [](Engine/UMG/UserGuide/WidgetBlueprints) documentation. 
* For Level Blueprints, Blueprint Interfaces, Macro Libraries, or other types, see the [](Engine/Blueprints/UserGuide) for more documentation. 

Once you have created a Blueprint, **Double-click** on it to open it in the **Blueprint Editor** where you can work on one of three tabs:  

### Components Mode

![](ComponentsTab.png)(w:740)

In the **Components Mode** you define what bits and pieces are used to construct your Blueprint. Through the **Components** window, you can add various types of **Components** which will ultimately make up your Blueprint. Components can be anything  from **Cameras** and **Static Meshes** to **Particle Effects** or **Sound Cues**

* See [](Engine/Blueprints/Editor/Modes/Components) for more on the windows and options in this mode. 
* See also [](Engine/Blueprints/UserGuide/Components) for working with **Components** in this mode.  
 

### Defaults Mode

![](DefaultsTab.png)(w:740)

The **Defaults Mode** is a one-stop shop for all the default settings and properties (as well as any variables) the Blueprint contains. You can modify any of the options directly from this mode and use the **Search** option to search for particular settings you wish to modify. 

* See [](Engine/Blueprints/Editor/Modes/Defaults/DefaultsTab) for more information on navigating the **Defaults Mode**. 

[/COMMENT]

## Placing Blueprint Nodes

There are several methods in which you can place nodes while in **Graph Mode** (see [](Engine\Blueprints\BP_HowTo\PlacingNodes) for more information), this section will show you the most common method as well as how to connect nodes together. 

[INCLUDE:Engine\Blueprints\BP_HowTo\PlacingNodes#context]


## Connecting Blueprint Nodes

To connect nodes, drag off one pin and connect it to another pin of the same type (there are some instances where a conversion node will be created, for example, connecting a Float output to a Text input will create a conversion node between the two and automatically convert and connect the two nodes). 

Here is a basic connection between two nodes where the input/output pins are of the same type. 

![](BasicConnect.png)

And here is an example of a conversion in progress. 

![](ConversionNode.png)

* See [](Engine/Blueprints/UserGuide/CheatSheet) for additional node based actions and shortcuts. 


## Creating Variables

[INCLUDE:Engine/Blueprints/UserGuide/Variables#intro]

You can create variables for your Blueprints from the **MyBlueprint** window, by clicking on the **Add Button (+)** on the variable list header.

![](Engine\Blueprints\Editor\UIComponents\MyBlueprint\myblueprint_variable.png)

Once you have created a variable, you will need be able to define the properties of the variable. 

* See [Blueprint Variables](Engine/Blueprints/UserGuide/Variables) for more information on variable types and more on working with them. 






