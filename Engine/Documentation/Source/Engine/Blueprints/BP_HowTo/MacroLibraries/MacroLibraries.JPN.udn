INTSourceChangelist:3244370
Availability:Public
Title:マクロ ライブラリの使用方法
Crumbs: %ROOT%, Engine, Engine\Blueprints, Engine\Blueprints\BP_HowTo
Description:マクロ ライブラリのマクロを使って、アクタのヘルス値とスケールを増やしてみましょう。 
Related:Engine/Blueprints/UserGuide/Macros
Related:Engine/Blueprints/UserGuide/Types/MacroLibrary
Related:Engine/Blueprints
version:4.8
skilllevel:Advanced
tags:Blueprints

**マクロ ライブラリ** は、他のブループリントへノードとして配置可能なマクロのコレクションや自己完結型のグラフを保持するコンテナです。実行とデータ転送の両方の入出力を備えた一般的に使用するノードのシーケンスを格納できるため、時間節約の手段となります。

## マクロ ライブラリを作成する

このサンプルでは、Health 変数の追加に使用するマクロと、指定されたアクタのサイズ調整に使用するマクロの 2 つのマクロで構成されるマクロ ライブラリを使います。 

[REGION:note]
_ここでは **スターター コンテンツ** を有効にした状態で **Blueprint Third Person Project** を使います。_
[/REGION]


1.	**ブループリント** の **[コンテンツ ブラウザ]** 内をどこか **右クリック** して、[Blueprint Macro Library](Engine/Blueprints/UserGuide/Types/MacroLibrary) を選択します。 

	![](CreateLib1.png)(w:640)

1.	**[Pick Parent Class (親クラスを選択)]** ウィンドウが表示されたら、[親クラス](Engine/Blueprints/UserGuide/Types/ClassBlueprint) (ここでは **[Actor]**) を選択します。 

	![](CreateLib2.png)

1.	マクロ ライブラリに名前を付けて、その上で **ダブルクリック** して開きます。 

	![](CreateLib3.png)

	**[Blueprint Macro]** インターフェースが表示されます。 

	![](CreateLib4.png)(w:640)

1.	右上の **[MyBluprint]** ウィンドウで、デフォルトのマクロ名の上で **F2** を押して「 **ScaleUp** 」に変更します。 

1.	**ScaleUp** マクロの **[Details (詳細)]** パネルで、以下のように **Inputs** と **Outputs** を追加します。 

	![](CreateLib5.png)

	ここでは **Exec** タイプの _In_ というインプットと、 **Actor** タイプの_InActor_ というインプットの 2 つを作成しました。アウトプットは _Out_ と追加し、タイプを **Exec** に設定しました。これらを使って、マクロで影響を与えたいアクタを判断します。 

1.	**ScaleUp** マクロのグラフ内に以下のようなノード ネットワークを再度作成します。 

	![](CreateLib6.png)

	上図では、呼び出されたマクロは **InActor** と指定されたアクタを取得し、そのサイズを取得して 1.25 を乗じたものを **Target** (_InActor_ と指定されているアクタ) に対する New scale 3D として設定します。このマクロを使って、どのアクタに対してもスケールを変更することが可能になりました。 

1.	**[MyBlueprint]** ウィンドウから 「**AddHealth**」 というマクロを追加します。 

1.	**AddHealth** マクロの **[Details (詳細)]** パネルで、以下のように **Inputs** と Outputs を追加します。 

	![](CreateLib7.png)

	上図では、 _GetHealth_ という float 値を受け取り、追加してから SetHealth_ の出力ノードに渡します。 

1.	**AddHealth** マクロのグラフ内に以下のようなノード ネットワークを再度作成します。 

	![](CreateLib8.png)

	ここでは float 値が_GetHealth_ 値であれば **50** を追加してから、_SetHealth_ へ結果値を出力します。 

1.	マクロ ライブラリを **保存** して閉じます。 

1.	「**Content/ThirdPersonBP/Blueprints**」フォルダで **ThirdPersonCharacter** ブループリントを開きます。 

1.	**[MyBlueprint]** ウィンドウで、**Health** を表す **Float** 変数を追加します (ここではデフォルト値は 0 のままにしておきます)。 

	![](CreateLib9.png)

1.	イベントグラフ内に以下のようなノード ネットワークを再度作成します。 

	![](CreateLib10.png)

	上図では、**Q** が押されると **AddHealth** マクロが呼び出され、 _Health_ 値を受け取って (増加させるマクロ スクリプトを実行して) _SetHealth_ の出力ピンで更新してから画面に表示します。次に **E** で、_Health_ が 100 を超えているか確認してから、**ScaleUp** マクロを **ThirdPersonCharacter** であるアクタの **Self** 上に呼び出せるようにします。 

1.	**コンパイル** して、エディタで **再生** します。 

	[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:width]
	640
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	360
	[/PARAMLITERAL]
	[PARAMLITERAL:videoid]
	HB2w84EHowQ
	[/PARAMLITERAL]
	[/OBJECT]

	_画面のテキストが見えにくい場合は、映像を全画面表示にしてください。_

	このビデオではブループリント スクリプトがステップ 13 から含まれているので、スクリプトが発行される時が分かります。**ScaleUp** マクロを呼び出すために **E** を押す場合、デフォルトを 0 に設定した_Health_ 値をまず確認します。次に **Q** を押して、押すごとに _Health_ 変数を増やす **AddHealth** マクロを呼び出します。数回押したら、再度 **ScaleUp** マクロを呼び出すと、_Health_ 値があがって 100 を超えているので、呼び出しがされていることが確認できます。 

	これらのマクロは Health の入力と Target Actor が設定されていれば、どのブループリントからも呼び出すことができます。 

