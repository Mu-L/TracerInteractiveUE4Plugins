INTSourceChangelist:6277736
Availability: Docs
Title:2 - 创建并显示蓝图 Map
Description:设置蓝图 Map 容器，以便在游戏中显示其内容。
Crumbs:%ROOT%
Parent:Engine/Blueprints/BP_HowTo/WorkingWithMaps
Version:4.15
Tags:Blueprints
Type:how-to
Skilllevel:Advanced
Checkpoint:HowToWorkWithMaps
Order:2

[nav]

在新创建的项目中设置 **TextRender** actor 后，即可创建蓝图 Map 容器，并在游戏中显示其中的内容。

1.	在项目的 **Content Browser** 中，双击 **Display Set** TextRender Actor 打开其蓝图 **事件图表**。

	[REGION:lightbox]
		[![](Step2_1.png)(w:600)](Step2_1.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	看到以下画面后，即可点击 **Open Full Blueprint Editor** 链接开始。

	[REGION:lightbox]
		[![](Step2_2.png)(w:600)](Step2_2.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	之后便能够看到 **Display Set** TextRender Actor 蓝图 **事件图表**，您可在此处添加蓝图 Map 和它的显示逻辑。

	[REGION:lightbox]
		[![](Step2_3.png)(w:600)](Step2_3.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	
	如之前提及的画面未出现，则点击 **Event Graph** 标签打开 Actor 的蓝图事件图表编辑器。

	[REGION:lightbox]
		[![](Step2_3Note.png)(w:600)](Step2_3Note.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[/REGION]

1.	现在便开始创建一个蓝图 Map 容器，可在此容器中存储一些键值对以便之后显示。点击 **+ Add New** 按钮（**My Blueprint** 面板中）并在下拉列表中选择 **Variable**，即可新建一个蓝图 Map。

	![](Step2_4.png)

1.	将新变量命名为 `Instruction Map`。

	![](Step2_5.png)

1.	点击变量名旁的 **pin type** 按钮。

	![](Step2_6.png)

1.	从下拉列表中选择 **Integer** 变量类。

	![](Step2_7.png)

1.	点击 **Details** 面板中 **Variable Type** 下拉列表旁的 **container type** 按钮。

	![](Step2_8.png)

1.	从下拉列表中选择 **Map** 容器类。

	![](Step2_9.png)

1.	现在可以定义 Map 的键值属性类。当前键是一个 **Integer** 类，这便是所需的属性类。然而值类并非 **String** 变量类。点击值属性类下拉列表，将值从 **Integer** 变为 **String**。

	![](Step2_10.png)

1.	从下拉列表中选择 **String**。 

	![](Step2_11.png)

1.	此时，您便拥有了一个（分别为）**Integer** 和 **String** 类型的键值对。此外，蓝图图表将提醒您对蓝图进行编译，以便定义将要存储在容器内的项目。点击 **Compile** 按钮开始。

	[REGION:lightbox]
		[![](Step2_12.png)(w:600)](Step2_12.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	编译蓝图将用一个界面替代容器的 **Default Value** 消息，使您能够用键值对填充容器。而在此容器中 Map 的键为 Integer，值为 String。
	[/REGION]

1.	如尚未保存，点击 **Save** 保存迄今为止已完成的工作。

	[REGION:lightbox]
		[![](Step2_13.png)(w:600)](Step2_13.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	一句话形容，尽量早保存，尽量多保存。
	[/REGION]

1.	点击 **+**（添加元素）按钮（在 **Details** 面板中的 **Default Value** 菜单中）将一个新的键值对添加到新定义的 **Instruction Map** 容器中。

	[REGION:lightbox]
		[![](Step2_14.png)(w:600)](Step2_14.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	定义容器的新键值对，将键定义为 `1`，再将值定义为 `WASD to run`。

	![](Step2_15.png)

1.	重复之前两个步骤，用以下键值对填满 **Instruction Map** 容器：

	![](Step2_16.png)

## 编写逻辑脚本

显示新创建蓝图 Map 的内容之前，需要编写必要的逻辑。

1.	对容器进行定义后，将 **Instruction Map** 变量拖入蓝图事件图表。

	[REGION:lightbox]
		[![](Step2_17.png)(w:600)](Step2_17.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	从 **Instruction Map** 下拉菜单选择 **Get**。

	[REGION:lightbox]
		[![](Step2_18.png)(w:600)](Step2_18.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	从 **Instruction Map** 节点连出引线，然后从 **Map Utilities** 接口添加 **Find** 节点。

	[REGION:lightbox]
		[![](Step2_19.png)(w:600)](Step2_19.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	从 Map 中获取值的方法有几种。在教程的这部分中，我们将增加一个整数键，用以显示 **Instruction Map** 中包含的关联值。
	[/REGION]

1.	牢记上文提及的注意事项，点击 **+ Add New** 按钮，从下拉列表中选择 **Variable**。

	![](Step2_20.png)

1.	将变量类型设为一个 **Integer** 类，将其命名为 `Key`。

	![](Step2_21.png)

1.	声明并定义新的 **Integer** 变量后，将 **Key** 拖入蓝图事件图表，从下拉菜单中选择 **Get**。

	[REGION:lightbox]
		[![](Step2_22.png)(w:600)](Step2_22.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	从 **Key** 节点连出引线，搜索并添加 **IncrementInt** 节点。

	[REGION:lightbox]
		[![](Step2_23.png)(w:600)](Step2_23.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	现在将 **IncrementInt** 节点和 **Find** 节点连接起来。

	[REGION:lightbox]
		[![](Step2_24.png)(w:600)](Step2_24.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	为便于此教程的展示，我们将使用一个时间函数来增加 **Key** 变量。
	[/REGION]

1.	从 **Event Tick** 节点连出引线，搜索并添加 **Delay** 节点。

	[REGION:lightbox]
		[![](Step2_25.png)(w:600)](Step2_25.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	将延迟时长设为 **2** 秒后，将 **Delay** 节点连接至 **IncrementInt** 节点。

	[REGION:lightbox]
		[![](Step2_26.png)(w:600)](Step2_26.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	从 **Event BeginPlay** 节点连出引线，搜索并连接到 **Branch** 节点。

	[REGION:lightbox]
		[![](Step2_27.png)(w:600)](Step2_27.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	将 **IncrementInt** 节点连接到 **Branch** 节点。

	[REGION:lightbox]
		[![](Step2_28.png)(w:600)](Step2_28.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	现在将属于 **Find** 节点的 **Boolean** 返回值连接到 **Branch** 节点的 **Condition** 引脚。

	[REGION:lightbox]
		[![](Step2_29.png)(w:600)](Step2_29.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	如果 **Find** 节点成功找到 Map 中的项目，节点将返回 true。反之，如果 **Find** 节点返回 false，则说明 Map 中没有项目使用提供的键。
	[/REGION]

1.	从 **Branch** 节点的 **True** 引脚连出引线，搜索并连接到 **Set Text(TextRender)** 节点。

	[REGION:lightbox]
		[![](Step2_30.png)(w:600)](Step2_30.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	逻辑的这个分支代表如果容器中存在有效键值对，则会直接显示容器的关联值。
	[/REGION]

1.	将 **Find** 节点的返回 **Value** 引脚连接到 **Set Text** 节点的 **Value** 引脚，即可在游戏中显示容器的值。

	[REGION:lightbox]
		[![](Step2_31.png)(w:600)](Step2_31.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	现在从 **Branch** 节点的 **False** 引脚连出引线，搜索并连接 **Set Text(TextRender)** 节点。

	[REGION:lightbox]
		[![](Step2_32.png)(w:600)](Step2_32.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

	[REGION:note]
	逻辑的这个分支代表如果容器中不存在有效键值对，则会直接显示其他内容。 
	[/REGION]

1.	从 **Branch** 节点的 **Value** 引脚连出引线，搜索并连接到 **ToText(string)** 节点。

	[REGION:lightbox]
		[![](Step2_33.png)(w:600)](Step2_33.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	现在定义字符串读出：`Now, shoot the blocks!`。

	[REGION:lightbox]
		[![](Step2_34.png)(w:600)](Step2_34.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	检查完成的脚本后，点击 **Compile** 按钮，然后返回编辑器的 **视口** 界面。

	[REGION:lightbox]
		[![](Step2_35.png)(w:600)](Step2_35.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

1.	在编辑器的 **视口** 界面中，点击 **Play** 按钮查看工作状态下的新实现脚本。

	[REGION:lightbox]
		[![](Step2_36.png)(w:600)](Step2_36.png)
	[/REGION]
	
	[REGION:caption]
		点击查看全图。
	[/REGION]

## 最终结果

[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:videoid]
	DcskFd9UhlA
	[/PARAMLITERAL]
	[PARAMLITERAL:width]
	100
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	56.25
	[/PARAMLITERAL]
	[PARAMLITERAL:units]
	%
	[/PARAMLITERAL]
	[PARAMLITERAL:type]
	simple
	[/PARAMLITERAL]
[/OBJECT]

迄今为止，您已定义了一个新蓝图 Map，用键值对填充了容器，并用在 **TextRender** Actor 的蓝图事件图表中创建的一些基础逻辑完成了数值显示。如果您希望了解如何执行稍微高级一些的操作，请移步下一部分。您将学习到如何将键值对 **添加** 到 Map，进而显示 Map 的值。

[nav]
