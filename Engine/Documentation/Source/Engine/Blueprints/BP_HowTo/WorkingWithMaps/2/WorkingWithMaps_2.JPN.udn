INTSourceChangelist:3489715
Availability:Public
Title:2 - Blueprint Map の作成および表示
Description:コンテンツをインゲームで表示するための Blueprint Map の設定方法
Crumbs:%ROOT%
Parent:Engine/Blueprints/BP_HowTo/WorkingWithMaps
Version:4.15
Tags:Blueprints
Type:how-to
Skilllevel:Advanced
Checkpoint:HowToWorkWithMaps
Order:2

[nav]

新規作成したプロジェクトに **TextRender** アクタを設定したので、次は Blueprint Map コンテナを作成し、それをインゲームで表示してみましょう。

1.	プロジェクトの **コンテンツ ブラウザ** から **Display Set** TextRender アクタをダブルクリックして、ブループリント **イベントグラフ** を開きます。

	[REGION:lightbox]
		[![](Step2_1.png)(w:600)](Step2_1.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	以下の画面が表示されたら、**[Open Full Blueprint Editor]** リンクをクリックして開始します。

	[REGION:lightbox]
		[![](Step2_2.png)(w:600)](Step2_2.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	**Display Set** TextRender アクタ ブループリントの **イベントグラフ** が表示されます。ここで Blueprint Map と表示ロジックを追加することができます。

	[REGION:lightbox]
		[![](Step2_3.png)(w:600)](Step2_3.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]

	上記画面が表示されない場合、**[Event Graph]** タブをクリックしてアクタのブループリント イベントグラフ エディタを開きます。

	[REGION:lightbox]
		[![](Step2_3Note.png)(w:600)](Step2_3Note.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[/REGION]

1.	次に、後で表示するキー / 値のペアを格納する Blueprint Map コンテナを作成します。新規の Blueprint Map を作成するには、(**[My Blueprint]** パネルの **[+ Add New]** ボタンをクリックしてドロップダウン リストから **[Variable (変数)]** を選択します。

	![](Step2_4.png)

1.	新しい変数に「`Instruction Map`」と名前を付けます。

	![](Step2_5.png)

1.	その変数の横にある **ピン タイプ** のボタンをクリックします。

	![](Step2_6.png)

1.	次にドロップダウン リストから変数タイプの **Integer** を選択します。

	![](Step2_7.png)

1.	 **[Details (詳細)]** パネルの **[Variable Type]** ドロップダウン リストの横にある、その変数の **コンテナ タイプ** ボタンをクリックします。

	![](Step2_8.png)

1.	次にドロップダウン リストから **Map** コンテナ タイプを選択します。

	![](Step2_9.png)

1.	次に、Map のキー値のプロパティ タイプを定義します。今、キーは選択した通りの **Integer** 型になっています。しかし、値は **String** 変数型ではありません。値を **Integer** から **String** へ変更するには、値のプロパティ タイプのドロップダウン リストをクリックします。

	![](Step2_10.png)

1.	ドロップダウン リストから **[String]** を選択します。 

	![](Step2_11.png)

1.	この時点で、**Integer** 型のキーと **String** 型の値のペアができあがりました。また、コンテナ内に格納するアイテムを定義する前にブループリントのコンパイルをするようにをブループリント グラフから警告されます。**[Compile]** ボタンをクリックしてコンパイルを開始します。

	[REGION:lightbox]
		[![](Step2_12.png)(w:600)](Step2_12.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]
	ブループリントをコンパイルすると、コンテナの **[Default Value]** メッセージがインターフェースになり、Map のキーが Interger 型で値が String 型のキー / 値のペアをコンテナに追加することができます。
	[/REGION]

1.	ここまでの作業を保存していない場合は、**[Save]** ボタンをクリックしてすべての作業を保存してください。

	[REGION:lightbox]
		[![](Step2_13.png)(w:600)](Step2_13.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]
	一般的に、保存は早めに、そしてこまめに行うのがグッドプラクティスです。
	[/REGION]

1.	(**[Details (詳細)]** パネルの**[Default Value]** メニューにある) **[+]** (エレメントを追加) ボタンをクリックして、キー / 値のペアを新たに定義した **Instruction Map** コンテナに追加します。

	[REGION:lightbox]
		[![](Step2_14.png)(w:600)](Step2_14.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	コンテナに追加したキー / 値のペアのキーを「`1`」、値を「`WASD to run`」に定義します。

	![](Step2_15.png)

1.	この 2 ステップを繰り返して、**Instruction Map** コンテナに以下のキー / 値のペアが入っていることを確認してください。

	![](Step2_16.png)

## ロジックのスクリプト処理

新規に作成した Blueprint Map のコンテンツを表示する前に、必要なロジックを書き込む必要があります。

1.	コンテナを定義したので、**Instruction Map** 変数をブループリント イベントグラフにドラッグします。

	[REGION:lightbox]
		[![](Step2_17.png)(w:600)](Step2_17.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	**Instruction Map** ドロップダウン リストから **Get** を選択します。

	[REGION:lightbox]
		[![](Step2_18.png)(w:600)](Step2_18.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	**Instruction Map** ノードを引き出して **Map Utilities** インターフェースから **Find** ノードを追加します。

	[REGION:lightbox]
		[![](Step2_19.png)(w:600)](Step2_19.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]
	Map から値を取得する方法はいくつかあります。このステップでは、**Instruction Map** に含まれる関連付けられた値を表示するために integer 型のキーをインクリメントします。
	[/REGION]

1.	前述の注意を念頭に置いて、**[+ Add New]** ボタンをクリックし、ドロップダウン リストから **[Variable]** を選択します。

	![](Step2_20.png)

1.	新しい変数の型を **Integer** に設定し、「`Key`」と名前を付けます。

	![](Step2_21.png)

1.	**Integer** 変数の宣言と定義が完了したら、**Key** をブループリント イベントグラフにドラッグして、ドロップダウン リストから **[Get]** を選択します。

	[REGION:lightbox]
		[![](Step2_22.png)(w:600)](Step2_22.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	**Key** ノードをドラッグして **IncrementInt** ノードを検索および追加します。

	[REGION:lightbox]
		[![](Step2_23.png)(w:600)](Step2_23.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	次に **IncrementInt** ノードを **Find** ノードに接続します。

	[REGION:lightbox]
		[![](Step2_24.png)(w:600)](Step2_24.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]
	このチュートリアルの目的に合わせて、タイマー関数を使用して **Key** 変数をインクリメントします。
	[/REGION]

1.	**Event Tick** ノードを引き出して、**Delay** ノードを検索および追加します。

	[REGION:lightbox]
		[![](Step2_25.png)(w:600)](Step2_25.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	遅延時間を **2** 秒に設定し、**Delay** ノードを **IncrementInt** ノードに接続します。

	[REGION:lightbox]
		[![](Step2_26.png)(w:600)](Step2_26.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	**Event BeginPlay** ノードを引き出して **Branch** ノードを検索し接続します。

	[REGION:lightbox]
		[![](Step2_27.png)(w:600)](Step2_27.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	次に **IncrementInt** ノードを **Branch** ノードに接続します。

	[REGION:lightbox]
		[![](Step2_28.png)(w:600)](Step2_28.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	次に **Find** ノードの **Boolean** 型の戻り値を **Branch** ノードの **Condition** ピンに接続します。

	[REGION:lightbox]
		[![](Step2_29.png)(w:600)](Step2_29.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]
	Map 内でアイテムを見つけると **Find** ノードは true を返します。Map 内に指定されたキーを使っているアイテムが存在しない場合、**Find** ノードは false を返します。 |
	[/REGION]

1.	**Branch** ノードの **True** ピンを引き出して、**Set Text(TextRender)** ノードを検索し接続します。

	[REGION:lightbox]
		[![](Step2_30.png)(w:600)](Step2_30.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]
	この部分は、コンテナに有効なキー / 値のペアがあれば、コンテナに関連づいた値を表示するというロジックです。
	[/REGION]

1.	コンテナの値をインゲームで表示するには、**Find** ノードの **Value** ピンを **Set Text** ノードの **Value** ピンに接続します。

	[REGION:lightbox]
		[![](Step2_31.png)(w:600)](Step2_31.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	**Branch** ノードの **False** ピンを引き出して、**Set Text(TextRender)** ノードを検索し接続します。

	[REGION:lightbox]
		[![](Step2_32.png)(w:600)](Step2_32.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

	[REGION:note]
	この部分は、コンテナに有効なキー / 値のペアがなければ、何か別のものを表示するというロジックです。 
	[/REGION]

1.	**Branch** ノードの **Value** ピンを引き出して、**ToText(string)** ノードを検索し接続します。

	[REGION:lightbox]
		[![](Step2_33.png)(w:600)](Step2_33.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	次に、「`Now, shoot the blocks!`」を読み込むように文字列を定義します。

	[REGION:lightbox]
		[![](Step2_34.png)(w:600)](Step2_34.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	完成したスクリプトを確認したら、エディタの **Viewport** インターフェースに戻る前に **[Compile]** ボタンをクリックします。

	[REGION:lightbox]
		[![](Step2_35.png)(w:600)](Step2_35.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

1.	エディタの **Viewport** インターフェースで、**[Play]** ボタンをクリックして新しく実装したスクリプトの動きを確認します。

	[REGION:lightbox]
		[![](Step2_36.png)(w:600)](Step2_36.png)
	[/REGION]

	[REGION:caption]
		クリックしてフルサイズで表示
	[/REGION]

## 結果

[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:videoid]
	DcskFd9UhlA
	[/PARAMLITERAL]
	[PARAMLITERAL:width]
	100
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	56.25
	[/PARAMLITERAL]
	[PARAMLITERAL:units]
	%
	[/PARAMLITERAL]
	[PARAMLITERAL:type]
	simple
	[/PARAMLITERAL]
[/OBJECT]

このステップでは、新規作成した Blueprint Map を定義し、キー / 値のペアを追加し、 
**TextRender** アクタのブループリント イベントグラフで作成したロジックのいくつかを使ってそれらの値を表示しました。もう少し高度な操作を学習したい場合は次のステップへ進んでください。 
キー / 値のペアを Map に **追加** して、 
最終的に Map の値として表示する方法を説明します。

[nav]