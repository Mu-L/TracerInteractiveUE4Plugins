INTSourceChangelist:2468080
Availability: Public
Title:1. 所需资源的设置
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:在这个步骤中，我们会设置在项目中使用到的资源。 


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How-To Home](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[Next Step](Engine\Blueprints\HowTo\BPHT_2 "%Engine\Blueprints\HowTo\BPHT_2:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]



在这个页面中，我们会进行一些准备工作，并对稍后在本指南中使用的资源进行设置。 我们会创建一个可破坏的静态网格物体，放置一些生成位置，并创建基础HUD来对玩家显示游戏状态的信息。 

[REGION:note]
我们在启用了 **Starter Content** （入门内容）的前提下，专为这个教程创建了一个基于 **蓝图第一人称** 模板的新项目。 如果您不确定如何基于模板创建项目，或者如何启用初学者内容，请查看[](Engine/Basics/Projects/Browser)文档以了解关于设置项目的信息。 
[/REGION]

在您创建并打开了项目后，请按下 **Ctrl+N** 来创建 **新关卡** ，并在弹出窗口时选择 **默认值** 。 在您创建了新关卡后，请按照以下步骤来开始设置每个所需的资源。 

## 创建可破坏的静态网格物体

让我们首先创建可射击的岩石，它会在被击中后销毁。 

1.	在 **内容浏览器** 中，打开 **Content/StarterContent/Props** 文件夹。 

1.	在 **Props** 文件夹， **右键点击** **SM_Rock** 并选择 **Create Destructible Mesh** （创建可破坏网格物体）。 

	![](CreateMesh.png)

1.	打开 **SM_Rock_DM** 资源，然后点击工具条中的 **Fracture Mesh** （破裂网格物体）按钮。 

	![](FractureMesh.png)

	[REGION:note]
	如果您没有在预览窗口中看到岩石，请关闭窗口并再打开一次。 
	[/REGION]

1.	**保存** 并关闭 **SM_Rock_DM** 资源。 

1.	**右键点击** **SM_Rock_DM** 资源并选择 **Asset Actions/Create Blueprint Using This...** （资源操作/使用它来创建蓝图...）。 

	![](CreateBlueprint.png)

	在弹出窗口时，给蓝图起个名称，比如 **BP_Rock** 。 

1.	在蓝图打开时，点击 **Add Component** （添加组件）按钮，然后添加一个 **Projectile Movement** （射弹移动）组件。 

	![](AddProjectile.png)

1.	点击 **射弹移动** 组件，然后在 **详细信息** 中设置 **初始速度** 、 **最大速度** 并把 **X** 的 **速度** 设置为 **1500.00** 。 

	![](ProjectileDetails.png)

1.	选择 **可破坏** 组件，然后在 **碰撞** 下的 **详细信息** 面板，勾选 **模拟生成碰撞事件** 选项。 

	![](GenerateHits.png)

1.	点击 **编译** 和 **保存** 按钮，然后关闭蓝图。 

## 放置生成点 

我们现在会在关卡中创建一些生成点，以启动可射击的岩石。 

1.	在 **模式** 菜单，搜索并添加 **目标点** 到关卡中。 

	![](AddTargetPoint.png)

1.	选择关卡中的 **对象点** ，并将其 **变换** 设置为如下显示内容。 

	![](TargetPointTransform.png)

	**X** 的 **位置** 为 **7.0m** （其余为0），而 **Y** 的 **旋转** 为 **40.0** （其余为0）。 

1.	在关卡中，在选择了 **目标点** 后，按下 **Ctrl+W** 来复制它，并按如下显示方式来设置其 **详细信息** 值。 

	![](Duplicate1.png)

	这样将会把生成点移动到首个生成点的左侧。 

1.	按下 **Ctrl+W** 以再次复制 **目标点** ，并按如下显示的方式来设置新目标点的 **详细信息** 。 

	![](NewDuplicate.png)

	现在您在玩家起始位置处有了3个生成点（控制器图标和方向由蓝色箭头来指示）。 

	![](TargetPointsAdded.png)


## 创建HUD

在设置的最后，需要我们创建基础HUD，从而进行信息通信。 

1.	在 **内容浏览器** 的空白处， **右键点击** 并选择 **User Interface/Widget Blueprint** （用户接口/控件蓝图）。 

	![](CreateWidgetBlueprint.png)

	**控件蓝图** 指的是用来创建HUD元素的、与 **Unreal Motion Graphics UI** （虚幻运动图形UI）共同使用的蓝图类型。 

	[REGION:note]
	请查看 [](Engine/UMG) 以获得更多信息。 
	[/REGION]

1.	在提示时，将其命名为 **HUD** 并打开。 

1.	在 **面板** 下的 **Palette** 窗口中，把 **Vertical Box** （垂直框体） 拖曳到 **Hierarchy** （层次结构） 窗口的 **CanvasPanel** 中。 

	![](AddVerticalBox.png)

1.	另外在 **面板** 菜单下，拖曳 **Horizontal Box** （水平框体）到 **Hierarchy** （层次结构）窗口中的 **Vertical Box** （垂直框体）。 

	![](AddHorizontalBox.png)

1.	在 **Palette** 下的 **Common** （通用）部分，拖曳两个 **Text** （文本）控件到 **Hierarchy** （层次结构）窗口中的 **Horizontal Box** （水平框体）。  

	![](AddTextBlocks.png)

1.	选择 **Hierarchy** （层次结构）窗口中的 **Vertical Box** （垂直框体），然后在 **详细信息** 面板中点击 **Anchors** （定位点）并选择以下显示的内容。 

	![](AnchorSelected.png)

	[REGION:note]
	无论屏幕大小如何， **Anchor** （定位点）都会锁定指定位置的UI元素（请参见[](Engine/UMG/UserGuide/Anchors)以了解更多信息）。 
	[/REGION]

1.	在选择了 **Vertical Box** （垂直框体）后，将其移动到屏幕右侧并对其进行缩放，使文本能够显示。 

	![](MovedWidget.png)

1.	点击框体中显示的最左侧的文本，然后在 **Text** （文本）下的 **Details** （详细信息）面板中输入 **Pulls :** 。 

	![](EnterText1.png)

1.	对于其它文本，在 **Text** （文本）域中输入 **10** 。 

	![](EnterText2.png)

	这个文本就是我们基于游戏状态在稍后进行通信和更新的内容。 

1.	在 **Hierarchy** （层次结构）窗口， **右键点击** 并 **复制** **Horizontal Box**（水平框体），然后将其粘贴到 **Vertical Box** （垂直框体）上。 

1.	重复之前的步骤，这样目前在 **Vertical Box** （垂直框体）下会有三个 **Horizontal Box**（水平框体），而文本会如下方那样显示。 

	![](AddedBoxes.png)

1.	更新其它文本域内容为 **Shots** （设置为 **3** ）和 **Score** （设置为 **0** ），并点击 **编译** 按钮。  

	![](UpdateText.png)

1.	**编译** 并 **保存** 您的蓝图，然后关闭 **HUD Widget Blueprint** （HUD控件蓝图）。 

现在我们的资源设置就完成了。 在下一步中，我们会对 **Character Blueprint** （角色蓝图）进行一些小小的变更，从而确保游戏中的可玩角色进行了正确设置。 





