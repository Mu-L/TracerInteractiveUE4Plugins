Availability:Public
Title:3.射撃対象となる岩をスポーンする
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:スポーン ポイントに設定した位置の 1 つで岩をスポーンするボタンをプレイヤーが押せるようにしてみましょう。 
version:4.9
tags:Blueprints
parent:Engine\Blueprints\HowTo
type:how-to
type:multi-step
order:3

[NAV]

Description:プレイヤーがボタンを押して射撃対象となる岩をスポーンできるロジックを設定します。レベル内にスポーン ポイントを幾つか定義してあります。それらの 1 つを取得するために、**イベントディスパッチャー** を使って **Level ブループリント** (次のステップで作成します) 内にイベントを実行して、これらの位置の 1 つを取得して Character プリントに送ります。 


それではまず、プレイヤーがキーを押して、射撃対象となる岩をスポーンできるようにしましょう。 

1.	**FirstPersonCharacter** ブループリント内で、グラフをどこか **右クリック** して **F** Key Event を追加します。 

	![](FKeyEvent.png)

1.	**B** を押したまま、グラフ内で **左クリック** して、**Branch** ノードを作成します。 

1.	**Alt** を押しながら **isActive** 変数をドラッグしてチェックボックスにチェックを入れて、以下のように接続します。 

	![](BranchAdded.png)

1.	**Control** を押しながら、**isActive** 変数と **Pulls** 変数をドラッグします。 

1.	**isActive** を **NOT Boolean** ノード (true でない) に接続し、**Pulls** を **>** ノード (0 に設定) に接続します。 

	![](TwoNodesAdded.png)
	[REGION:note]
	古いバージョンのエンジンでは、**NOT Boolean** ノードは **!=** ノードと扱われています。
	[/REGION]

1.	上記の出力を 2 つとも **And** ノードに接続し、**Branch** の **Condition** につなぎます。 

	![](AndAdded.png)

	ここで、**IsActive** 変数が true ではなく、プレイヤーの **Pulls** 数が 0 より大きいかどうかを確認することにより、プレイヤーが岩をスポーンできるかどうかを判断するロジックを設定します。両方のステートメントが true であれば、**Branch** ノードの **True** 側を処理して岩をスポーンします (スクリプトはまだ完全ではないので、以下で設定をします)。 

1.	**Alt** を押しながら **Pulls** 変数をドラッグして **Set IsActive** ノードの次に接続します。

1.	**Control** を押しながら **Pulls** 変数をドラッグして **Int - Int** ノード (1 に設定) に接続し、さらに **Set Pulls** に接続します。 

	![](PullsSet.png)

1.	**Compile** をクリックし、**Set Pulls** ノードを引き出して **ResetShots** カスタム イベントを追加します。 

	![](CallCustomEvent.png)

	設定はこのようになっているはずです。 

	![](ScriptBeforeEventDispatcher.png)

	プレイヤーが岩をスポーンできる時に対するロジックはされました。次はスポーン位置を取得するためにレベルと通信する必要があります。**F** が押されると呼び出される **イベントディスパッチャー** を使って行います。**Level ブループリント** はイベントディスパッチャーをリッスンし、呼び出されると独自のイベントを実行してスポーン ポイントの 1 つの位置を取得し、それを Character ブループリントへ渡します。 

1.	**[My Blueprint]** ウィンドウで **[+ Event Dispatcher (イベントディスパッチャーを追加)]** ボタンをクリックします。 

	![](AddEventDispatcher.png)

1.	新しいイベントディスパッチャーをクリックして選択した状態で **F2** を押して名前を「**GetSpawnLocation**」に変更します。 

	![](RenameEventDispatcher.png)

1.	**Reset Shots** 関数の次のグラフに、**Call GetSpawnLocation** ノードを追加します。 

	![](CallEventDispatcher.png)

	Event Dispatcher が追加されたことが、ノードの右上端に封筒のアイコンで表示されます。 

	![](NewNodeAdded.png)

1.	**GetSpawnLocation** ノードを引き出して **Spawn Actor from Class** ノードを追加します。 

 	![](SpawnActorNode.png)

1.	**Spawn Actor** ノードの **Class** を **BP_Rock** に設定します。 

1.	**Spawn Actor** ノードでも、**SpawnLocation** 変数を **Spawn Transform** ピンにドラッグ＆ドロップします。 

	![](SpawnActorComplete.png)

	射撃対象となる岩をスポーンし、岩をスポーンする **Transform** 位置を受け取るように、Character ブループリントが設定されました。 

次のステップでは **Level ブループリント** を使用して、Character ブループリントのイベントディスパッチャーが呼び出された時に、スポーン ポイントの 1 つの位置を取得して、その情報を Character ブループリントに渡します (こうすることで、 Character ブループリントから Level ブループリントとその逆という、双方向で情報を渡します)。 


[NAV]