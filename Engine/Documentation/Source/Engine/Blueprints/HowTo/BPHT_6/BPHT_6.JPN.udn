Availability:Public
Title:6.HUD と通信する
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:Character ブループリントに保存された値に基づいて HUD を更新してみましょう。 
version:4.9
tags:Blueprints

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[前のステップ](Engine\Blueprints\HowTo\BPHT_5 "%Engine\Blueprints\HowTo\BPHT_5:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How To ホーム](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[次のステップ](Engine\Blueprints\HowTo\BPHT_7 "%Engine\Blueprints\HowTo\BPHT_7:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]



このステップでは、Character ブループリントと通信して、その中に保存された Pull、Shot、Score の値を取得し、HUD Widget ブループリント上に表示する値を更新します。**Cast** を使ってプレイヤーの Character ブループリントにアクセスして、Character ブループリントにある値を HUD のプロパティにバインドすることにより、これらの値が Character ブループリントで更新されると自動的に更新されるようになります。 

ゲームの完了まであと少しです。最後に HUD の更新をしてみましょう。 

1.	作成した **HUD** Widget ブループリントを開きます。 

1.	**HUD** Widget ブループリントの **[Graph]** タブをクリックします。 

	![](GraphClick.png)

1.	グラフ内を **右クリック** して、**Event Construct** ノードを追加します。 

	![](EventConstruct.png)

	このノードは **Event Begin Play** に似ていて、 Widget ブループリントが構築されると呼び出されます。 

1.	**Get Player Character** ノードと **CastTo FirstPersonCharacter** ノードを追加します。 

	![](CastToFirstPerson.png)

1.	**As First Person Character** ピンを引き出して、 **Promote to variable** を選択し、新しいノード名を「**MyCharacter**」とします。 

	![](MyCharacter.png)

	変数を選択し **F2** を押すと、**My Blueprint** ウィンドウで関数名の変更ができます。 

1.	**[Designer (デザイナ)]** タブで、まず **[Details (詳細)]** パネルの横にある **[Pulls]**、次に **[Text]** の値をクリックしてから **[Bind (バインド)]** オプションをクリックします。 

	![](Bind1.png)

	すると、バインド用に新規グラフが開きます。 

1.	**Control** を押した状態で **MyCharacter** 変数を **Get Pulls** へドラッグし、 **Return Node** の **Return Value** へ接続します。 

	![](GetPulls.png)

	**To Text (Int)** 変換ノードが自動的に作成されます。次に Pulls 値が正しく表示されるように設定します。 

1. **[Designer]** タブで **[Shots]** の値をクリックし、**[Details]** パネルで **[Bind]** オプションをクリックし、以下のようにバインドします。 

	![](GetShots.png)

	発射 1 回あたりの残弾数が正確に更新および表されます。 

1. **[Designer]** タブで **[Score]** の値をクリックし、**[Details]** パネルで **[Bind]** オプションをクリックし、以下のようにバインドします。 

	![](GetScore.png)

	最後に、岩にヒットするとプレイヤーに対して得点を正しく取得して表示します。 

1. **[Compile (コンパイル)]** と **[Save (保存)]** をクリックし、ブループリントを閉じます。 

1. メイン エディタ ビューで、 **[Play (プレイ)]** ボタンをクリックしてエディタで再生します。 

	[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:width]
	640
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	360
	[/PARAMLITERAL]
	[PARAMLITERAL:videoid]
	tbwor-dRyEs
	[/PARAMLITERAL]
	[/OBJECT]


これで簡単なシューティング ゲームが完成しました。岩をスポーンするには、前のセクションでイベントにバインドしたように **F** を押します。このガイドでは、**イベントディスパッチャー**、**Cast** ノードと **Binding** を使って 3 つの異なるブループリント間での通信方法を学びます。プロジェクトではレベルから Character ブループリントの通信方法に加えて、キャラクターから情報の HUD への渡し方を学びます。 

プロジェクトの終了時には、サンプルを使ってプロジェクトを独自のものに変更してみます。このガイドのトピックスをカバーしている追加文書へのリンクも紹介しています。 













[COMMENT:none]
 Old

本ガイドおよびエディタ全般に渡り取り扱ったトピックスに関しては、アンリアル エディタのマニュアル](Engine) をご覧ください。

このガイドのトピックに関連した情報は以下の通りです。

* **ブループリント** 全般に関する詳細は、[ブループリント ビジュアル スクリプティング システム](Engine\Blueprints) をご覧ください。

* **ダイレクト ブループリント通信** に関する詳細は、[ダイレクト ブループリント通信](Engine/Blueprints/UserGuide/BlueprintComms) を参照してください。

* **ブループリント インターフェース** に関する詳細は、[ブループリント インターフェースの実装](Engine/Blueprints/UserGuide/Types/Interface/UsingInterfaces) をご覧ください。 

* **イベントディスパッチャー** に関する詳細は、[イベントディスパッチャー](Engine/Blueprints/UserGuide/EventDispatcher) を参照してください。

* **Unreal Motion Graphics** (UMG) での HUD エレメントの作成については、[UMG UI デザイナ](Engine/UMG) をご覧ください。


[/COMMENT]














