Availability:Docs
Title:7. On Your Own!
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:In this final step, examples are given how you can take this project to the next level as well as links to additional documentation are provided. 
version: 4.9
order:7
tags:Blueprints


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[Previous Step](Engine\Blueprints\HowTo\BPHT_6 "%Engine\Blueprints\HowTo\BPHT_6:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How-To Home](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[/PARAM]
[/OBJECT]
[/VAR]



Using what you have learned over the course of this project, try to do the following: 

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
yut5Feu1KxI
[/PARAMLITERAL]
[/OBJECT]

* In the **FirstPersonCharacter** Blueprint, award a higher score for hitting the rock on the 1st versus 2nd or 3rd shot. 
* Also in the **FirstPersonCharacter** Blueprint, set it so the player cannot shoot unless a rock has been spawned. 
* In the level, add two more spawn points (perhaps at the corners, or on the left/right side of the player). 
* In the HUD, add a new category to keep track of the number of "first shot" hits by a player. 

For more information on the topics covered in this guide, and across the entire editor, see the [Unreal Editor Manual](Engine).

As for coverage related to the topics in this guide:

* For more information on Blueprints in general, see: [Blueprints Visual Scripting](Engine/Blueprints)

* For more information on using Blueprint Communication and when to use it, see: [Blueprint Communication Usage](Engine/Blueprints/UserGuide/BlueprintCommsUsage)

* For more information on Event Dispatchers, see: [Event Dispatchers](Engine/Blueprints/UserGuide/EventDispatcher)

* For more information on Casting, see: [Casting](Engine/Blueprints/UserGuide/CastNodes)

* For more information on creating HUD elements with Unreal Motion Graphics (UMG), see: [Unreal Motion Graphics](Engine/UMG)














