INTSourceChangelist:3041817
Availability:Public
Title:蓝图总览
Crumbs: %ROOT%, Engine, Engine/Blueprints
Description:蓝图总览页面包含蓝图剖析和可用的不同蓝图类型。 
version:4.9
parent:Engine/Blueprints
order:2
type:reference

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Blueprints/Overview:title%](blueprint_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/anim_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Blueprints/Overview:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Blueprints/Overview:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Blueprints/Overview]
	[/PARAM]
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine/Blueprints/Overview:title%](blueprint_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/anim_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Blueprints/Overview:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Blueprints/Overview:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Blueprints/Overview]
	[/PARAM]
[/OBJECT]
[/VAR]

[TOC (start:2)]

[INCLUDE:Engine/Blueprints/GettingStarted/#Intro]

这是否意味着蓝图就是虚幻脚本的替代品？答案既肯定又否定。之前利用虚幻脚本进行的游戏性编程和其他操作 
仍然可以通过 C++ 代码进行处理。同时，蓝图并非刻意为替代 
虚幻脚本而生，但它们的许多用途确实和虚幻脚本相同，例如：

* 延展类
* 保存并编辑默认属性
* 为类管理子对象（如组件）实例化

期望达到的结果是：游戏性程序员构建基础类，基础类公开一套有用的函数和属性； 
这些基础类形成的蓝图可使用这些函数和属性并进行延展。 

[EXCERPT:GameplayEquivalents]
下表对虚幻脚本（出自虚幻引擎 3）、C++、蓝图中诸多要素处理方法进行比较， 
帮助旧版虚幻引擎用户过渡到新版，并对本地代码 
和蓝图进行比较。

| 虚幻脚本（UE3）  | 蓝图（UE4）         | C++（UE4）          |
| ------------------- | ------------------------ | ------------------ |
| .uc file            | 蓝图资源          | .h/.cpp files      |
| UClass              | UBlueprintGeneratedClass | UClass             |
| 延展 [ClassName] | ParentClass              | :[ClassName]      |
| 变量            | 变量                 | UProperty()        |
| 函数            | 图表/事件            | UFunction()        |
| defaultproperties{} | 默认类           | native constructor |
| 默认组件  | 组件列表          | native constructor |
[/EXCERPT:GameplayEquivalents]


如需了解蓝图高阶指导内容，请查阅 [](Engine/Blueprints\GettingStarted)。

## 蓝图类型

蓝图有数种类型，每种均有其独特用法，如创建新类型编写关卡事件脚本， 
或定义其他蓝图使用的接口和宏。


###蓝图类

[INCLUDE:Engine/Blueprints/UserGuide/Types/ClassBlueprint#Intro]


###纯数据蓝图

[INCLUDE:Engine/Blueprints/UserGuide/Types/ClassBlueprint#DataBlueprint]

###关卡蓝图

[INCLUDE:Engine/Blueprints/UserGuide/Types/LevelBlueprint#Intro]

###蓝图接口

[INCLUDE:Engine/Blueprints/UserGuide/Types/Interface#Intro]

###蓝图宏库

[INCLUDE:Engine/Blueprints/UserGuide/Types/MacroLibrary#Intro]

###蓝图工具

**蓝图工具** 又名 **Blutility**，是用于执行编辑器行为或延展编辑器功能的 
纯编辑蓝图。它们可将不带参数的 [](Engine/Blueprints/UserGuide/Events) 作为 UI 按键公开， 
并能执行对 _蓝图_ 公开的任意函数、对视口中当前选定的 Actor 集产生作用。

## 蓝图剖析

蓝图功能由诸多元素定义。部分元素默认存在， 
其余可按需添加。这些元素可用于定义组件、执行 
初始化和设置操作、对事件作出响应、组织并模块化操作、定义属性 
等。

[EXCERPT:Sections]
###组件窗口

[INCLUDE:Engine/Blueprints/UserGuide/Components#Intro]

###构建脚本

[INCLUDE:Engine/Blueprints/UserGuide/UserConstructionScript#Intro]

###事件图表

[INCLUDE:Engine/Blueprints/UserGuide/EventGraph#Intro]

###函数

[INCLUDE:Engine/Blueprints/UserGuide/Functions#Intro]

###变量

[INCLUDE:Engine/Blueprints/UserGuide/Variables#Intro]

[/EXCERPT:Sections]

[COMMENT:none]

### 蓝图模式

蓝图的 _模式_ 决定其窗口中的内容。关卡蓝图只包含一个模式（图表模式），而蓝图类包含三种不同模式：

* **[图表模式](Engine/Blueprints\Editor\Modes\GraphPanel)** - 可在此添加并连接脚本节点，为关卡创建游戏性功能。
* **[默认模式](Engine/Blueprints\Editor\Modes\Defaults)** - 可在此设置蓝图默认项。
* **[组件模式](Engine/Blueprints\Editor\Modes\Components)** - 可在此对组成蓝图的组件进行添加、移除和编辑。

如需了解蓝图类模式的更多内容，请查阅 [](Engine/Blueprints\Editor\Modes)。

[/COMMENT]
