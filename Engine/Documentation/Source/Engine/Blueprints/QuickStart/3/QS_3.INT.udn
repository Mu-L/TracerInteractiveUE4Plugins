Availability: Docs
Title:3. Convert Your Actor to a Blueprint Class
Crumbs:%ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/QuickStart
Description:Make your launchpad reusable and scriptable by converting it to a Blueprint Class
version: 4.9
parent:Engine/Blueprints/QuickStart
order:3
type:multi-step
tags:Blueprints

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Step](Engine/Blueprints/QuickStart/2 "%Engine/Blueprints/QuickStart/2:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Quick Start Home](Engine/Blueprints/QuickStart)
	[/PARAM]
	[PARAM:next]
		[Next Step](Engine/Blueprints/QuickStart/4 "%Engine/Blueprints/QuickStart/4:title%")
	[/PARAM]
[/OBJECT]
[/VAR]



---
Making changes inside the Blueprint means that each time you make a new launchpad, it will have the look and feel you have created in the **Blueprint Editor**. While you could duplicate your LaunchPad
Actor around the level, any changes you make on a particular launchpad would only affect that one copy. 

1. In the **Details** panel, click on the **Blueprint/Add Script** button.

	![](BPButton.png)

1. Expand the **SideScrollerBP** folder, then select the **Blueprints** folder.
1. At this point, you could rename your Blueprint, or leave it as the default **LaunchPad_Blueprint**.
1. Click on **Create Blueprint**. 

	![](CreateBlueprint.png)

Your Blueprint is now visible in the **Content Browser**. Right now, you could drag and drop from the **Content Browser** into the level to create lots of copies of your platform mesh and trigger, but
there will not be any behavior on it yet. In the next step, you will start setting up the graph nodes inside of your Blueprint to launch your Character when it crosses the launchpad.

![](LaunchPadBP_CB.png)

---


