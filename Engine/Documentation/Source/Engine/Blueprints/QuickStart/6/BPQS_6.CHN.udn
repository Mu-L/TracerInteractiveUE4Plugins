INTSourceChangelist:6111272
Availability: Docs
Title:6.发射角色
Crumbs:%ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/QuickStart
Description:利用一个 Launch Character 节点设置实际发射行为。
version:4.9
parent:Engine/Blueprints/QuickStart
order:6
type:multi-step
tags:Blueprints

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Step](Engine/Blueprints/QuickStart/5 "%Engine/Blueprints/QuickStart/5:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Quick Start Home](Engine/Blueprints/QuickStart)
	[/PARAM]
	[PARAM:next]
		[Next Step](Engine/Blueprints/QuickStart/7 "%Engine/Blueprints/QuickStart/7:title%")
	[/PARAM]
[/OBJECT]
[/VAR]



---

Launchpad 使用一个名为 **Launch Character** 的功能工作。**Launch Character** 功能向角色当前速率添加指定的速率，以便
将角色向任意方向弹出。该功能只针对于角色，因此需要确定 Pawn（替身）是一个角色（人型替身）。 

可通过转换功能来实现。转换功能会尝试把输入转变为其他类型，以便访问仅限于某种类型的特定功能。如输入基于相应类型， 
则可进行访问。 

关卡中存在的是一个 Actor 以及稍后添加的其他特定行为。也就意味着可以为关卡中的任意物体添加一个引用，再将其转换为 **Actor**， 
便大功告成。然而，并非关卡中的所有资源均是代表游戏玩家的 Pawn，因此将资源转换为 **Pawn** 不一定会成功。 

1. 拖动 **Get Player Pawn** 节点的 **Return Value** 针脚。 
1. 在搜索框中输入“Cast”，然后在快捷菜单中选择 **Cast to Character**。

	![](CasttoCharacterMenu.png)

1. 在 **Cast** 节点上拖动 **As Character** 引脚。  
1. 在搜索框中输入“Launch”，然后在快捷菜单中选择 **Launch Character**。

	![](LaunchWired.png)

	[REGION:note]
	注意，为成功转换，输出执行引脚与 **Launch Character** 的输入执行引脚自动相连。 
	[/REGION]

1. 在 **Launch Character** 节点的 Z 轴数值中输入 “3000”。
1. 最后，将 **Branch** 节点的 **True** 执行引脚与 **Cast to Character** 节点的输入执行引脚连通。只有当重叠的 Actor 为 Pawn 时，**Cast to Character** 和 **Launch Character** 才会发生。

	![](GraphDone.png)

	在此，使用工具栏按钮 **编译** 并 **保存** 蓝图，然后关闭蓝图编辑器。

1. 从 **内容浏览器** 将数个 launchpad 拖入关卡。 

	![](MultipleLaunchpads.png)

1. 在工具栏中点击 **进行游戏**，使用 WASD 键在关卡中四处走动，使用空格键跳跃。前往平台上，然后发现角色真的飞上天啦！

	[OBJECT:EmbeddedVideo]
		[PARAMLITERAL:width]
		640
		[/PARAMLITERAL]
		[PARAMLITERAL:height]
		360
		[/PARAMLITERAL]
		[PARAMLITERAL:videoid]
		Ax4Xgu2Zb4g
		[/PARAMLITERAL]
	[/OBJECT]


---


