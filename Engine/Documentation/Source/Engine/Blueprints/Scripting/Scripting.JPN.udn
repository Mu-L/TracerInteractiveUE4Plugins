Availability:Public
Title:スクリプト処理の基礎
Crumbs: %ROOT%, Engine, Engine/Blueprints
Description:ブループリント ビジュアル スクリプティング システムの変数と実行フローの概要
version:4.12
parent:Engine/Blueprints
tags:Blueprints
type:landing
topic-image:Engine/Blueprints/UserGuide/using_interface_topic.png



ブループリントは、スクリプト処理言語を可視化して表示します。可視化することで、データ タイプ変数、配列、構造体など標準的なスクリプト処理言語のニュアンスを幅広く共有することができます。 
ブループリントは、各ノードを明確に線形実行しなければなりませんが、実行フローは典型的なスクリプト処理言語のように機能します。それでは、様々な変数タイプ、それらの使い方、グラフ内のノードの実行に関して 
詳しく説明していきます。 

## 変数

変数は、Boolean、integer、float といったデータ型をはじめ、様々な型で作成が可能です。ブループリントでは、これらは色別にコード化されて、区別しやすくなっています。
さらに Bluepringt 変数は、オブジェクト、アクタ、クラスなどを保持する参照型にもなります。

[DIR(output:"listbutton" parent:"Engine/Blueprints" tags:"Data Types" org:"flat")]

## 実行フロー

ブループリントでは、イベントというノードが最初に実行され、それから白い実行ワイヤーの左から右に向かって実行フローが実施されます。ゲームをエディタで実行しながら、実行フローをビジュアル化することで、
デバッグがしやすくなります。さらにデータは変数型に一致する色のワイヤーを通ります。入力ピンは、
ノードの実行時に、最終的な結果が計算されてノードに送られるまでデータ ワイヤーを右から左にたどります。

実行ピンのあるノード (非純粋ノード) は実行時に出力ピンの値を格納します。
一方、出力ピンのないノード (純粋ノード) は、ノードが出力実行ピンに接続されるたびに毎回出力ピンを再評価します。 

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Execution Flow")]

## 配列と構造体

配列と構造体は複数のデータ型の集合体です。配列はより複雑なシステムで使用することができます。情報の一括保持や、大容量データのストリーミング処理を容易にします。

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Arrays and Structures")]

## 詳細なコンテナ

アンリアル エンジン 4.15 では、Blueprint Application Programming Interface (API) にBlueprint Set と Map の両方が追加されました。Set と Map というコンテナによりデベロッパーはクリエイティブにデータの格納およびアクセスができるようになります。
つまり、ブループリントの上級者向けのコンテナということになります。Blueprint Array を選べば無難ですが、結合タイプのコンテナ (Map や Set など) を使うと 
ゲーム データをさらに楽しく扱いやすくなります。

### Blueprint Map

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Blueprint Map")]

### Blueprint Set

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Blueprint Set")]
