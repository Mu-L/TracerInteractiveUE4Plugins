INTSourceChangelist:6438527
Availability: Public
Title: 기본 스크립팅
Description: 블루프린트 비주얼 스크립팅 시스템의 실행 흐름과 변수에 대한 일반적인 개요입니다.
Type: landing
Version: 4.12
Parent: Engine/Blueprints
Tags: Blueprints
Tags: Blueprint Related Topic
topic-image: using_interface_topic.png


블루프린트는 비주얼 방식의 스크립팅 언어입니다. 그렇기에, 이 시스템에는 데이터 유형 변수, 배열, 구조체 등 표준 스크립팅 언어의 미묘한 차이점을 공유하는 부분이 다수 있습니다. 실행 흐름 역시, 블루프린트는 각 노드의 명시적 순차 실행이 필수이지만, 전형적인 스크립트 언어와 비슷한 방식으로 작동합니다. 아래 각 페이지에서는 다양한 변수 유형, 그 변수 작업 방식, 그래프 나에서의 노드 실행에 대해 자세히 다루도록 하겠습니다.

## 변수

변수는 부울, 인티저, 플로트를 포함한 여러가지 유형으로 생성 가능합니다. 이들은 색을 통해 블루프린트에 쉽게 식별이 가능합니다. 블루프린트 변수는 오브젝트, 액터, 클래스와 같은 것을 담은 레퍼런스 유형이 될 수도 있습니다.

[DIR(output:"listbutton" parent:"Engine/Blueprints" tags:"Data Types" org:"flat")]

## 실행 흐름

블루프린트에서, 실행하려는 첫 노드는 이벤트이며, 그 다음은 왼쪽에서 오른쪽으로 흰색 실행 선을 따라 흘러갑니다. 에디터에서 게임이 실행중일 때 실행 흐름을 시각화시켜 볼 수 있는데, 디버깅에 도움이 됩니다. 데이터는 변수 유형에 일치하는 색의 선을 따라 흐르기도 합니다. 입력 핀은 노드 실행시 평가되며, 오른쪽에서 왼쪽으로 데이터 선을 거슬러 올라가며 최종 결과를 계산한 후 노드에 제공합니다.

실행 핀이 있는 (impure, 비순수) 노드는 실행될 때 출력 핀의 값을 저장하는 반면, 실행 핀이 없는 (pure, 순수) 노드는 그 출력에 연결된 노드가 실행될 때마다 출력 값을 다시 구합니다.

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Execution Flow")]

## 배열 & 구조체

배열과 구조체는 다수의 데이터 유형 모음입니다. 이를 통해 보다 복잡한 시스템을 만들 수 있고, 유사한 정보를 가까이 묶어두는 데 도움이 되며, 다량의 정보에 대한 효율적인 처리가 가능해집니다.

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Arrays and Structures")]

## 고급 컨테이너

언리얼 엔진 4.15 버전 이후 블루프린트 Set (세트)와 Map (맵)이 블루프린트 어플리케이션 프로그래밍 인터페이스(API)에 추가되었습니다. 이 컨테이너를 통해 개발자들은 창의적인 데이터 저장 및 접근 방식을 구현할 수 있어 흥미롭기는 하지만, 이 컨테이너는 블루프린트 전문가 수준의 고급 사용자를 대상으로 합니다. 보통 컨테이너로는 블루프린트 배열만 가지고도 충분하지만, (맵이나 세트같은) 결합 컨테이너를 통해 게임 내 데이터에 흥미로운 작업을 하는 데 더 좋은 경우가 있을 수 있습니다.

### 블루프린트 맵

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Blueprint Map")]

### 블루프린트 세트

[DIR(output:"listbutton" parent:"Engine/Blueprints/Scripting" tags:"Blueprint Set")]
