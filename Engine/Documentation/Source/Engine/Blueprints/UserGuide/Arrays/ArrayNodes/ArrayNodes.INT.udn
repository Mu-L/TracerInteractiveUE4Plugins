Availability:Public
Title:Array Nodes
Crumbs: %ROOT%, Engine/Blueprints, Engine/Blueprints/UserGuide, Engine/Blueprints/UserGuide/Arrays
Description: Nodes designed to aid in working with Blueprint arrays.
version: 4.9
parent:Engine/Blueprints/Scripting
tags:Arrays and Structures
tags:Blueprints
tags:Special Nodes
order:2
topic-image:Engine\Blueprints\UserGuide\ArrayNodes.png


## Add Item
The **Add Item** node takes in an array and a variable. It inserts the variable into the array at the end and increases the size of the array accordingly.  

![](add_item_array.png)

## Clear

The **Clear** node will wipe out all data within a connected array, resetting the array and removing all indices within. 

![](Array_Clear.png)

## Contains Item

The **Contains Item** node allows for an array to be searched for a particular item. If the item is found, the node will output True, if not, False. It does not return the index at which the item was found.

![](Array_Contains.png)

## Filter Array

The **Filter Array** node takes in an array of type Actor (or any derivative thereof) and filters it based on an incoming Class. The result is a new array, only containing those items from the original array that matched the type of the connected class. 

![](Array_Filter.png)

## Find Item

The **Find Item** node takes in an array and a variable, then finds the index number of the first time the value of that variable is found within the array.

![](Array_FindItem.png)

## Get

The **Get** node takes in an array and an integer, which it uses as an index number. It then returns the array value found at that index number.

![](Array_Get.png)

## Insert Item

**Insert Item** takes in an array, a variable value, and an integer (index number). It then inserts the value of the variable into the array at the index value location.

![](Array_Insert.png)

## Last Index

The **Last Index** node returns the index number for the last value in an array.

![](Array_LastIndex.png)

## Length

**Length** returns the size, or number of items in the array. If there are **N** objects in the array, **Length** will return **N** and the array will have valid indices from **0** to **N-1**.

![](Array_Length.png)

## Remove Index

The **Remove Index** node removes an item within the array via that item's index number. All remaining index numbers will update to close the gap.

![](Array_RemoveIndex.png)

## Remove Item

**Remove Item** will remove an item from the array by taking in a variable value. If that value is found within the array, it is removed. All remaining index numbers will update to close the gap. This node has a Boolean output which returns True if the item was found and removed.

![](Array_RemoveItem.png)

## Resize
The **Resize** node takes in an array and an integer for the new size of the array. If the resized array is smaller than the original, all elements that do not fit in the resized array are dropped. If the resized array is larger than the original, 
empty elements are added to the end of the array.   

![](resize_array.png)

## Set Array Elem

Set **Array Elem**(ent) allows you to set a specific index of an array to a given value. 

![](Array_SetArrayElem.png)
