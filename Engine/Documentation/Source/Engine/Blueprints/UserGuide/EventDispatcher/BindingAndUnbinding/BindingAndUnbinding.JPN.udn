INTSourceChangelist:2688200
Availability:Public
Title:イベントの追加と削除
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/UserGuide, Engine/Blueprints/UserGuide/EventDispatcher
Description:イベント ディスパッチャーのイベントリストからイベントを追加および削除する方法
version:4.9

[TOC(start:2 end:3)]

![](bind_node.png)

[EXCERPT:Intro]
イベントが接続されていない状態でイベント ディスパッチャーを呼び出しても何の影響もありません。各イベント ディスパッチャーには、関連付いたイベント リストがあると考えてください。イベント リストへイベントを追加するには **Bind Event** ノードを使用します。
リストからイベントを削除するには **Unbind Event** ノードを使用します。**Unbind All Events** ノードで、現時点でイベントディスパッチャーと接続している全イベントを非接続にすることも可能です。  
[/EXCERPT:Intro]
それぞれのイベントは、たとえ **Bind Event** ノードが複数回実行したとしても一度のみ接続できます。また Blueprint クラスと Level ブループリントにあるイベントは、双方のイベントが同じイベントリストへ追加されるため、
**Unbind All Events** ノードが Blueprint クラスと Level ブループリントの両方に存在するイベントを非接続にします。  

* _Blueprint クラスで実行される **Unbind All Events** ノードは、クラスの全インスタンスに対し Blueprint クラス と Level ブループリントの両方に存在するイベントを非接続にします。
* Level ブループリントで実行される **Unbind All Events** ノードは、Blueprint クラスと Level ブループリントの両方に存在するイベントを非接続にしますが、これは単に与えられた **Target** に対応するためです。

## Bind、 Unbind、Unbind All ノードを作成

**Bind Event** 、**Unbind Event**、また **Unbind All Events** ノードの作成処理は非常に良く似ています。**Bind Event** ノードを作成するステップは以下の通りです。 
ただし、**Unbind Event** と **Unbind All Events** ノードについては、正しいステップで然るべきメニュー項目を選択すれば作成できます。


### Blueprint クラスで作成

1. **[My Blueprint]** タブでイベント ディスパッチャー名をドラッグして作業しているグラフへドロップします。 

1. 表示されるメニューから **[Bind (バインド)]** を選択します。

	![](dispatcher_bind_menu.png)

**または以下を行います。**

1. グラフを **右クリック** します。

1. コンテキスト メニューが表示されたら、**[Event Dispatcher (イベント ディスパッチャー)]** を展開します。

	![](event_dispatcher_context.png)

1. **イベント ディスパッチャー** の **[Bind Event to EventDispacherName (イベントを [イベントディスパッチャー名へバインド)]** を選択します。

	![](event_dispatcher_context_bind.png)


### Level ブループリントで作成

1. イベントディスパッチャーを呼ぶレベルのアクタへ [リファレンスを追加](Engine/Blueprints/UserGuide/Types/LevelBlueprint#アクタを参照する) します。

	![](target_step1.png)

1. リファレンス ノードの出力ピンをドラッグして、コンテキスト メニューを表示するためにリリースします。

	![](empty_context_menu.png)

1. コンテキス トメニューで **[Event Dispatcher (イベントディスパッチャー)] から [Bind Event to EventDispatcherName (イベントを [イベントディスパッチャー名] へバインド)]** へ移動します。「Bind EventName (イベント名をバインド)」で検索すると正しい入力値が呼び出されます。

	![](bind_node_level.png)

	アクタのリファレンスが既に **Target** ピンにつなげられた状態で **Call** ノードが表示されます。

	![](bind_dispatcher_wired_level.png)

