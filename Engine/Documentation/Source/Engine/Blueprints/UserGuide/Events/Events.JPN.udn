Availability:Public
Title:イベント
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/Scripting
Description:イベントグラフ内の個々のネットワークの実行を開始するためにゲームプレイ コードから呼び出されるノード
version:4.9
Parent:Engine/Blueprints/Scripting
tags:Execution Flow
tags:Blueprints
tags:Special Nodes
topic-image:Engine\Blueprints\UserGuide\Events.png

[TOC (start:2)]

[EXCERPT:Intro]
**イベント** は、**イベントグラフ** 内の個々のネットワークの実行を開始するために 
ゲームプレイ コードから呼び出されるノードです。これらにより、ブループリントは、 
ゲームの開始、レベルのリセット、ダメージなどのゲーム内で生じる一定のイベントに反応して 
一連のアクションを実行できるようになります。新規機能を実装したり、デフォルト機能をオーバーライドあるいは補強するために、 
これらのイベントにはブループリント内でアクセスすることができます。1 つの **イベントグラフ** の中で好きなだけ **イベント** を使うことができます。 
ただし、それぞれの種類から 1 つずつしか使用できません。
[/EXCERPT:Intro]

![Blueprint Class Events Expanded](EventsExpanded.png) ![Level Blueprint Events Expanded](LevelBPEventsExpanded.png)

[REGION:note]
	1 つのイベントが実行できるオブジェクトは 1 つです。1 つのイベントから複数のアクションをトリガーしたい場合、 
	それらをまとめて線形に並べる必要があります。
[/REGION]

[REGION:note]
マチネを使ってシネマティック シーケンスの再生中に指定回数トリガーされるイベントを作成する情報は、 [](Engine/Matinee\UserGuide\BlueprintComponents) でご覧いただけます。
[/REGION]

[COMMENT:none]


[EXCERPT:LevelBPOnly]
[REGION:note]
この Blueprint Event ノードは Level ブループリントのみで使用できます。
[/REGION]
[/EXCERPT:LevelBPOnly]

[EXCERPT:ServerOnly]
[REGION:note]
この Blueprint Event ノードはサーバー上でのみ実行します。シングル プレイヤー ゲームの場合、クライアントがサーバーと見なされます。
[/REGION]
[/EXCERPT:ServerOnly]


[/COMMENT]

##イベント レベルのリセット

[INCLUDE:#levelbponly]

[INCLUDE:#ServerOnly]

![LevelReset.png](LevelReset.png)

**LevelReset** イベントはレベルの再起動時に実行シグナルを送ります。プレイヤーが消滅するとレベルをリロードする必要がないようなゲームの状態など、 
レベルがリロードされると 
何かをトリガーする必要のある場合に便利です。

![LevelReset_Example.png](LevelReset_Example.png)(w:500)


## Event Actor Begin Overlap
[EXCERPT:EventBeginOverlap]
![](BeginOverlap.png)

いくつもの条件が同時に一致すると、このイベントが実行されます。

* アクタ間のコリジョン反応がオーバーラップできること。
* イベントを実行するアクタは両方とも **Generate Overlap Events** が true に設定されていること。
* 最後に、両方のアクタのコリジョンがオーバーラップを開始します。一緒に動くか、一方が他方にオーバーラップするように作成されます。

コリジョンの詳細については、[コリジョン反応](Engine\Physics\Collision) をご覧ください。

![](BeginOverlapEX.png)

_このブループリント アクタが Player Actor 変数に格納されているアクタとオーバーラップすると、整数型のカウンタ変数をインクリメントします。_

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **Other Actor** | Actor - このブループリントにオーバーラップするアクタです。 |
[/EXCERPT:EventBeginOverlap]

## Event Actor End Overlap
[EXCERPT:EventEndOverlap]
![](EndOverlap.png)

いくつもの条件が同時に一致すると、このイベントが実行されます。

* アクタ間のコリジョン反応がオーバーラップできること。
* イベントを実行するアクタは両方とも **Generate Overlap Events** が true に設定されていること。
* そして、両方のアクタのコリジョンがバラバラに動くか、一方が破壊されて、オーバーラップを停止すること。

コリジョンの詳細については、[コリジョン反応](Engine\Physics\Collision) をご覧ください。

![](EndOverlapEX.png)

_このブループリント アクタが Player Actor 変数に格納されているアクタ以外のアクタとのオーバーラップを停止すると、オーバーラップされていた側のアクタを破壊します。_

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **Other Actor** | Actor - このブループリントにオーバーラップするアクタです。 |
[/EXCERPT:EventEndOverlap]

## Event Hit

![](EventHit.png)

このイベントは、コリジョンに関わアクタの片方のコリジョン設定の **Simulation Generates Hit Events** が true である限り実行されます。 

[REGION:note]
Sweeps を使って移動する場合、フラグを選択していなくてもこのイベントを使います。Sweep がブロックしているオブジェクトを通り過ぎないようにしている限り、そのようになります。
[/REGION]

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **My Comp** | PrimitiveComponent - ヒットされた実行中のアクタ上のコンポーネント。 |
| **Other** | Actor - コリジョンに関わるもう一方のアクタ。 |
| **Other Comp** | PrimitiveComponent - ヒットされたコリジョンに関わるもう一方のアクタ上のコンポーネント。 |
| **Self Moved** | Boolean - 別のオブジェクトの移動からヒットを受けた際に使用し (false の場合)、Hit Normal と Hit Impact を調整して、ヒット対象となったオブジェクトに対するもう一方のオブジェクトからの力を示します。 |
| **Hit Location** | Vector - 衝突する 2 つのアクタ間のコンタクト位置。 |
| **Hit Normal** | Vector - コリジョンの方向です。 |
| **Normal Impulse** | Vector - アクタが衝突する力。 |
| **Hit** | Struct Hit 内に収集されたすべてのデータである HitResult を引っ張り出し、この結果を「細分化して」個々のデータへのアクセスすることができます。 |

![](EventHitEX.png)

_このサンプルでは、ブループリントが **Hit** を実行すると、影響のポイントで爆発のエフェクトをスポーンします。_

## Event Any Damage

[INCLUDE:#ServerOnly]

![](AnyDamage.png)

このイベントは、一般的なダメージを与えるべき時にパスされます。ポイント ダメージやラジアル ダメージとは全く違う、水死や環境的なダメージなどです。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **Damage** | Float - アクタへ渡されているダメージの量です。 |
| **Damage Type** | Object 'DamageType - 与えられているダメージ上に追加データを含むオブジェクトです。 |
| **Instigated By** | Actor - ダメージを仕掛けるアクタです。ダメージを与えるために銃を発砲したり手榴弾を投げたりするアクタになります。 |
| **Damage Causer** | Actor - ダメージを引き起こすアクタです。弾丸や爆発などがこれにあたります。|

[REGION:lightbox]
[![](AnyDamageEX.png)(w:940)](AnyDamageEX.png)
[/REGION]

_アクタに与えられているダメージが水から発生した場合、ヘルス値が減算され画面に警告が表示されます。_

## Event Point Damage

[INCLUDE:#ServerOnly]

![](PointDamage.png)

**Point Damage** とは、発射物、即着弾武器、そして近接武器などのことをいいます。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **Damage** | Float - アクタへ渡されているダメージの量です。 |
| **Damage Type** | Object 'DamageType - 与えられているダメージ上に追加データを含むオブジェクトです。 |
| **Hit Location** | Vector - ダメージが適用されている位置です。 |
| **Hit Normal** | Vector - コリジョンの方向です。 |
| **Hit Component** | PrimitiveComponent - ヒットされた実行中のアクタ上のコンポーネントです。 |
| **Bone Name** | Name - 撃たれたボーンの名前です。 |
| **Shot from Direction** | Vector - ダメージが与えられた方向です。 |
| **Instigated By** | Actor - ダメージを仕掛けるアクタです。ダメージを与えるために銃を発砲したり手榴弾を投げたりするアクタになります。 |
| **Damage Causer** | Actor - ダメージを引き起こすアクタです。弾丸や爆発などがこれにあたります。|

[REGION:lightbox]
[![](PointDamageEX.png)(w:940)](PointDamageEX.png)
[/REGION]

_このサンプルでは、ダメージを受けた時、与えられたダメージがアクタのヘルス値から減算されますが、アクタの頭が撃たれた場合、アクタのヘルス値は -1 に設定されます。_

## Event Radial Damage

[INCLUDE:#ServerOnly]

![](RadialDamage.png)

このシーケンスに対する親アクタがラジアル ダメージを受けるたびに **RadiusDamage** アクタが呼び出されます。爆発によるダメージや、間接的に引き起こされたダメージに合わせてイベント処理する場合に便利です。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **Damage** | Float - イベントから受け取ったダメージの量です。 |
| **Damage Type** | Object 'DamageType - 与えられているダメージ上に追加データを含むオブジェクトです。 |
| **Origin** | Vector - もともとダメージがあった 3D 空間における位置を与えます。 |
| **Hit Info** | Struct HitResult - Hit 内に収集されたすべてのデータです。この結果を「細分化して」個々のデータへのアクセスすることができます。 |
| **Instigated By** | Controller - ダメージを仕掛けるコントローラー (AI またはプレイヤー) です。 |
| **Damage Causer** | Actor - ダメージを引き起こすアクタです。弾丸、ロケット、レーザー、相手にパンチするキャラクターなどがこれに当たります。|

[REGION:lightbox]
[![](RadialDamageEX.png)(w:940)](RadialDamageEX.png)
[/REGION]

## Event Actor Begin Cursor Over

![](BeginCursorOver.png)

マウス インターフェースを使用中、マウスのカーソルがアクタ上に移動するとこのイベントが実行されます。

![](BeginCursorOverEX.png)

_このアクタの上にマウスを当てると、 Highlight on the Dynamic Material Instance という名前のスカラー パラメータが 1.0 に設定されます。_


## Event Actor End Cursor Over

![](EndCursorOver.png)

マウス インターフェースを使用中にマウスのカーソルがアクタ上から外れると、のイベントが実行されます。

![](EndCursorOverEX.png)

_これにより、アクタは **Target Notification** に格納されるように設定され、ゲーム中は非表示になります。_


## Event Begin Play
[EXCERPT:EventBegin]
![](BeginPlay.png)

ゲームが開始されると、このイベントがすべてのアクタにトリガーされます。ゲーム開始後にスポーンされたすべてのアクタがこのイベントを直ちに呼び出します。

![](BeginPlayEX.png)

_プレイの開始に伴い、アクタはヘルス値を 1000 に、スコアを 0 に設定します。_
[/EXCERPT:EventBegin]

## Event End Play
[EXCERPT:EventEnd]
![](EndPlay.png)

アクタが破壊されると実行されるイベントです。

![](EndPlayEX.png)

_アクタがワールドから消えると、 String が出力され、イベントの呼び出し理由が表示されます。_

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **End Play Reason** | enum EEndPlayReason - Event End Play の呼び出し理由を表示する列挙型変数です。 |
[/EXCERPT:EventEnd]

## Event Destroyed

![](Destroyed.png)

アクタが破壊されると実行されるイベントです。

![](DestroyedEX.png)

_このサンプルは、**Score** の変数が **Value** プラス **Score** に設定されています。_

[REGION:warning]
	破壊されたイベントについては、今後のリリースノートで言及します！Destroyed 関数の機能は Endplay 関数に組み込まれています。
[/REGION]

## Event Tick
[EXCERPT:EventTick]
![](Tick.png)

ゲームプレイのフレームごとに呼び出される単純なイベントです。 

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **Delta Seconds** | Float - フレーム間の合計時間を出力します。 |

[![](TickEX.png)(w:940)](TickEX.png)

_このサンプルでは、Delta Seconds を使って「発射！」直前のティックでログに表示するカウントダウン タイマーを作ります。_
[/EXCERPT:EventTick]

## Event Receive Draw HUD

[REGION:note]
このイベントは、HUD クラスから派生する Blueprint クラスのみで利用できます。
[/REGION]

![](DrawHud.png)

このイベントは、ブループリントが HUD に描画できるようにするための指定イベントです。 HUD 描画ノードからは、このイベントそのものをノード作成用イベントにするように要求されます。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]出力ピン[/REGION] ||
| **Size X** | Int - レンダリング ウィンドウの幅 (ピクセル数)。 |
| **Size X** | Int - レンダリング ウィンドウの高さ (ピクセル数)。 |


[REGION:lightbox]
[![](DrawHudEX.png)(w:940)](DrawHudEX.png)
[/REGION]

_このイベントは、レンダリング ウィンドウの中央に、クリック可能な **ヒット ボックス** を作成します。後ろに赤いボックスが表示されます。_


## Custom Event

![Custom Event Node](Engine\Blueprints\UserGuide\Events\Custom\name_custom_event.png)

カスタム イベント ノードは専用のワークフローを持つ特殊なノードです。詳しくは [**Custom Event ノード**](Engine\Blueprints\UserGuide\Events\Custom) をご覧ください。
