Availability:Public
Title:Graphs
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/UserGuide
Description:Node graph that uses events and function calls to perform actions in response to events associated with the Blueprint.
version: 4.9
Parent:Engine/Blueprints/Anatomy
Tags:Graphs
tags:Blueprints
topic-image:Engine/Blueprints/UserGuide/graph_topic.png

[EXCERPT:GraphIntro]
A **Graph** is a network of nodes that can be connected to one another in order to define the flow of execution for the network. Graphs are the basis for implementing functionality in Blueprints. 
Each Blueprint can contain one or more graphs, depending on the type of Blueprint, that define the implementation of a particular aspect of the Blueprint. Each graph within a Blueprint can also 
contain sub-graphs, which are essentially collections of nodes collapsed into their own separate graph, mainly for organizational purposes. There are specialized types of Graphs that have unique 
properties, but the key principles of adding variable references, adding and connecting Nodes, and debugging will apply throughout.
[/EXCERPT:GraphIntro]


##Graph Types

###Event Graphs

![](Engine/Blueprints/UserGuide/EventGraph/eventgraph_topic.png)(w:300)

**Event Graphs** are the most general type of Blueprint graph.  Each new Blueprint Class will contain one Event Graph when it is created, although more can be added.  These additional Event Graphs can
help to organize your Blueprint networks.  Event Graphs generally contain the networks for the gameplay behavior of the Blueprint, with [Events](Engine/Blueprints/UserGuide/Events), 
[CustomEvents](Engine/Blueprints/UserGuide/Events/Custom), and **Input** nodes serving to initiate the flow of execution through the Event Graph.

For more information about this section, see [](Engine/Blueprints/UserGuide/EventGraph)

###Construction Script

![%Engine/Blueprints/UserGuide/UserConstructionScript:title%](Engine/Blueprints/UserGuide/UserConstructionScript/ucs_topic.png)(w:300)

**Construction Scripts** are unique to Blueprint Classes, with only one ConstructionScript graph present in each Blueprint Class.  Construction Scripts are useful for Blueprint Class initialization,
as they run right after the **Components** list is set up for the Blueprint Class.

For more information about this section, see [](Engine/Blueprints/UserGuide/UserConstructionScript)

###Functions

![%Engine/Blueprints/UserGuide/Functions:title%](Engine/Blueprints/UserGuide/Functions/function_topic.png)(w:300)

[INCLUDE:Engine/Blueprints/UserGuide/Functions#Intro]

For more information about this section, see [%Engine/Blueprints/UserGuide/Functions:title%](Engine/Blueprints/UserGuide/Functions)

###Macros

![](Engine/Blueprints/UserGuide/macro_topic_2.png)(w:300)

[INCLUDE:Engine/Blueprints/UserGuide/Macros#Intro]

For more information about this section, see [%Engine/Blueprints/UserGuide/Macros:title%](Engine/Blueprints/UserGuide/Macros)

## Working with Graphs

Whether your Graph is a Construction Script, EventGraph, Function, or Macro, you will edit it in the [Graph](Engine/Blueprints/Editor/UIBreakdowns/ClassBPUI) mode of the [](Engine/Blueprints/Editor). Fundamentally,
all Graphs contain networks of Nodes connected by Wires.



