INTSourceChangelist:3489715
Availability:Public
Title:Intersection
Description:2 つの Set の共通部分を取り、それを Resultant Set に割り当てる
Crumbs:%ROOT%
Parent:Engine/Blueprints/UserGuide/Sets/SetNodes
order:6
Version:4.15
Tags:Blueprints
Type:reference

[TOC(start:1 end:2)]

![](Set_IntersectionNode.png)

**Intersection** ノードは 2 つの Set に含まれるアイテムの交通部分を取り、その差を Resultant Set に割り当てて、Set A に含まれていて Set B にも含まれているアイテムが入るようにします。 
Set A と Set B の共通部分を図で表すと以下のようになります。この場合、Set A と Set B の共通部分は両方の Set に共通するアイテムのみ含まれます。

[REGION:raw]
![](Set_IntersectionDiagram.png)
[/REGION]

解説しやすいように、それぞれ以下のように定義される Set A と Set B という 2 つのストリング型があるとしましょう。

	Set A = {"Item 1", "Item 2", "Item 3", "Item 4", "Item 5"}
	Set B = {"Item 4", "Item 5", "Item 6", "Item 7", "Item 8"}

は以下の表は、Set A and Set B の共通部分が含まれる結果を表します (記号で表すと **A &#x2229; B**)。

| --------- | --------- | -------------------------------- |
| **Set A** | **Set B** | **Resultant Set (A &#x2229; B)** |
| `Item 1` | `Item 4`  | `Item 4`                        |
| `Item 2` | `Item 5`  | `Item 5`                        |
| `Item 3` | `Item 6`  |                                  |
| `Item 4` | `Item 7`  |                                  |
| `Item 5` | `Item 8`  |                                  |

[REGION:note]
Set に Empty Set との共通部分を持たせるには、[](Engine/Blueprints/UserGuide/Sets/SetNodes/Clear) ノードを使います。
[/REGION]

##入力

| ピンの位置                    | 名前        | 説明                |
| ------------------------------- | ----------- | --------------------------- |
| ![](Set_IntersectionNode_1.png) |  (In) Exec  | 入力実行ピンです。                       |
| ![](Set_IntersectionNode_2.png) |  A          | 共通部分をなす一方の Set です。       |
| ![](Set_IntersectionNode_3.png) |  B          | 共通部分をなすもう一方の Set です。 |

##出力

| ピンの位置                    | 名前        | 説明                                    |
| ------------------------------- | ----------- | ---------------------------------------------- |
| ![](Set_IntersectionNode_4.png) | (Out) Exec | 出力実行ピンです。 |
| ![](Set_IntersectionNode_5.png) |  Result     | 共通部分の結果を含む Set です。 |

##使用例

![](Set_IntersectionUsage.png)

####補足説明

この演算を記号で表すと A &#x2229; B = { x | x &isin; A  &and;  x &isin; B } となり、このノードは、Set A のエレメントと Set B のエレメントの間で論理 AND 演算を実行します。