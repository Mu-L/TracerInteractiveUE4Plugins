Availability:Public
Title:Physics Components
Crumbs:%ROOT%, Engine, Engine/Components
Description:Components that are used with Physics are explained including Destructible, Thruster or Force Components to name a few. 
Related: Engine/Physics
Related: Engine/Physics/Constraints/ConstraintsBlueprints
Related: Resources/ContentExamples/Physics
Related: Resources/ContentExamples/Destructables
Related: Engine/Blueprints/UserGuide/Components
SkillLevel: Beginner
Version: 4.9

The Physics Components are used to affect any objects that are utilizing physics in your level in varying ways. 

## Destructible Component

The **DestructibleComponent** holds the physics data for a Destructible Actor. When adding this component as a sub-object, you must specify the **Destructible Mesh** asset to use. You can also override and specify the **Fracture Effects** instead of using the asset's Fracture Effects if you wish. 

An example of using this type of component would be in the form of a window frame and window, where the window frame is a **StaticMeshComponent** and the window is a **DestructibleComponent** that a player could shoot out causing it to fracture into pieces. 

![](destructible_mesh.png)(w:400)

## Physics Constraint Component

A **PhysicsConstraintComponent** is a joint that allows you to connect two rigid bodies together. You can create different types of joints using the various parameters of this Component. 

By using a **PhysicsConstraintComponent** and two **StaticMeshComponents**, you can create dangling type objects such as a tire swing, heavy bag or sign that reacts to physics in the world allowing players to interact with the Component (see **[](Engine/Physics/Constraints/ConstraintsBlueprints)** for an example in **Blueprints**). 

![](constraint.png)(w:400)

## Physics Handle Component

The **PhysicsHandleComponent** is an object for "grabbing" and moving physics objects around while allowing the object you are grabbing to continue to use physics. An example of this could be in the form of a "gravity gun" where you can pick-up and drop physics objects (see the [**Physics Content Examples**](Resources/ContentExamples/Physics) for more information).

![](handle.png)(w:400)

## Physics Thruster Component

A **PhysicsThrusterComponent** is used with objects that have physics to apply a specified force down the negative-X direction (i.e. point X in the direction you want to thrust in). The thruster uses continuous force and can be auto-activated, activated or deactivated through script. 

An example of using a thruster is in the form of a rocket (pictured below) which continuously applies force propelling the rocket upward (since the thruster is positioned under the rocket). You can contain movement of the Component that is influenced by a thruster by using **Blocking Volumes**.  

![](thruster.png)(w:800)

## Radial Force Component

The **RadialForceComponent** is used to emit a radial force or impulse that can affect physics objects and or destructible objects. Unlike a **PhysicsThrusterComponent**, this type of Component applies "fire-and-forget" type of force and is not continuous. 

You can use this type of Component to push the fractured pieces of a destroyed object, for example an explosion. Using a **RadialForceComponent** to specify the force and direction, when an object is destroyed you can "push" the pieces outwards in a particular direction as seen in the example image below (see the [**Destructibles Content Examples**](Resources/ContentExamples/Destructables) for more information). 

![](radial_force.png)(w:600)








