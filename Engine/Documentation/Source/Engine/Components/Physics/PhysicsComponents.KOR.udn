INTSourceChangelist:3108692
Availability:Public
Title:피직스 컴포넌트
Crumbs:%ROOT%, Engine, Engine/Components
Description:피직스와 함께 사용되는 컴포넌트에 대한 설명으로, 몇 가지 예를 들면 Destructible, Thruster, Force 컴포넌트 등입니다.
Related: Engine/Physics
Related: Engine/Physics/Constraints/ConstraintsBlueprints
Related: Resources/ContentExamples/Physics
Related: Resources/ContentExamples/Destructables
Related: Engine/Blueprints/UserGuide/Components
SkillLevel: Beginner
Version: 4.9

Physics 컴포넌트는 레벨에서 피직스를 활용하는 오브젝트에 여러가지 방식으로 영향을 끼치는 데 사용됩니다.

## 디스트럭터블 컴포넌트

**DestructibleComponent** 에는 디스트럭터블 액터에 대한 피직스 데이터가 저장됩니다. 이 컴포넌트를 서브 오브젝트로 추가하면, 사용할 **디스트럭터블 메시** 애셋을 지정해야 합니다. 원한다면 애셋의 프랙처 이펙트를 사용하는 대신 직접 **프랙처 이펙트** 를 지정하여 덮어쓸 수 있습니다.

이러한 유형의 컴포넌트를 사용한 예제는 창틀과 창의 형태인데, 창틀은 **StaticMeshComponent** 이고 창은 **DestructibleComponent** 로 하여 플레이어가 총을 쏘면 산산조각나도록 합니다.

![](destructible_mesh.png)(w:400)

## 피직스 컨스트레인트 컴포넌트

**PhysicsConstraintComponent** 는 두 개의 리짓 바디를 결합시킬 수 있는 관절입니다. 이 컴포넌트의 다양한 파라미터를 사용하여 여러가지 관절을 만들 수 있습니다.

하나의 **PhysicsConstraintComponent** 와 두 개의 **StaticMeshComponent** 를 사용하여 월드에 물리 반응하는 스윙 타이어, 무거운 가방, 사인 등 대롱거리는 유형의 오브젝트를 만들어 플레이어가 컴포넌트와 상호작용하도록 할 수 있습니다 ([](Engine/Physics/Constraints/ConstraintsBlueprints) 에서 **블루프린트** 로 된 예제를 확인해 보세요).

![](constraint.png)(w:400)

## 피직스 핸들 컴포넌트

**PhysicsHandleComponent** 는 피직스 오브젝트를 잡아 움직이기 위한 오브젝트로, 잡은 오브젝트에는 계속해서 피직스가 적용됩니다. 이에 대한 예제로 피직스 오브젝트를 줍고 버릴 수 있는 "중력 총" 형태를 들 수 있습니다 (자세한 정보는 [피직스 콘텐츠 예제](Resources/ContentExamples/Physics) 를 참고하세요).

![](handle.png)(w:400)

## 피직스 쓰러스터 컴포넌트

**PhysicsThrusterComponent** 는 피직스 오브젝트에 음수 X 방향(, X 는 추친력을 가하려는 방향)으로 지정된 힘을 가하는 데 사용됩니다. 쓰러스터에는 지속적인 힘이 사용되며, 스크립트를 통해 자동 활성화 내지 활성화/비활성화 가능합니다.

쓰러스터의 사용 예는 (아래 그림과 같은) 로켓 형태에서 로켓에 상향 추진력을 지속적으로 가하는 것입니다 (쓰러스터 위치가 로켓 아래쪽에 있기 때문입니다). **Blocking Volume** 을 사용하여 쓰러스터에 영향받는 컴포넌트의 이동을 포함시킬 수 있습니다.

![](thruster.png)(w:800)

## 래디얼 포스 컴포넌트

**RadialForceComponent** 는 피직스 오브젝트 및/또는 디스트럭터블 오브젝트에 영향을 끼칠 수 있는 방사형 힘 또는 충격을 내뿜는 데 사용됩니다. **PhysicsThrusterComponent** 와는 달리, 이러한 유형의 컴포넌트는 "발사 후 잊어도 되는" 유형의 포스를 적용하며, 지속적이지 않습니다.

폭발 등으로 인해 파괴된 오브젝트의 조각난 부분을 밀어내는 데 이러한 유형의 컴포넌트를 사용하면 됩니다. **RadialForceComponent** 를 사용하여 힘과 방향을 지정하고, 오브젝트가 파괴되면 아래 예제 그림에서 보는 것처럼 파편을 특정 방향으로 밀어버릴 수 있습니다 (자세한 정보는 [](Resources/ContentExamples/Destructables) 문서 참고). 

![](radial_force.png)(w:600)








