INTSourceChangelist:3351045
Availability:Public
Title:Utility コンポーネント
Crumbs:
Description:ユーティリティ ベースのコンポーネントとその使用方法について説明します。 
Related:Engine/Blueprints/UserGuide/Components
parent:Engine/Components
order:
tags:Components
type:overview
SkillLevel:Beginner
Version:4.14

[TOC (start:1 end:4)]

## ApplicationLifecycle コンポーネント

**ApplicationLifecycle コンポーネント** は、アプリケーションのステート (起動、停止、終了など) について OS (オペレーティング システム) から通知を受け取る処理をします。 

## Platform Events コンポーネント

**PlatformEvent コンポーネント** はプラットフォーム固有の OS 情報やイベントに基づきイベントをポーリングし、受け取る機能があります。現在、このコンポーネントはコンバーチブル ノートパソコンをサポートし、プラットフォームがコンバーチブル ノートパソコンかどうかの情報とそのステート (ノートパソコン モードかタブレット モード) を示します。こうした関数を絶えずポーリングせずにプラットフォームがステートを変更したかを知るために、ステート変更があった場合にコード (またはブループリント) を通知する目的でバインドできるデリゲートもあります。

## Child Actor コンポーネント

**ChildActor コンポーネント** は、登録時にアクタをスポーンして、登録削除時にアクタを破壊するコンポーネントです。

ChildActor コンポーネントは、C++ クラスまたは Blueprint アセットを与えてスポーンされるアクタを指定します。クラスまたはアセットを選択すると、**Child Actor Template** 入力フィールドが表示されます。この入力フィールドを展開して、ブループリントで宣言されているパブリック変数を含む、指定された子アクタやそのコンポーネントのエクスポーズされ、編集可能な入力フィールドを編集することができます。

![](ChildActorTemplate.png)

##Scene コンポーネント

**Scene コンポーネント** はトランスフォームを持ち、アタッチメント機能をサポートしていますが、レンダリングやコリジョンの機能はありません。他のものをオフセットするために階層で「ダミー」コンポーネントとして役立ちます。または、すべての子コンポーネントがひとつのものであるかのように子コンポーネントとインタラクションするのにも役立ちます。例えば、それらを移動または回転させたり、すべてを可視または不可視にしたり、親子付け解除したりすることができます。Scene コンポーネントを整理ツールとして過度に使用しないことが重要です。それぞれが所有しているアクタをスポーンするために時間とメモリを使うからです。

### Arrow コンポーネント

**Arrow コンポーネント** は、Scene コンポーネントの一種で、ラインで描画される単純な矢印で、向いている方向を表します。Arrow コンポーネントはソケットの位置や方向などのデバッグに特に便利です。ゲーム内のクロス、手持ちまたはアタッチされているオブジェクト、発射物がスポーンされる銃口などで有用です。デフォルトで、こうしたコンポーネントはエディタ内だけで可視になります。インゲームで見たい場合は、Arrow コンポーネントの **[Details]** パネルで `Hidden in Game` チェックボックスのチェックを外してください。

![](HiddenInGame_Checkbox.png)

以下の画像では、Arrow コンポーネントが UE4 のマネキンの index_03_r ボーンにアタッチされています。このボーンは右手の人差し指の末端の関節にあり、2 番めの節に向かってポイントします。キャラクターの指先がどこをポイントしているかを示したい場合はレーザービーム コンポーネントをアタッチします。若干オフセットし、180 度回転するソケットを追加し、アタッチします。レーザー コンポーネントをアタッチする場合、ボーンからオフセットする必要があることを理解してください。

![](ArrowComponent.png)  

## Spline コンポーネント

**Spline コンポーネント** は、レベル内でスプラインを描画します。これは電車、背景のキャラクター、カメラなどの動いているキャラクターのパスを指定する際に特に役立ちます。レベルに配置すると Spline コンポーネントを持つアクタは、近い場所にあるもうひとつのポイントと接続され、コンポーネントの位置でポイントを示します。ラインを右クリックしてその場所に新規ポイントを追加することができます。また、ポイントをクリックして取り除いたり (それが唯一のポイントでない限り)、複製したり、そこからスプラインの次のポイントに続くカーブを変更することができます。複製を使うと、現在のポイントと同じ場所にある新規ポイントを作りますが、ライン上でその後ろにあるとみなされます。スプラインのポイントはレベル内で標準の移動と回転のツールを使って自由に操作することができます。コンポーネントの **[Details]** パネルには `Duration` というフィールドもあります。これは、スプラインをクエリーするための範囲値として機能します。

![](Spline_Duration.png)

スプラインをクエリーするには主に以下の 3 種類の方法があります。 
* ポイント インデックス。この場合、スプラインは長さ方向に沿ってユーザーが配置した任意のポイントの位置や回転などの情報をクエリーすることができます。 
* 距離。この場合、スプラインは設定された距離を移動後、スプラインの回転フォワード ベクターなどの情報をクエリーすることができます。
* 時間。この場合、スプラインの長さはユーザーが入力した `Duration` 値に置き換えられ、任意の" time" 値でスプラインについての距離、位置、回転の情報をクエリーすることができます。この 3 番めの方法はスプラインで定義されるトラックに沿って移動するカメラのような固定オブジェクトの場合に特に便利です。デザイナーやプログラマーは、カメラの位置と回転について、カメラがスプラインに沿ってどれくらいの距離を移動しているかに基づきクエリーすればよいからです。 
duration を 1.0 に設定し補間のアルファ値を指定することでスプラインに沿って簡単に補間またはブレンドすることができます。

次の画像では、Spline コンポーネントを使ってプレイヤーがどこに行くかを示すヒント マーカーを動かしています。

![](SplineComponent.png)  

[REGION:note]
Spline コンポーネントで作成したスプラインは、複数のパスにフォークしたり、ループや孤立したポイントは含みません。スプラインは常に単一のパスであり、各スプライン ポイントは一回だけ含まれます。
[/REGION]