Availability:Public
Title:Releasing Your Project
Crumbs:%ROOT%, Engine, Engine/Deployment
Description:Creating a release versioned project with cooked content for distribution.


Once your game is complete, you can package a release version for distribution. Whether you go through the Project Launcher in the editor or the Project Launcher tab in Unreal Frontend,
the steps are the same for packaging a release-versioned project. However, depending on if you are creating a Windows game and need to create your own installer, shipping a mobile project,
or targeting another platform, the steps you take with the finished packaged content will be different. 

This is an example of packaging a 1.0 release of ShooterGame, aimed at Windows 64-bit, localized in English. 

1. Open the **Project Launcher**, either within Unreal Editor or using Unreal Frontend.

	![](1.png)
1. Create a new Custom Launch Profile using the **+** button.
	
	![](2.png)
1. Set a name and description for your profile. 

There are a number of settings for the release process.

#### Project
1. You can set the specific project to use, or use **Any Project** to patch the current project.

#### Build
1. Set the build configuration to Shipping.
1. Optionally, expand **Advanced Settings** if you need to build UAT as part of the release.

#### Cook
1. Select **By the Book** as the cooking method in the dropdown menu.
1. Check the boxes for all platforms you would like to cook content for. In this example for Windows testing, we have selected **WindowsNoEditor**.
1. Check the boxes for all cultures to cook localizations for.
1. Check the boxes for which maps to cook. 

1. In **Release/DLC/Patching Settings**:
	* Check the **Create a release version of the game for distribution.** checkbox.
	* Enter a version number for this release. 
1. Expand **Advanced Settings** and make sure the following options are enabled, as well as any others you need for your specific project's distribution method:
	* Compress content
	* Save packages without versions
	* Store all content in a single file (UnrealPak)
1. Also under **Advanced Settings**, set the cooker configuration to **Shipping**.

#### Package 
1. Set the build to  **Package & store locally**. 

#### Deploy
1. Set the build to **Do Not Deploy**.

1. Once you have set all the above settings, navigate back to the main profile window using the **Back** button in the top right corner. 
	
	![](9.png)

1. Click on the launch icon next to your **Release** profile. 
	
	![](10.png)
1. The project launcher will go through the building, cooking, and packaging process. This may take some time depending on the complexity of your project.
	
	![](11.png)
1. Once the operation is complete, close the window or click on **Done**. You can test the patch now with the steps below.
	
	![](12.png)

1. Save the asset registry and pak file from `[ProjectName]\Releases\[ReleaseVersion]\[Platform]`. In this example, this is `ShooterGame\Releases\1.0\WindowsNoEditor`.

	[Region:tip]
	The asset registry and pak file will be needed for any future patches or DLC to check against. 
	[/REGION]

1. On Windows, you can test running the project from `[ProjectName]\Saved\StagedBuilds\WindowsNoEditor`.



[REGION:note]
While Steam will allow you to upload full packages of your game and do the updating process for you, using release versions as outlined here is still the recommended practice
when distributing through Steam. This will make the process smoother if you decide to add additional supported platforms or distribution methods later on. 
[/REGION]