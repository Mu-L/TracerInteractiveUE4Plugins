INTSourceChangelist:4284468
Availability: Public
Crumbs: 
Title: 블루프린트를 사용한 에디터 스크립팅
Description: 에디터에서 블루프린트를 사용하여 콘텐츠 제작 작업을 자동화하는 방법을 설명합니다.
Type: 
Version: 4.20
Parent: Engine/Editor/ScriptingAndAutomation
Order: 
Tags: Blueprints, scripting, editor


블루프린트는 프로젝트의 런타임 게임플레이뿐 아니라, 언리얼 에디터 안에서 프로젝트 콘텐츠와 상호작용하는 데도 매우 효과적인 툴이 될 수 있습니다. 에디터에서 요청이 있으면 블루프린트 그래프를 실행할 수 있는데, 이를 가끔 블류틸리티(Blutility, Blueprint Utility 의 줄임)라고 합니다. 이를 통해 애셋 작업, 레벨의 콘텐츠 레이아웃, 심지어 에디터 UI 자체를 제어할 수도 있습니다.

이 글은 블루프린트를 사용하여 언리얼 에디터 스크립트를 만들고 자동화하는 데 관련된 기본 사항을 설명합니다.

## 에디터에서 블루프린트 실행

블루프린트 클래스의 이벤트 그래프에서 Custom Event 노드를 사용할 때면, **디테일** 패널의 **Graph > Call in Editor** (그래프 > 에디터에서 호출) 옵션을 설정하면 됩니다.

![에디터에서 호출](bp-call-in-editor.png "에디터에서 호출")

이런 식으로 레벨에 Custom Event 로 액터를 배치하고, 뷰포트 또는 **월드 아웃라이너** 에서 액터를 선택하면, **디테일** 패널에 설정한 Call in Editor (에디터에서 호출) 이벤트 각각에 대한 버튼이 나타납니다. **Default** (디폴트) 섹션에서 찾을 수 있으며, 블루프린트 클래스가 변수를 노출하는 곳이기도 합니다. 이 버튼을 클릭하면 Custom Event 노드에서 이벤트 그래프 실행을 발동시킬 수 있습니다.

![디테일 패널의 커스텀 이벤트](bp-call-from-level.png "디테일 패널의 커스텀 이벤트")

이는 레벨에 배치할 수 있는 모든 블루프린트 클래스에서 작동합니다. 런타임 게임플레이를 테스트할 때도, 에디터 전용 콘텐츠 관리 툴을 만들 때도 사용할 수 있습니다.

[REGION:note]
Custom Event 에 입력이 많은 경우, **디테일** 패널에 표시되지 않습니다.
[/REGION]

## 에디터 전용 기능 사용

언리얼 에디터 UI 작업이나 애셋 파일 변경과 관련된 대부분의 작업은 게임 실행시간에 작동하지 않습니다. 따라서 에디터 전용인 블루프린트 클래스에서만 에디터 전용 기능, 즉 모듈에 유형이 `Editor` 로 설정된 함수에 액세스할 수 있습니다.

예를 들어 실행시간에 사용할 수 있는 부모 클래스, 예를 들어 베이스 **Actor** 클래스에서 파생된 블루프린트 클래스를 사용하는 경우, 블루프린트 에디터의 **Editor Scripting** (에디터 스크립팅) 카테고리 아래 함수가 제한된 세트만 나열된 것이 보일 것입니다. 하지만 **PlacedEditorUtilityBase** 처럼 에디터 전용 부모 클래스에서 파생된 클래스를 사용하면, 훨씬 더 광범위하고 포괄적인 함수 세트가 보일 것입니다.

![에디터 스크립팅 블루프린트 노드](bp-editor-scripting-nodes.png "에디터 스크립팅 블루프린트 노드")

[REGION:tip]
Editor Scripting Utilities (에디터 스크립팅 유틸리티) 플러그인을 설치했다면 여기에 스태틱 메시와 다른 애셋 유형 작업을 위한 함수가 노출된 것이 보일 것입니다. [에디터 자동화와 스크립팅](https://docs.unrealengine.com/en-us/Editor/Scripting-and-Automating-the-Editor) 문서를 참고하세요.
[/REGION]

## 블류틸리티 클래스와 블류틸리티 셸프

[REGION:note]
블류틸리티(Blutility) 클래스와 블류틸리티 셸프(shelf)는 현지 실험단계입니다. 모든 실험단계 기능이 그렇듯 제작 단계에서 사용할 때는 주의를 요합니다. 언리얼 엔진 이후 버전에서 변경될 수 있습니다.
[/REGION]

언리얼 에디터와 애셋 작업을 자동화하기 위해 블루프린트를 작성할 때, 특정 레벨에 종속되지 않도록 그래프를 작성해야 합니다. 종속된 경우, 단순히 Call in Editor 이벤트를 호출을 위해 항상 레벨에 블루프린트 클래스 인스턴스를 끌어 놓지 않는 것이 좋습니다.

그런 상황을 위해 언리얼 에디터에는 커스텀 패널이나 애셋 브라우저에서 바로 호출할 수 있는 에디터 전용 블루프린트 유틸리티 클래스를 생성하고 관리하는 실험단계 시스템이 있습니다.

시작하는 방법은 다음과 같습니다.

1.  에디터 개인설정 창을 열고, **일반 > 실험단계** 카테고리를 찾습니다. **Tools** (툴) 아래 **Editor Utility Blueprints (Blutility)** (에디터 유틸리티 블루프린트 (블류틸리티)) 옵션을 체크합니다.  
    ![에디터 유틸리티 블루프린트 활성화](bp-experimental-blutility.png "에디터 유틸리티 블루프린트 활성화")
2.  Blutility (블류틸리티) 클래스를 새로 만듭니다. 콘텐츠 브라우저에서, 새 유틸리티 클래스를 만들려는 폴더에 우클릭하고, 컨텍스트 메뉴에서 **Blueprints > Blutility** (블루프린트 > 블류틸리티)를 선택합니다.  
    ![새 블류틸리티 생성](bp-blutility-menu.png "새 블류틸리티 생성")
3.  `GlobalEditorUtilityBase` 를 부모 클래스로 선택하고 **Select** (선택)을 클릭합니다.  
    ![GlobalEditorUtilityBase 부모 클래스](bp-global-editor-utility-base.png "GlobalEditorUtilityBase 부모 클래스")  
    
4.  새 클래스의 블루프린트 그래프를 편집하려면 우클릭하고 컨텍스트 메뉴에서 **Edit Blueprint** (블루프린트 편집)을 선택합니다.
5.  이벤트 그래프에서 위 섹션과 같이 Custom Event (커스텀 이벤트)를 새로 만들고 그 **Call in Editor** (에디터에서 호출) 세팅을 활성화합니다. 블루프린트를 저장하고 컴파일합니다.
6.  콘텐츠 브라우저에서 블루프린트 클래스를 더블클릭하면, Call in Editor 이벤트를 모두 나열하는 새 창이 열립니다.  
    ![Blutility 이벤트](bp-open-blutility.png "Blutility 이벤트")

[REGION:tip]
**Blutility Shelf** (블류틸리티 셸프) 패널에서도 생성한 모든 Blutility 클래스에 액세스할 수 있습니다. 이 패널은 메인 메뉴에서 **Window > Blutility Shelf** (창 > 블류틸리티 셸프)로 열 수 있습니다.

![블류틸리티 셸프](bp-blutility-shelf.png "블류틸리티 셸프")
[/REGION]