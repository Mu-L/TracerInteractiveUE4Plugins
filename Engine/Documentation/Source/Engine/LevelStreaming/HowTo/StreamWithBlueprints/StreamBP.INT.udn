Availability: Public
Title:Load and Unload Levels with Blueprints
Crumbs:%ROOT%, Engine, Engine/UI/LevelEditor
Description:How to stream levels with a custom streaming Actor created with Blueprints
parent:Engine/LevelStreaming/HowTo
type:how-to
order:2
tags:Level Streaming

[TOC]

[INCLUDE:Engine/LevelStreaming/HowTo#levelstreamscenario]


## Streaming In Levels with Blueprints

1. Open the **Content Browser** and create a new **Blueprint Class**. This class is going to be based on **Actor**.

1. Name the new **Blueprint Class** "LevelStreamer", then save it.

1. Open **LevelStreamer** in the **Blueprint Editor**. 

For this scenario, we want to stream the second level in once the **Character** overlaps the Box Component. 

1. Add a **Box Collision** Component using the **Add Component** button in the **Components** tab. 

1. Open the Blueprint's **Event Graph**. Select the **Box** Component in the **Components** tab, then **right-click** in the graph to summon the context menu.

1. Type "begin overlap" then select **On Component Begin Overlap** to add the event. 

1. Click and drag off of the **Other Actor** pin, then type "=" into the context menu's search. Select the **Equal (Object)** entry to add the node. 

1. Click and drag off of the second Object pin on the **==** node, then type "character" into the context menu's search. Select the **Get Player Character** entry to add the node.  

1. Hold down the **B** key and click in the graph to add a **Branch** node, then connect the boolean pin of the **==** node to the input on the **Branch** node. 

1. Connect the execution output pin of the **OnComponentBeginOverlap** node to the execution input pin of the **Branch** node. 

1. **Right-click** in the graph, then type "level" to search in the context menu. Select **Load Stream Level** from the menu. 

1. **Right-click** on the **Level Name** pin and promote it to a variable, then name the variable "LevelToStream" and make it **Editable** in the **Details** panel.  
	
	![](LevelToStreamVar.png)

1. Toggle **Make Visible After Load** and **Should Block on Load** to true on the **Load Stream Level** node.

	For this example, we are going to have the same default loading behavior for all levels using this Blueprint, but you could also make those **Editable** variables.

1. Connect the **True** execution output pin of the **Branch** node to the input execution pin on the **Load Stream Level** node. 

	![](FinalLoadBP.png)

1. Place your **LevelStreamer** Blueprint into your level, and adjust the placement and scale until it encompasses the part of the persistent world you want your **Character** to be 
in to begin streaming, as well as the entire walkable volume where the streaming level will be.

1. Enter **SunTemple_Streaming** as the **Level to Stream**. 

1. Use Play In Editor to test out your streaming level.

## Unloading Levels with Blueprints

To unload the level as your _Character_ exits the **Box** component, your graph will have very similar logic but will end in an **Unload Stream Level** node.

![](UnloadLevel.png)

