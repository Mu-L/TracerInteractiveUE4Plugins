INTSourceChangelist:4293098
Availability:Public
Crumbs: 
Title:カスケードとナイアガラ
Description:カスケードとナイアガラとの違いと類似点
Version:4.20
Parent:Engine/Niagara
Order:0
Tags:Getting Started
Tags:Cascade
Tags:Early Access

[TOC(start:2 end:3)]

**カスケード** と **ナイアガラ** は両方ともアンリアル エンジン 4 (UE4) 内で視覚効果 (VFX) を作るために使用できますが、視覚効果を作成し、調整し、同じ結果を得る方法は、カスケードとナイアガラではかなり異なります。このドキュメントでは、カスケードからナイアガラに移行してすべての視覚効果を作る方法について説明します。この新しいツール、ナイアガラを作った理由は、プログラマーの助けなしに追加の機能を作成できる裁量をアーティストに与えるためです。映画の FX ツールから一部インスピレーションを得て、ユーザビリティを高く保ち、90% のユース ケースに対応しながら、システムをできる限り適応性のあるフレキシブルなものにするように努めました。

##ナイアガラの概要

ナイアガラはアンリアル エンジンの次世代の視覚効果システムです。完全にカスケードの代わりになるものであり、ナイアガラの機能がカスケードの機能を完全に置き換えるまでの一定期間、カスケードとナイアガラを共存します。以下の画像は UE4 でのナイアガラの機能についての概要を説明しています。

![CascadeVS Niagara.png](CascadeVS20Niagara.png "CascadeVS Niagara.png")

## ナイアガラとカスケードの違い

ナイアガラは任意のパーティクル データをユーザーが適切と考えるやりかたで共有できるところが強力です。これにより、新たにハード コーディングした機能を作成するというコードの介入を必要とするのではなく、独自の挙動を記述する支援をします。カスケードでは、パーティクル シミュレーションはハード コーディングされたモジュールによって制御され、それぞれに、パーティクルの属性を修正する特定の機能セットがあります。これとは対照的に、ナイアガラのシミュレーションはアーティストが作成、編集できるノード グラフによって制御されます。

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![Cascade](Cascade.png)(w:800)
	[/PARAM]
	[PARAM:after]
	![Niagara](Ninagra.png)(w:800)
	[/PARAM]
[/OBJECT]

ナイアガラがカスケードよりも優れている他の理由として、ナイアガラのノード グラフはバイトコードでコンパイルされるということがあります。バイトコードは、オーバーヘッドが非常に低いインタープリタで実行するため、CPU のシミュレーションでもパフォーマンスが非常に高くなります。GPU のシミュレーションが計画されており、この 2 つの間での切り替えが透過的に動作する予定です。ただし、ユーザーの選択に基づき、CPU または GPU でエミッタをシミュレーション可能であるべきという注意事項があります。

## カスケードとナイアガラの UI

ナイアガラを初めて開くと、ユーザーインターフェース (UI) はカスケードと全く違うのに気づくでしょう。しかし、よく見ると、ナイアガラのインターフェースは以下の点でカスケードに似ている部分もあります。

* エフェクト作成中に見るリアルタイム 3D ビューポート
    
* R、 G、 B および Alpha の値を調整するためのカーブ エディタ
    
* 様々なプロパティを調整するための [Details (詳細)] パネル
    

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![Cascade](CTN_Cas_VFX.png)(w:800)
	[/PARAM]
	[PARAM:after]
	![Niagara](CTN_Nia_VFX.png)(w:800) 
	[/PARAM]
[/OBJECT]

##ナイアガラのエミッターとシステム

カスケードとナイアガラの最大の違いのひとつは、エミッターのビルド方法です。カスケードを使う場合、エミッターは独立したユニットとしてビルドされています。これでエミッターの配置とスポーンは簡単になりますが、異なるエミッターと挙動を共有したり、更新するのは難しくなります。何もかもを手動で行わなければならないからです。これをナイアガラでは、VFX アーティストがピクセル レベルに至るまで視覚効果の挙動を制御、追加、修正することで改善しました。これを実現するためにナイアガラ パーティクル システムを以下の部分に分けました。

* **ナイアガラ エミッター：** 単一の視覚効果で、他のナイアガラ エミッターと組み合わせて、ナイアガラ システムを作ります。炎のエフェクトを作っている場合、ナイアガラ エミッターは煙、炎、歪み (distortion) 、燃えさしなどを構成するそれぞれ異なるエレメントになります。
    
    ![](CTN_NiagaraEmitters.png)
    
* **ナイアガラ システム：** 単一のエフェクトを構成するために必要なすべてを含みます。炎の例で説明を続けますが、煙、炎、歪み、燃えさし用のナイアガラ エミッターを含む炎のエフェクト一式になります。
    
    ![](CTN_NiagaraSystem.png)