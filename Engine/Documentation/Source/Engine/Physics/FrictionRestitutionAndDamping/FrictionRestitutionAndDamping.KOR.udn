INTSourceChangelist:3782314
Availability: Public
Title:피직스 제동
Crumbs: %ROOT%, Engine, Engine/Physics
Description:물리 오브젝트가 운동을 저항하도록 하는 데 사용되는 프로퍼티와 메소드입니다.


[TOC(start:2)]




피직스 바디를 늦추거나, 대기 항력 시뮬레이션이나, 힌지에 저항을 추가하는 등의 작업을 위해서, 피직스 바디와 피직스 컨스트레인트에 사용할 수 있는 프로퍼티가 두 가지 있습니다. 바로 Linear Damping, 
Angular Damping (선형 제동, 각형 제동) 입니다. 선형 제동은 피직스 바디나 컨스트레인트가 이동에 갖는 저항력을, 각형 제동은 회전에 대한 저항력을 나타냅니다.

## 피직스 바디

모든 피직스 바디에는 **Linear Damping** (선형 제동)과 **Angular Damping** (각형 제동) 프로퍼티가 있습니다. 이는 주로 항력 시뮬레이션에 사용되며, 1.0 값으로도 피직스 바디에 상당한 영향을 
끼칩니다.

[REGION:note]
참고로 일반 중력 상태에서 (9.8m/s^2) 선형 제동 값 30 이면 어떤 단일 바디 액터도 시뮬레이션 시작시 초기 중력의 인력 하에 낙하하지 못하도록 할 수 있습니다. 
피직스 바디 하나 이상이 (피직스 컨스트레인트를 사용한다거나 충돌이 발생했다거나 해서) 상호작용한다면, 피직스 바디를 멈추는 데 드는 제동량은 
올라갑니다.

힘이 가해진 피직스 바디를 멈추는데 필요한 _최소_ 선형 제동값은 대략 100 정도입니다.

마지막으로, 각형 제동 없이, 피직스 바디는 외부의 힘을 가하지 않는 한 계속해서 회전합니다. 아주 작은 값으로도 회전이 빠르게 감소하나, 값이 100 정도 되면 
외부의 힘으로 가한 어떤 회전 동작도 거의 즉시 멈출 것입니다.
[/REGION]

## 피직스 컨스트레인트

피직스 컨스트레인트에 대한 제동은 피직스 바디와는 약간 다른 식으로 작동합니다: Limited Motion (제한된 동작)이 그 한계 이상으로 넘어가려 할 때만 작동합니다. 
피직스 컨스트레인트의 모션을 Limited (제한됨)으로 설정하면 **Soft Limits** 가 표시됩니다:

[REGION:raw]
![](Phys_ConstraintDampProps.png)(convert:false)
[/REGION]

_두 개의 각형 스윙 모션은 제동값을 공유하며, 각형 트위스트는 별도의 제동값을 받고, 모든 선형 축은 같은 제동값을 사용합니다.
별도의 속성을 가질 수는 있지만, 서로 관계된 모션에 모두 똑같은 효과를 갖습니다._

| 프로퍼티 | 설명 |
| -------- | ----------- |
| **Limit Stiffness** | 강성 제한 - 한계가 초과되면 컨스트레인트가 초과된 동작을 멈추는 데 얼마나 격하게 시도할지 영향을 끼치는 값입니다. 기본값 50 은 동작에 겨우 영향을 끼치며, 5000 이 되면 한계까지 반향되는 것처럼 보이고, 50000 이면 동작을 완전히 튕겨냅니다. |
| **Limit Damping** | 제동 제한 - 피직스 바디의 제동과 마찬가지로, 동작을 느리게 만드는 양을 정의합니다. 피직스 바디의 제동과는 달리, 제동 효과는 동작 한계를 초과했을 때만 일어나며, 피직스 바디가 멈출 때까지 동력을 소진시킵니다. |

이 두 가지 값이 함께 하여 다양한 효과를 냅니다. 높은 감성과 낮은 제동은 엄격한 한계처럼 보이는 반면, 둘 다 높으면 타르를 통과하는 듯, 
부드럽지만 빠르게 멈추는 것처럼 보일 것입니다. 원하는 모양새를 내는 값을 찾기 위해서는 충분한 실험이 있어야 할 것입니다.

컨스트레인트 관련 추가 정보는, [](Engine/Physics/Constraints/ConstraintsUserGuide) 문서를 참고하세요.

또는 피직스 컨스트레인트에서 볼 수 있는 프로퍼티 관련해서는 [](Engine/Physics\Constraints\ConstraintsReference) 문서를 참고하세요.

[COMMENT:none]

## PhysicalMaterial Damping
This can be thought of like the air resistance that is applied to a body. A force is applied to a body to try and slow it down, and the strength of the force is proportional to the 
speed that the object is moving. There is a separate setting for linear and angular damping, so you can control how much it will try and resist translation and rotation movement. 
One place where you might want to use this would be a swinging chandelier that you did not want to swing forever. You may not want to use this for a door though, as a lot of the 
friction on a real door is due to it's hinge. If you set a high damping on the door's PhysicalMaterial and then broke it off the hinge, it would still have that damping applied to 
it which may look odd. 



## Joint Drive
To simulate 'friction' within a joint, you can use the joint drive properties in the RB_ConstraintInstance (you can get to these properties in PhAT by selecting the joint and 
pressing the 'I' key or the 'i' icon on the toolbar). First you want to turn on the appropriate bTwistVelocityDrive or bSwingVelocityDrive drive, set the desired angular velocity 
to zero and modify the AngularDriveForceLimit to control how much friction is in the joint. You can find more information on this on the 
[PhysicsConstraintReference](Engine/Physics/PhysX/Constraints) page. 

The key thing here is that the damping is applied between two jointed object. Imagine two objects jointed together, but then thrown through space. If you used PhysicalMaterial 
damping here, it would slow down how quickly the pair of objects would move through the air, when what you really want is to modify how they move relative to each other. 
That is why Joint Drive is the right thing to use in this case.



## PhysicsVolume RigidBodyDamping
Sometimes you want to apply damping or a force to objects only in a certain area of your level. To do this you would use a PhysicsVolume. The ZoneVelocity property of a 
PhysicsVolume is the desired velocity that objects in that volume should achieve. You can think of this as the speed of a river or wind-tunnel in that area. You can then modify 
the RigidBodyDamping property to control how strongly a physics body will try and achieve that velocity when in the volume. Setting a zero ZoneVelocity and a high RigidBodyDamping 
can make the volume act like jelly. Setting a horizontal ZoneVelocity and a moderate RigidBodyDamping can make it act like a flowing river of water.

[/COMMENT]
 










