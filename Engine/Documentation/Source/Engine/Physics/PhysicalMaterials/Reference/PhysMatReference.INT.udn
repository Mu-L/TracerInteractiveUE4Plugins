Availability: Public
Title:Physical Materials Reference
Crumbs: %ROOT%, Engine, Engine/Physics, Engine/Physics/PhysicalMaterials
Description:Assets applied to physically simulated primitives directly or via materials used to configure and control physical properties used by the simulation.
topic-image:Engine/Physics/physics_topic.png


[INCLUDE:Shared/Glossary/P/#Glossary_Physical_Material]

## Properties

Below are the properties for Physical Materials separated by major category.

## Physical Material

This category contains the core properties of the Physics Material: Friction, Restitution, and Density.

![](p1.png)

[REGION:raw]
| Property | Description |
| -------- | :---------- |
| **Friction** | This is the friction value of the surface, which controls how easily things can slide on this surface. |
| **Friction Combine Mode** | [INCLUDE:#FcombineMode]  |
| **Override Friction Combine Mode** | By default, the Friction Combine Mode is set to **Average**, by enabling this property you can change how Frictions are combined between touching Physical Materials.|
| **Restitution** | This is how "bouncy" the surface is, or how much energy it retains when it collides with another surface. |
| **Restitution Combine Mode** | [INCLUDE:#RcombineMode] |
| **Override Restitution Combine Mode** | By default, the Restitution Combine Mode is set to **Average**, by enabling this property you can change how Restitutions are combined between touching Physical Materials. |
| **Density** | Used with the shape of the object to calculate its mass properties. The higher the number, the heavier the object. Measured as **g** per cubic **cm**. |
[/REGION]

### Advanced

This category contains a property to change how scale affects the mass of the Actor with the Physical Material applied to it.

![](p2.png)

[REGION:raw]
| Property | Description |
| -------- | :---------- |
| **Raise Mass To Power** | Used to adjust the way that mass increases as objects get larger. This is applied to the mass as calculated based on a "solid" object. In actuality, larger objects do not tend to be solid, and become more like "shells" (e.g. a car is not a solid piece of metal). Values are clamped to 1 or less. |
[/REGION]

## Destruction

Properties that are specific to the Destruction system in Unreal Engine 4.

![](p3.png)

[REGION:raw]
| Property | Description |
| -------- | :---------- |
| **Destructible Damage Threshold Scale** | How much to scale the damage threshold by on any destructible this Physics Material is applied to. |
[/REGION]

## Physical Properties

Gameplay related properties for the Physical Material.

![](p4.png)

[REGION:raw]
| Property | Description |
| -------- | :---------- |
| **Surface Type** | [INCLUDE:#one]|
[/REGION]

## Vehicles

These properties are specific to Vehicles in Unreal Engine 4. While they may say they deal with Tires, they only do so when applied to a Vehicle (as Tire Data Types, and Wheel Blueprints, don't directly reference a Physical Material).

![](p5.png)

[REGION:raw]
| Property | Description |
| -------- | :---------- |
| **Tire Friction Scale** | Overall tire friction scalar when this Physical Material is applied to a Vehicle. This value is multiplied against the Vehicle's Wheels' specific Friction Scale values. |
| **Tire Friction Scales** | Tire friction scales for specific Wheels when this Physical Material is applied to a Vehicle. These values are multiplied against the Vehicle's Wheels' specific Friction Scale values. |
[/REGION]

[COMMENT:none]

[EXCERPT:one]
Surface Types are set in the `DefaultEngine.ini` file for your project. They define an enum to be used in the engine for defining any number of things, from what sound plays as a character walks across a surface, to the type of decal an explosion should leave on different surfaces.

You can use ProjectSetting/Physics/Physical Surfaces

This data can be pulled in code or Blueprint:

![](SurfaceType.png)(w:600)

By default, without editing the source code, you are limited to 30 Surface Types, labeled SurfaceType1 through SurfaceType30.

[/EXCERPT:one]

[EXCERPT:FcombineMode]
This property enables you to adjust how Physical Material frictions are combined. This is set to Average by default, but can be overriden using the **Override Friction Combine Mode** property. 

| --- | --- |
| **Average** | Uses the average value of the touching materials: (a+b)/2 |
| **Min** | Uses the smaller value of the touching materials: min(a,b) |
| **Multiply** | Multiplies the values of the touching materials: a*b |
| **Max** | Uses the larger value of the touching materials: max(a,b) |
[/EXCERPT]

[EXCERPT:RcombineMode]
This property enables you to adjust how Physical Material restitutions are combined. This is set to Average by default, but can be overriden using the **Override Restitution Combine Mode** property. 

| --- | --- |
| **Average** | Uses the average value of the touching materials: (a+b)/2 |
| **Min** | Uses the smaller value of the touching materials: min(a,b) |
| **Multiply** | Multiplies the values of the touching materials: a*b |
| **Max** | Uses the larger value of the touching materials: max(a,b) |
[/EXCERPT]

[/COMMENT]





