INTSourceChangelist:3242329
Availability:Public
Title:常量表达式
Crumbs:%ROOT%, Engine, Engine/Rendering/Materials, Engine/Rendering/Materials/ExpressionReference
Description:输出值在编辑器中设置后或在游戏开始时设置后通常保持不变的表达式。
Version:4.9
tags:Materials

[EXCERPT:TOC]
[TOC(start:2)]
[/EXCERPT:TOC]

%Description%

## Constant

**Constant（常量）**表达式输出单个浮点值。这是最常用的表达式之一，并可连接到任何输入，而不必考虑该输入所需的通道数。例如，如果您将一个常量连接到需要 3 个矢量的输入，那么该常量值将用于全部 3 个元素。提供单个数值时，使用说明区域中的小三角形图标来折叠节点可能非常有用。

| 项目 | 说明 |
| -------- | ----------- |
| [REGION:tablesection]属性[/REGION] ||
| **R** | 指定表达式所输出的浮点值。|


**示例：**0.7、-0.24 和 1.1

![ConstantExample.png](ConstantExample.png)

[REGION:tip]
通过在材质编辑器的图形区域中按住 **1** 键并 **单击鼠标左键**，可快速创建 Constant（常量）节点。
[/REGION]

[EXCERPT:Constant2vector]
## Constant2Vector

**Constant2Vector（常量 2 矢量）**表达式输出双通道矢量值，即输出两个常量数值。

| 项目 | 说明 |
| -------- | ----------- |
| [REGION:tablesection]属性[/REGION] ||
| **R** | 指定表达式所输出的矢量的红色（第一个）通道的浮点值。|
| **G** | 指定表达式所输出的矢量的绿色（第二个）通道的浮点值。|

**示例：**(0.4, 0.6) 和 (1.05, -0.3)

**用法示例：**Constant2Vector（常量 2 矢量）对于修改纹理坐标非常有用，因为这些坐标也是双通道值。

[REGION:fullwidth]
![Constant2Example.png](Constant2Example.png)
[/REGION]

[REGION:tip]
通过在材质编辑器的图形区域中按住 **2** 键并 **单击鼠标左键**，可快速创建 Constant2Vector（常量 2 矢量）节点。
[/REGION]

[/EXCERPT:Constant2vector]

[EXCERPT:Constant3vector]
## Constant3Vector

**Constant3Vector（常量 3 矢量）**表达式输出三通道矢量值，即输出三个常量数值。您可以将 RGB 颜色看作 Constant3Vector（常量 3 矢量），其中每个通道都被赋予一种颜色（红色、绿色、蓝色）。

| 项目 | 说明 |
| -------- | ----------- |
| [REGION:tablesection]属性[/REGION] ||
| **R** | 指定表达式所输出的矢量的红色（第一个）通道的浮点值。|
| **G** | 指定表达式所输出的矢量的绿色（第二个）通道的浮点值。|
| **B** | 指定表达式所输出的矢量的蓝色（第三个）通道的浮点值。|


**示例：**(0.4, 0.6, 0.0) 和 (1.05, -0.3, 0.3)

[REGION:fullwidth]
![Constant3Example.png](Constant3Example.png)
[/REGION]

[REGION:tip]
通过在材质编辑器的图形区域中按住 **3** 键并 **单击鼠标左键**，可快速创建 Constant3Vector（常量 3 矢量）节点。
[/REGION]

[/EXCERPT:Constant3vector]

[EXCERPT:Constant4Vector]
## Constant4Vector

**Constant4Vector（常量 4 矢量）**表达式输出四通道矢量值，即输出四个常量数值。您可以将 RGBA 颜色看作 Constant4Vector（常量 4 矢量），其中每个通道都被赋予一种颜色（红色、绿色、蓝色、alpha）。

| 项目 | 说明 |
| -------- | ----------- |
| [REGION:tablesection]属性[/REGION] ||
| **R** | 指定表达式所输出的矢量的红色（第一个）通道的浮点值。|
| **G** | 指定表达式所输出的矢量的绿色（第二个）通道的浮点值。|
| **B** | 指定表达式所输出的矢量的蓝色（第三个）通道的浮点值。|
| **A** | 指定表达式所输出的矢量的alpha（第四个）通道的浮点值。|

**示例：**(0.4, 0.6, 0.0, 1.0) 和 (1.05, -0.3, 0.3, 0.5)

![Constant4Example.png](Constant4Example.png)

[REGION:tip]
通过在材质编辑器的图形区域中按住 **4** 键并 **单击鼠标左键**，可快速创建 Constant4Vector（常量 4 矢量）节点。
[/REGION]

[/EXCERPT:Constant4Vector]

[EXCERPT:DiscanceCullFade]
## Distance Cull Fade

DistanceCullFade（距离剔除消退）表达式输出一个从黑色逐渐消退到白色的标量值，并可用于使对象进入剔除距离后逐渐消退。请注意，它不会使对象淡出。 

![DistanceCullFadeExample.png](DistanceCullFadeExample.png)

这个网络将使对象在摄像机进入剔除距离后淡入（而非“跳入”）。

[/EXCERPT:DiscanceCullFade]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleColor]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleDirection]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleMotionBlurFade]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleRadius]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleRelativeTime]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleSize]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleSpeed]

## PerInstanceFadeAmount

**PerInstanceFadeAmount（按实例消退量）**表达式输出一个浮点值，该值与应用于实例化静态网格（例如植物叶子）的消退量相关联。它是常量，但对于网格的每个实例，可以是不同的数值。

[REGION:note]
仅当应用于 InstancedStaticMesh（实例化静态网格）Actor 或其他利用 InstancedStaticMeshComponent（实例化静态网格组件）的 Actor 时，此表达式才有效。
[/REGION]

## PerInstanceRandom

**PerInstanceRandom（按实例随机）**表达式按材质所应用于的静态网格实例输出不同的随机浮点值。InstancedStaticMeshComponent（实例化静态网格组件）用于为实例设置随机浮点值，这个值将公开，以便可用于任何期望的内容（例如，窗外的随机光照水平）。它是常量，但对于网格的每个实例有所不同。

输出值将是介于 0 与目标平台的 RAND_MAX 之间的整数。

![](PerInstRandomResult.png)(h:402) ![](PerInstanceRandomGraph.png) 

[REGION:note]
仅当应用于 InstancedStaticMesh（实例化静态网格）Actor 或其他利用 InstancedStaticMeshComponent（实例化静态网格组件）的 Actor 时，此表达式才有效。
[/REGION]



[EXCERPT:Time]
## Time

**Time（时间）**节点用来向材质（例如，[Panner（平移）](Engine/Rendering/Materials/ExpressionReference/Coordinates#Panner)、[Cosine（余弦）](Engine/Rendering/Materials/ExpressionReference/Math#Cosine) 或其他时间相关操作）添加经历时间。

| 项目 | 说明 |
| -------- | ----------- |
| [REGION:tablesection]属性[/REGION] ||
| **忽略暂停（Ignore Pause）** | 如果为 _true_，那么时间将一直推进，即使游戏暂停也是这样。|
| **周期（Period）** | 如果为 _true_，那么这将是时间回绕前经过的时间量。针对移动材质，这将以全精度在 CPU 上执行周期计算，而在 GPU 上，将以半精度运行（处理长度超过一分钟的周期时，可能会产生问题）。|

[REGION:fullwidth]
![TimeExample.png](TimeExample.png)
[/REGION]
上图中说明的网络将创建一个随时间推移而变化的材质，从而连贯地展现白色与黑色之间的正弦曲线过渡。如果启用了时间段，那么将时间段设置为 0 会有效地停止过渡，而设置为 1 相当于时间段为 _false_。设置接近于 0 的数值将使材质更迅速地变化。


[/EXCERPT:Time]
## TwoSidedSign

**TwoSidedSign（双面符号）**表达式适合在双面定制照明材质的背面翻转法线，以便与冯氏（Phong）明暗处理算法匹配。+1 表示双面材质的正面，-1 表示背面。

![exp_twosidedsign.png](exp_twosidedsign.png)

## VertexColor

**VertexColor（顶点颜色）**表达式是材质的访问点，用于访问影响精灵粒子发射器的颜色模块的输出。

| 项目 | 说明 |
| -------- | ----------- |
| [REGION:tablesection]输出[/REGION] ||
| **RGB** | 输出颜色的三通道 RGB 矢量值。|
| **R** | 输出颜色的红色通道。|
| **G** | 输出颜色的绿色通道。|
| **B** | 输出颜色的蓝色通道。|
| **A** | 输出颜色的alpha通道。|

![](VertexColorExample.png)

以上网络将利用直接来自粒子系统的颜色和alpha数据。此类网络特别适合于实现火花等特殊效果。

## ViewProperty

ViewProperty（视图属性）表达式输出依赖于视图的常量属性，例如视野或渲染目标大小。要访问的视图属性可配置，并且，输出类型取决于所配置的待访问属性。

[REGION:fullwidth]
![ViewPropertyExample.png](ViewPropertyExample.png)
[/REGION]

在此示例中，视野为 50 度。
[REGION:fullwidth]
![ViewPropertyExampleFOV50.png](ViewPropertyExampleFOV50.png)
[/REGION]

这是同一示例，其视野为 90 度。
[REGION:fullwidth]
![ViewPropertyExampleFOV90.png](ViewPropertyExampleFOV90.png)
[/REGION]

## PrecomputedAOMask

**PrecomputedAOMask（预先计算的 AO 蒙版）**节点用来访问材质中光照系统计算的环境光遮蔽 (AO)，
 这可能很适合于过程式纹理贴图，或者在老化效果及尘埃随时间推移而缓慢积累的区域加入老化效果及尘埃。

[region:note]
您必须先使用光照系统来建立您所在关卡的照明，然后才能看到 PrecomputedAOMask（预先计算的 AO 蒙版）的结果。
[/region]

![](PrecompitedAOMas_00.png)

以上截屏使用 AO 蒙版让尘埃层自动混合到环境的角落。
要使用 AO 蒙版，您需要同时启用 **全局设置（World Settings） -> 光照系统设置（Lightmass settings）**下的 **使用环境光遮蔽（Use Ambient Occlusion）**和 **生成环境光遮蔽材质蒙版（Generate Ambient Occlusion Material Mask）**，然后建立照明。 
**最大遮蔽距离（Max Occlusion Distance）**等其他 AO 控制对于调整 AO 外观来说可能非常有用。 
并且，请确保将 **直接遮蔽小数（Direct Occlusion Fraction）**和 **间接遮蔽小数（Indirect Occlusion Fraction）**都设置为 **0**，以使此 AO 不会应用于实际关卡照明。

![](PrecompitedAOSettings_00.png)

您可使用 **PrecomputedAOMask（预先计算的 AO 蒙版）**材质表达式节点来访问任何材质中的 AO。 
PrecomputedAOMask（预先计算的 AO 蒙版）作为 0 到 1 蒙版工作，其中 1 提供受 AO 影响的区域，而 0 提供不受影响的区域。
在下图中，您可以了解如何设置材质以利用 PrecomputedAOMask（预先计算的 AO 蒙版）。

![](PrecomputedAO_Material_00.png)
