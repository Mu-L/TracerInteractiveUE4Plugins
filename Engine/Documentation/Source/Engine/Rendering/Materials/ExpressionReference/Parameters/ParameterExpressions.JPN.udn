INTSourceChangelist:3782314
Availability:Public
Title:パラメータの表現式
Crumbs: %ROOT%, Engine, Engine/Rendering/Materials, Engine/Rendering/Materials/ExpressionReference
Description:マテリアル インスタンスを子インスタンスで無効、またはランタイム時に修正するプロパティを公開する表現式
Version:4.9
tags:Materials

[EXCERPT:TOC]
[TOC(start:2)]
[/EXCERPT:TOC]


## Collection Parameters

**Collection Parameter** 表現式は、Parameter Collection アセットを参照するために使用します。マテリアル、ブループリントなどの様々なアセットで簡単に再利用できるパラメータ グループです。Collection Parameters については、[マテリアルのパラメータ コレクション](Engine/Rendering/Materials\ParameterCollections) を必ずお読みください。



[REGION:warning]
[INCLUDE:Engine/Rendering/Materials\ParameterCollections#MaterialWarning]
[/REGION]


## DynamicParameter
[EXCERPT:DynamicParameter]

**DynamicParameter** 表現式は、パーティクル エミッタにルートを提供します。このルートから、どんな方法でも使用が可能な最大 4 つの値をマテリアルへ送り込みます。これらの値は、エミッタに配置されている **ParameterDynamic** モジュールを経由して **カスケード** に設定されます。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Param Names** | パラメータの配列名。この値はマテリアル エディタに表示される表現式のテキストを決定し、カスケードに表示される ParameterDynamic モジュールのパラメータの参照に使用する名前です。|
| [REGION:tablesection]出力値[/REGION] ||
| **Param1** | Param Names プロパティの最初のパラメータの値を出力します。出力される名前は、Param Names プロパティに基づいて変更します。|
| **Param2** | Param Names プロパティの 2 番目のパラメータの値を出力します。出力される名前は、Param Names プロパティに基づいて変更します。|
| **Param3** | Param Namesプロパティの 3 番目のパラメータの値を出力します。出力される名前は、Param Names プロパティに基づいて変更します。|
| **Param4** | Param Namesプロパティの 4 番目のパラメータの値を出力します。出力される名前は、Param Names プロパティに基づいて変更します。|

[/EXCERPT:DynamicParameter]

[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Font#FontSampleParameter]


## ScalarParameter

**ScalarParameter** 表現式は、アクセス可能な浮動小数値 ([Constant](Engine/Rendering/Materials/ExpressionReference/Constant#Constant)) を出力し、マテリアルのインスタンス、またはオンザフライ書き込みで変更することができます。  

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Default Value** | 定数が受けとるデフォルト値を指定します。 |


[REGION:fullwidth]
![ScalarParameterExample.png](ScalarParameterExample.png)
[/REGION]


## StaticBoolParameter

**StaticBoolParameter** 表現式は、 Bool 型パラメータのみを作成する点とスイッチを実装しない点を除いて、 StaticSwitchParameter 表現式のように機能します。

[REGION:note]
パラメータは、ランタイム時に変更することができないため静的に名前がつけられます。名前は、マテリアル インスタンス エディタ上のみで設定することができます。静的スイッチは、ランタイム時ではなくコンパイル時に適用されます。つまり、マテリアルのブランチがドロップされた時は決して実行されません。よって静的スイッチはランタイム時に効率よく解放されます。その一方で、マテリアルの新バージョンは、マテリアルで静的パラメータが **使われた** 組み合わせごとにコンパイルされなくてはいけませんので、気をつけないとコンパイルされたシェーダーがたくさんハードディスク スペースやメモリを使ってしまい、ゲームのパフォーマンスに大きな影響を与えるかもしれません。マテリアルに使用する静的パラメータの順列数と、実際に使用された静的パラメータの置換数を最小限にとどめてください。
[/REGION]

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Default Value** | パラメータのデフォルト Bool 値で、 _Ture_ デフォルト値 (チェック済み) または _False_ を返します。 |


このノードは [マテリアル関数](Engine/Rendering/Materials/Functions) と一緒に使用します。



## StaticSwitchParameter

**StaticSwitchParameter** 表現式は 2 つの入力値を受け取り、パラメータの値が _true_ の時、最初の入力値を出力します。 False の場合は 2 番目の入力値を出力します。  

[REGION:note]
パラメータは、ランタイム時に変更することができないため静的に名前がつけられます。名前は、マテリアル インスタンス エディタ上のみで設定することができます。静的スイッチは、ランタイム時ではなくコンパイル時に適用されます。つまり、マテリアルのブランチがドロップされた時は決して実行されません。よって静的スイッチはランタイム時に効率よく解放されます。その一方で、マテリアルの新バージョンは、マテリアルで静的パラメータが **使われた** 組み合わせごとにコンパイルされなくてはいけませんので、気をつけないとコンパイルされたシェーダーがたくさんハードディスク スペースやメモリを使ってしまい、ゲームのパフォーマンスに大きな影響を与えるかもしれません。マテリアルに使用する静的パラメータの順列数と、実際に使用された静的パラメータの置換数を最小限にとどめてください。
[/REGION]

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Default Value** | _true_ の場合、最初の入力値が出力されます。_false_ の場合は 2 番目の入力値が出力されます。 |
| **Extended Caption Display** | _true_ の場合、表現式のタイトルバーに表現式の値が表示されます。 |
| [REGION:tablesection]入力[/REGION] ||
| **A** | さまざまなチャンネルの値を受け取ります。|
| **B** | さまざまなチャンネルの値を受け取ります。|


**使用例：** ランタイム コストが発生することなく、マテリアルの全ブランチの削除に静的スイッチを使用します。インスタンスは異なる値を持つことができます。パフォーマンス ロスなしにテンプレート化したシェーダーを設定することが可能になります。

[REGION:fullwidth]
![StaticSwitchParameterExample_A.png](StaticSwitchParameterExample_A.png)
[/REGION]

[REGION:fullwidth]
![StaticSwitchParameterExample_B.png](StaticSwitchParameterExample_B.png)
[/REGION]

## StaticComponentMaskParameter

**StaticComponentMaskParameter** 表現式は、マスクの値をインスタンスで設定できる点を除いて、通常のコンポーネント マスクのような動作をします。  

[REGION:note]
パラメータは、ランタイム時に変更することができないため静的に名前がつけられます。名前は、マテリアル インスタンス エディタ上のみで設定することができます。静的スイッチは、ランタイム時ではなくコンパイル時に適用されます。つまり、マテリアルのブランチがドロップされた時は決して実行されません。よって静的スイッチはランタイム時に効率よく解放されます。その一方で、マテリアルの新バージョンは、マテリアルで静的パラメータが **使われた** 組み合わせごとにコンパイルされなくてはいけませんので、気をつけないとコンパイルされたシェーダーがたくさんハードディスク スペースやメモリを使ってしまい、ゲームのパフォーマンスに大きな影響を与えるかもしれません。マテリアルに使用する静的パラメータの順列数と、実際に使用された静的パラメータの置換数を最小限にとどめてください。
[/REGION]

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Default R** | チェックされると、赤または最初のチャンネルの入力値が出力へ渡されます。 |
| **Default G** | チェックされると、緑または 2 番目のチャンネルの入力値が出力へ渡されます。 |
| **Default B** | チェックされると、青または 3 番目のチャンネルの入力値が出力へ渡されます。 |
| **Default A** | チェックされると、アルファまたは 4 番目のチャンネルの入力値が出力へ渡されます。 |


**使用例：** インスタンスが使用するマスクテクスチャのチャンネルの選択に、Static Component Masks を使用します。マスクが静的 (ランタイム時に変更が不必要) な場合、チャンネルをマスクするためにベクター パラメータでテクスチャ ルックアップを乗算する代わりに常にこの方法を使用します。この方法を使用しないと、テクスチャ帯域幅とシェーダー命令が無駄になります。

[REGION:fullwidth]
![StaticComponentMaskParameterExample.png](StaticComponentMaskParameterExample.png)
[/REGION]

## VectorParameter

VectorParameter expressionは、マテリアルのインスタンスやコードで修正できるパラメータである点を除いて [Constant4Vector](Engine/Rendering/Materials/ExpressionReference/Constant#Constant4Vector) と同一です。VectorParameter の良い点の一つに、カラーピッカーで値を設定できる点があります。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Default Value** [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#VectorParamDefaultItem] | The vector to output by default unless overridden by a MaterialInstanceConstant. [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#VectorParamDefaultDesc] |

[REGION:fullwidth]
![VectorParameterExample.png](VectorParameterExample.png)
[/REGION]

[REGION:warning]
制限付き補間が原因で、 VertexColor と Transform ノードは相互排他的な関係にあります。Transform ノードと VertexColor を両方使用すると、 VertexColor は全て白色になります。
[/REGION]

[REGION:note]
**プログラマー:** スプライト パーティクルに関して、メッシュ パーティクルのカラーはシェーダー定数として設定されているのに対し、カラーは頂点毎にシェーダーと通信をします。
[/REGION]



[EXCERPT:TextureObjectParameter]
## TextureObjectParameter

TextureObjectParameter 表現式はテクスチャ パラメータを定義します。そしてテクスチャ入力と関数を呼び出すマテリアルに用いるテクスチャ オブジェクトを出力します。このノードはテクスチャを実際にサンプリングしないので、TextureSample ノードを併用しなくてはいけません。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Texture** | 表現式によってサンプル化されたテクスチャを指定します。|
| **Sampler Type** | ノードからサンプルおよび出力されるデータ タイプです。 |
| **MipValueMode** | サンプルのミップレベルもしくはデフォルト ハードウェアで計算された微分係数をカスタマイズする方法を選択します。外観とパフォーマンスの調整に影響します。 |

このノードは [マテリアル関数](Engine/Rendering/Materials/Functions) と一緒に使用します。
[/EXCERPT:TextureObjectParameter]


[EXCERPT:TextureSampleParameter2D]
## TextureSampleParameter2D

**TextureSampleParameter2D** 表現式は、マテリアルのインスタンスやコードで修正できるパラメータである点を除いて TextureSample と同一です。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Texture** | 表現式によってサンプル化されたテクスチャを指定します。|
| **Sampler Type** | ノードからサンプルおよび出力されるデータ タイプです。 |
| **MipValueMode** | サンプルのミップレベルもしくはデフォルト ハードウェアで計算された微分係数をカスタマイズする方法を選択します。外観とパフォーマンスの調整に影響します。 |
| [REGION:tablesection]入力[/REGION] ||
| **UVs** | テキスチャに使用する UV テクスチャ座標を受け取ります。UV に値が入力されなかった場合、マテリアルが適用されているメッシュのテクスチャ座標が使用されます。|
| [REGION:tablesection]出力値[/REGION] ||
| **RGB** | カラーの 3 チャンネルの RGB ベクター値を出力します。 |
| **R** | カラーの赤チャンネルを出力します。 |
| **G** | カラーの緑チャンネルを出力します。 |
| **B** | カラーの青チャンネルを出力します。 |
| **A** | カラーのアルファチャンネルを出力します。テクスチャにアルファ チャンネルが含まれていない場合、「アルファ」チャンネルへ何かを接続すると、表向きは不正行為ではないものの常に結果はゼロ (黒) となります。 |

[/EXCERPT:TextureSampleParameter2D]

[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#TextureSampleParameterSubUV]

[EXCERPT:TextureSampleParameterCube]
## TextureSampleParameterCube

**TextureSampleParameterCube** 表現式は、キューブマップのみを受け取る点と、マテリアルのインスタンスやコードを通じて修正できるパラメータである点を除いて TextureSample と全く同一です。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Texture** | 表現式によってサンプル化されたテクスチャを指定します。|
| **Sampler Type** | ノードからサンプルおよび出力されるデータ タイプです。 |
| **MipValueMode** | サンプルのミップレベルもしくはデフォルト ハードウェアで計算された微分係数をカスタマイズする方法を選択します。外観とパフォーマンスの調整に影響します。 |
| [REGION:tablesection]入力[/REGION] ||
| **UVs** | テキスチャに使用する UV テクスチャ座標を受け取ります。UV に値が入力されなかった場合、マテリアルが適用されているメッシュのテクスチャ座標が使用されます。3 チャンネルのベクター値でなくてはいけません。|
| [REGION:tablesection]出力値[/REGION] ||
| **RGB** | カラーの 3 チャンネルの RGB ベクター値を出力します。 |
| **R** | カラーの赤チャンネルを出力します。 |
| **G** | カラーの緑チャンネルを出力します。 |
| **B** | カラーの青チャンネルを出力します。 |
| **A** | カラーのアルファチャンネルを出力します。テクスチャにアルファ チャンネルが含まれていない場合、「アルファ」チャンネルへ何かを接続すると、表向きは不正行為ではないものの常に結果はゼロ (黒) となります。 |

[/EXCERPT:TextureSampleParameterCube]

[EXCERPT:TextureSampleParameterMovie]
## TextureSampleParameterMovie

**TextureSampleParameterMovie** 表現式は、ムービーテクスチャ (Bink ムービー) のみを受け取る点と、マテリアルのインスタンスやコードで修正できるパラメータである点を除いて TextureSample  と同一です。

| アイテム | 説明 |
| -------- | ----------- |
| [REGION:tablesection]プロパティ[/REGION] ||
| **Parameter Name** | [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#ParameterNameDefinition] |
| **Group**| [INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#GroupDefinition] |
| **Texture** | 表現式によってサンプル化されたテクスチャを指定します。|
| **Sampler Type** | ノードからサンプルおよび出力されるデータ タイプです。 |
| **MipValueMode** | サンプルのミップレベルもしくはデフォルト ハードウェアで計算された微分係数をカスタマイズする方法を選択します。外観とパフォーマンスの調整に影響します。 |
| [REGION:tablesection]入力[/REGION] ||
| **UVs** | テキスチャに使用する UV テクスチャ座標を受け取ります。UV に値が入力されなかった場合、マテリアルが適用されているメッシュのテクスチャ座標が使用されます。|
| [REGION:tablesection]出力値[/REGION] ||
| **RGB** | カラーの 3 チャンネルの RGB ベクター値を出力します。 |
| **R** | カラーの赤チャンネルを出力します。 |
| **G** | カラーの緑チャンネルを出力します。 |
| **B** | カラーの青チャンネルを出力します。 |
| **A** | カラーのアルファチャンネルを出力します。テクスチャにアルファ チャンネルが含まれていない場合、「アルファ」チャンネルへ何かを接続すると、表向きは不正行為ではないものの常に結果はゼロ (黒) となります。 |

[/EXCERPT:TextureSampleParameterMovie]



[COMMENT:none]

[EXCERPT:VectorParamDefaultItem]
[REGION:prop_sublist]
	* **R**
	* **G**
	* **B**
	* **A**
[/REGION]
[/EXCERPT:VectorParamDefaultItem]

[EXCERPT:VectorParamDefaultDesc]
[REGION:prop_sublist]
	* 式が出力するベクターの赤または最初のチャンネルの浮動小数点値を指定します。
	* 式が出力するベクターの緑または 2 番目の浮動小数点値を指定します。
	* 式が出力するベクターの青または 3 番目の浮動小数点値を指定します。
	* 式が出力するベクターのアルファまたは 4 番目の浮動小数点値を出力します。
[/REGION]
[/EXCERPT:VectorParamDefaultDesc]

[EXCERPT:GroupDefinition]MaterialInstanceConstant 内でパラメータ名をグループまたはカテゴリに構造化する方法を提供します。同一のグループプロパティ名を持つマテリアル内の全パラメータは、インスタンスのカテゴリ配下にリストされます。[/EXCERPT:GroupDefinition]

[EXCERPT:ParameterNameDefinition]マテリアルのインスタンス、またはコードを通じてパラメータを特定する名前を指定します。[/EXCERPT:ParameterNameDefinition]

[/COMMENT]

