INTSourceChangelist:6527536
Availability: Public
Title: 纹理表达式
Description: 对纹理进行取样和输出的表达式。
Version: 4.9
Parent: Engine/Rendering/Materials/ExpressionReference
Tags: Materials


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Font#FontSample]

[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Font#FontSampleParameter]

![](FontSampleParameterExample.png)

## SceneColor

**SceneColor** 表达式输出现有的场景颜色。

| 项目 | 说明 |
| --- | --- |
| [REGION:tablesection]输入[/REGION] ||
| **OffsetFraction** | 接收用于在屏幕空间中使场景颜色发生偏移的2D矢量。将此项目设置为0,1或1,0可提供略微明亮的场景颜色版本。将此项目设置为1,1可提供更加明亮的结果。|

![](SceneColorExample.png)

## SpriteTextureSampler

要创建定制Sprite材质，可以复制一个现有的Sprite材质，也可在 **内容浏览器** 中创建新材质。渲染Sprite时，在Sprite资源中定义的纹理将输送到材质中任何具有“SpriteTexture”名称的纹理参数。可以放置SpriteTextureSampler节点以自动完成此操作。

![](SpriteMaterial.png)(w:720)

精灵实例将以顶点颜色形式传入其颜色，但该颜色可用于材质中的任何内容，而不仅限于着色。

| 项目 | 说明 |
| --- | --- |
| [REGION:tablesection]属性[/REGION] ||
| **纹理（Texture）** | 指定表达式所取样的纹理。要设置纹理，请先在 **内容浏览器** 中选择纹理。然后，在此表达式的属性窗口中选择“纹理（Texture）”属性，并单击“使用当前选择（Use Current Selection）”按钮。|
| **取样类型（Sampler Type）** | 此节点所要取样并输出的数据类型。|
| **Mip值模式（MipValueMode）** | 选择如何根据计算的默认硬件来定制样本的MIP级别或导数。影响外观及性能。|
| [REGION:tablesection]输入[/REGION] ||
| **UV（UVs）** | 接收UV纹理坐标，以用于纹理。如果没有任何值输入到UV，那么将使用材质所应用到的网格体的纹理坐标。|
| [REGION:tablesection]输出[/REGION] ||
| **RGB** | 输出颜色的三通道RGB矢量值。|
| **R** | 输出颜色的红色通道。|
| **G** | 输出颜色的绿色通道。|
| **B** | 输出颜色的蓝色通道。|
| **A** | 输出颜色的alpha通道。如果纹理未包含alpha通道，那么将“alpha”通道连接到任何内容（虽然在技术上不合法）的结果将始终为零（黑色）。|

[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Functions#TextureObject]

## TextureSample

**TextureSample** 表达式输出纹理中的颜色值。此纹理可以是常规Texture2D（包括法线贴图）、立方体贴图或电影纹理。

| 项目 | 说明 |
| --- | --- |
| [REGION:tablesection]属性[/REGION] ||
| **纹理（Texture）** | 指定表达式所取样的纹理。要设置纹理，请先在 内容浏览器 中选择纹理。然后，在此表达式的属性窗口中选择“纹理（Texture）”属性，并单击“使用当前选择（Use Current Selection）”按钮。|
| **取样类型（Sampler Type）** | 此节点所要取样并输出的数据类型。|
| Mip值模式（MipValueMode） | 选择如何根据计算的默认硬件来定制样本的MIP级别或导数。影响外观及性能。|
| [REGION:tablesection]输入[/REGION] ||
| **UV（UVs）** | 接收UV纹理坐标，以用于纹理。如果没有任何值输入到UV，那么将使用材质所应用到的网格体的纹理坐标。如果TextureSample代表立方体贴图纹理，那么UV坐标必须是三通道值，而不能是双通道值。|
| **DDX（UV）（DDX(UVs)）** | 接收UV输入的DDX以用于各向异性过滤。默认情况下，硬件自动执行此过滤，并且速度更快。但是在某些情况下，可能需要使用DDX材质表达式显式地设置此项目，以避免延迟贴花的2x2像素块瑕疵之类的瑕疵。仅当 **Mip值模式（MipValueMode）** = **导数（Derivative）** 时才可用。|
| **DDY（UV）（DDY(UVs)）** | 接收UV输入的DDY以用于各向异性过滤，这与DDX（UV）接收UV输入的DDX相同。|
| [REGION:tablesection]输出[/REGION] ||
| **RGB** | 输出颜色的三通道RGB矢量值。|
| R | 输出颜色的红色通道。|
| G | 输出颜色的绿色通道。|
| B | 输出颜色的蓝色通道。|
| A | 输出颜色的alpha通道。如果纹理未包含alpha通道，那么将“alpha”通道连接到任何内容（虽然在技术上不合法）的结果将始终为零（黑色）。|


![](TextureSampleExample.png)

为了更好地了解DDX（UV）和DDY（UV）输入，这里就是你可以执行的操作。但你应记住，其输出与 **Mip值模式（MipValueMode）** 为 **无（None）** 时相同，但速度较慢。仅当你因为要以不同于使用DDX/DDY材质表达式的方法进行计算而确实需要覆盖默认硬件计算时，才应使用DDX（UV）和DDY（UV）。

![](SampleTextureDerivative.png)

## TextureProperty

**TextureProperty** 用于公开你选择的纹理属性，例如纹理大小或纹素大小。

![](TextureProperty.png)

[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticleSubUV]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#TextureObjectParameter]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#TextureSampleParameter2D]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#TextureSampleParameterSubUV]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Parameters#TextureSampleParameterCube]


