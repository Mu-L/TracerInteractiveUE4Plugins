INTSourceChangelist:2690274
Availability:Public
Title:矢量表达式
Crumbs:%ROOT%, Engine, Engine/Rendering/Materials, Engine/Rendering/Materials/ExpressionReference
Description:用于输出矢量值（例如位置或法线）的表达式。
Version:4.9

[EXCERPT:TOC]
[TOC(start:2)]
[/EXCERPT:TOC]

[EXCERPT:ActorPositionWS]
(#ActorPositionWS)
## ActorPositionWS（Actor 全局空间位置）

**ActorPositionWS（Actor 全局空间位置）**输出 Vector3 (RGB) 数据，该数据代表使用此材质的对象在全局空间中的位置。 

![](ActorPositionColors.png)(w:434) ![](ActorPositionNetwork.png)(w:490)

在此示例中，您可以看到 ActorPositionWS（Actor 全局空间位置）直接输送到材质的“底色”（Base Color）。因此，此材质所应用于的每个球体在 3D 空间中移动到不同位置时将显示不同的颜色。请注意，ActorPositionWS（Actor 全局空间位置）节点的结果将除以 1600 以创建美观的混合颜色，而不是让颜色突变。

[/EXCERPT:ActorPositionWS]


[EXCERPT:CameraPositionWS]
(#CameraPositionWS)
## CameraPositionWS（摄像机全局空间位置）


**CameraWorldPosition（摄像机全局空间位置）**表达式输出三通道矢量值，该值代表摄像机在全局空间中的位置。

当摄像机旋转时，预览球体的颜色将发生变化。

![CameraPositionWSExample.png](CameraPositionWSExample.png)(w:450) ![](CameraPositionWSNetwork.png)(h:333)
[/EXCERPT:CameraPositionWS]

(#CameraVectorWS)
## CameraVectorWS（摄像机全局空间矢量）

**CameraVector（摄像机矢量）**表达式输出一个三通道矢量值，该值代表摄像机相对于表面的方向，即从像素到摄像机的方向。

**用法示例：**CameraVector（摄像机矢量）经常用来模拟环境贴图，方法如下：将 CameraVector（摄像机矢量）连接到 ComponentMask（分量蒙版），并使用 CameraVector（摄像机矢量）的 X 和 Y 通道作为纹理坐标。

[REGION:fullwidth]
![CameraVectorWSExample.png](CameraVectorWSExample.png)
[/REGION:fullwidth]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Constant#Constant2Vector]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Constant#Constant3Vector]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Constant#Constant4Vector]

(#LightVector)
## LightVector（光线矢量）
[REGION:warning]
**在虚幻引擎 4 中，建议您不要使用此表达式，因为照明计算现在延迟进行。**
[/REGION:warning]
[COMMENT:none]

LightVector（光线矢量）表达式是三通道矢量值，代表光线相对于表面的方向。

**用法示例：**LightVector（光线矢量）可用来计算定制照明算法，例如简单的朗伯（Lambert）照明模型。

![LightVectorExample.jpg](LightVectorExample.jpg)

[REGION:note]
	对自发光输出进行评估时，LightVector（光线矢量）表达式无效，此表达式只能用于 LightFunction（光线功能）或 DeferredDecal（延迟贴花）材质。
[/REGION]

[/COMMENT]


(#ObjectBounds)
## ObjectBounds（对象界限）

**ObjectBounds（对象界限）**表达式输出对象在每个轴上的大小。如果用作颜色，那么 X、Y 和 Z 轴分别对应于 R、G 和 B。 

![](ObjectBoundsScene.png)(w:411) ![](ObjectBoundsNetwork.png)

在以上示例中，您可以看到对象颜色对应于对象的最长轴。

[EXCERPT:ObjectOrientation]
(#ObjectOrientation)
## ObjectOrientation（对象方向）


**ObjectOrientation（对象方向）**表达式输出对象的全局空间向上矢量。即，对象的局部正向 Z 轴指向此方向。

![ObjectOrientationExample.png](ObjectOrientationExample.png)
[/EXCERPT:ObjectOrientation]


[EXCERPT:ObjectPositionWS]
(#ObjectPositionWS)
## ObjectPositionWS（对象全局空间位置）


**ObjectPositionWS（对象全局空间位置）**表达式输出对象界限的全局空间中心位置。例如，在为植物创建球面照明时，此表达式很有用。


![](WorldPositionWSScene.png)(w:450) ![](WorldPositionNetwork.png)(h:349)

[/EXCERPT:ObjectPositionWS]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticlePositionWS]


[EXCERPT:PixelNormalWS]
(#PixelNormalWS)
## PixelNormalWS（像素全局空间法线）

**PixelNormalWS（像素全局空间法线）**表达式输出矢量数据，该数据代表像素所面对的方向（基于当前法线）。

![PixelNormalWSExample.png](PixelNormalWSExample.png)

在此示例中，PixelNormalWS（像素全局空间法线）输送到“底色”（Base Color）。请注意，使用了法线贴图按像素产生结果。 

[/EXCERPT:PixelNormalWS]

(#ReflectionVectorWS)
## ReflectionVectorWS（反射全局空间矢量）

**ReflectionVectorWS（反射全局空间矢量）**表达式类似于 [CameraVectorWS（摄像机全局空间矢量）](#CameraVectorWS)，但是它输出三通道矢量值，该值代表反射在表面法线上的摄像机方向。

**用法示例：**ReflectionVector（反射矢量）通常用于环境贴图，其中，反射矢量的 X/Y 分量用作立方体贴图纹理的 UV。

[REGION:fullwidth]
![ReflectionVectorWSExample.png](ReflectionVectorWSExample.png)
[/REGION]

[EXCERPT:VertexNormalWS]
(#VertexNormalWS)
## VertexNormalWS（顶点全局空间法线）


**VertexNormalWS（顶点全局空间法线）**表达式输出全局空间顶点法线。它只能在顶点着色器（例如 WorldPositionOffset（全局位置偏移））中执行的材质输入中使用。此表达式对于使网格伸缩而言非常有用。请注意，使位置沿法线偏移将导致几何体沿 UV 缝合分裂。

[REGION:fullwidth]
![VertexNormalWSExample.png](VertexNormalWSExample.png)
[/REGION]

在以上示例中，预览球体随正弦运动而放大和缩小，这是因为每个顶点都在它们自已的法线方向上移动。

[/EXCERPT:VertexNormalWS]


