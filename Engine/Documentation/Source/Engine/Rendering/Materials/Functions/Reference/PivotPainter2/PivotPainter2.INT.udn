Availability:Public
Title:Pivot Painter Tool 2.0 Material Functions
Description: Material Functions designed to enable utilization of the Pivot Painter 2 MAXScript in an Unreal shader network.
Type:reference
Version:4.16
Parent:Engine/Rendering/Materials/Functions/Reference
Related:Engine/Content/Tools/PivotPainter/PivotPainter2
Related:Engine/Content/Tools/PivotPainter/PivotPainter2/Reference
Order:1
Topic-image:PivotPainter2MF_Topic.png
Social-image:PP2MaterialFunction_Social.png
Tags:Script
Tags:Pivot Painter
Tags:Materials


[TOC (start:2 end:3)]

[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:width]
	840
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	560
	[/PARAMLITERAL]
	[PARAMLITERAL:videoid]
	KO3y3b4cHb4
	[/PARAMLITERAL]
[/OBJECT]

Pivot Painter 2 Material Functions enable you to tap into and decode useful model information stored by Pivot Painter 2 MAXScript using textures. Each texture output by the MAXScript can be referenced directly in a Material but without applying the proper steps after sampling the texture the values would be incorrect. These Material Functions found in this page make it easy to quickly decode the texture information. 

A lot of the Material Functions included in this page will enable you to use the Pivot Painter 2 pivot and rotational information to do specific effects via your Material, however, one of
the greater benefits of Pivot Painter 2 is its ease of use with the provided sample shader for foliage; **PivotPainter2FoliageShader**. This specific Material Function enables you to 
quickly setup your model and its Pivot Painter 2 generated textures with your foliage to quickly create wind and turbulence without having to create your own Material network.




## Pivot Painter 2 Functions

The following is a list of all the functions related to Pivot Painter 2.0. 


### PivotPainter2FoliageShader

![](PP2_FoliageShader.png)

This Material Function contains texture and numeric parameters that should be altered to fit your particular asset. 

#### PivotPainter2FoliageShader Workflow

For this particular function, you should create a Material Instance of your Material so that you can access the Material Function's already setup parameters for wind and turbulence. 

Also, for this particular function, it is suggested that you create a Material Instance, where the Material Function's parameters will be accessible to make changes to your Pivot Painter 2 shader. 

[REGION:lightbox]
[![](PP2FoliageShaderMaterialInstanceParams.png)(w:300)](PP2FoliageShaderMaterialInstanceParams.png)
[/REGION]
[REGION:caption]
Click image for full size view
[/REGION]


[REGION:raw]
| Item | Description |
| --- | --- |
|[REGION:tablesection]Inputs[/REGION] ||
| **Material Attributes** | Make sure that you are using tangent space normals within your material and that the **Use Tangent Space Normals** option is unchecked. The normals will be transformed to world space internally. |
| **Pivot Painter Texture Coordinate** | Takes an input to reference which texture coordinate UV is being used. |
|[REGION:tablesection]Outputs[/REGION] ||
| **Final Material with World Space Normals** | This output material attribute replaces the input material attribute's world position offset and normal output if **Animate Level "X" Normals** is enabled in the Material Instance. [REGION:note] Updating the model's normals is fairly expensive and can be done selectively. [/REGION]|
| **Modified World Space Normal Component** | This output returns the modified asset normals by itself. |
| **World Position Offset Component** | This output returns the new world position offset values. |
[/REGION]



### ms_PivotPainter2_CalculateMeshElementIndex

![](PP2_CalculateMeshElementIndex.png)

This Material Function pulls the model's Element ID from the model's UVs.

[REGION:raw]
| Item | Description |
| --- | --- |
|[REGION:tablesection]Inputs[/REGION] ||
| **Data Texture Dimensions** | Use the texture property node to gather the texture's dimensions. |
| **Pivot Painter UV Coordinates** | Pulls the model elements element ID from the model's UVs. |
|[REGION:tablesection]Outputs[/REGION] ||
| **Index** | This output pulls the model element ID from the model's UVs. |
[/REGION]



### ms_PivotPainter2_Decode8BitAlphaAxisExtent

![](PP2_Decode8bitAlphaAxisExtent.png)

This Material Function rescales 8-bit axis extent texture data information from Pivot Painter 2 MAXScript into world space data.

[REGION:raw]
| Item | Description |
| --- | --- |
|[REGION:tablesection]Inputs[/REGION] ||
| **8 Bit Alpha Extent Value** | Insert a Pivot Painter 2 alpha texture component from a texture with an 8-bit alpha extent value. This can be generated by selecting the appropriate option from the alpha output drop-down option in the Pivot Painter 2 MAXScript under the Render Options. |
|[REGION:tablesection]Outputs[/REGION] ||
| **Rescaled Extent** | The output value represents the chosen models' length along a given axis starting at the object's pivot points. The return value can represent values between 8 to 2048 in increments of 8. |
[/REGION]



### ms_PivotPainter2_DecodeAxisVector

![](PP2_DecodeAxisVector.png)

This Material Function transforms Pivot Painter 2's local space vector information into world space vectors.

[REGION:raw]
| Item | Description |
| --- | --- |
|[REGION:tablesection]Inputs[/REGION] ||
| **Axis Vector RGB** | Input RGB vector information from a Pivot Painter 2 texture that output those values. |
|[REGION:tablesection]Outputs[/REGION] ||
| **Result** | The input axis vector information has now been transformed to world space. |
[/REGION]



### ms_PivotPainter2_DecodePosition

![](PP2_DecodePosition.png)

This Material Function transforms Pivot Painter 2's local space information into world position information.

[REGION:raw]
| Item | Description |
| --- | --- |
|[REGION:tablesection]Inputs[/REGION] ||
| **Position RGB** | Insert the RGB values of a texture that contain Pivot Painter 2 **Pivot Position (16-bit)** data. |
|[REGION:tablesection]Outputs[/REGION] ||
| **Result** | The output value is the world space location of each model's pivot point position as it was captured by Pivot Painter 2. |
[/REGION]

### ms_PivotPainter2_ReturnParentTextureInfo

![](PP2_ReturnParentTextureInfo.png)

This Material Function reads a parent sub-object's texture data using Pivot Painter 2's **Parent Index (Integer as Float)** texture data.

[REGION:raw]
| Item | Description |
| --- | --- |
|[REGION:tablesection]Inputs[/REGION] ||
| **Parent Index As Float** | This input assumes that the data is in float form. If you're reading from a parent index "int as float" texture, first decode  the asset using the Material Function **ms_PivotPainter2_UnpackIntegerAsFloat**. |
| **Texture Dimensions** | The current dimensions of the texture. |
| **Current Index** | Providing this value is only necessary if you would like to determine if this asset is a child of another component. |
|[REGION:tablesection]Outputs[/REGION] ||
| **Parent UVs** | This outputs the UV coordinates for the element's parent element pixel location.  |
| **Is Child?** | This returns 1 if the object is a child of another object. It returns 0 otherwise. This requires that the current index to be entered in the **Current Index** input. The current index can be found by using **ms_PivotPainter2_CalculateMeshElementIndex** if you are referencing your textures using the model's UVs. |
[/REGION]


### ms_PivotPainter2_UnpackIntegerAsFloat

![](PP2_UnpackIntegerAsFloat.png)

This Material Function decodes Pivot Painter 2's **Integer as Float** texture data. 

[REGION:raw]
| Item | Description |
| --- | --- |
|[REGION:tablesection]Inputs[/REGION] ||
| **Integer as Float** | This decodes the integer data for conversion to float data.  |
|[REGION:tablesection]Outputs[/REGION] ||
| **Result** | This outputs Pivot Painter integer as float data. |
[/REGION]






