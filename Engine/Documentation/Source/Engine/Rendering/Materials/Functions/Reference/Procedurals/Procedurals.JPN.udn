INTSourceChangelist:3807090
Availability:Public
title:Procedurals
Crumbs: %ROOT%, Engine, Engine/Rendering/Materials,  Engine/Rendering/Materials/Functions
Description:既存の高さマップから法線マップを作成するなどプロシージャルに生成されたテクスチャや演算子
Version:4.9
tags:Materials

[TOC (start:2 end:3)]



**プロシージャル** 関数は、シンプルなプロシージャルに生成されたテクスチャやマスクを迅速に作る方法を提供します。これにより、インポートしたテクスチャを使用しなければならない場合に比べてメモリを節約します。

## プロシージャル関数

以下は Procedurals カテゴリに属する全関数のリストです。

### GeneratedBand

**GeneratedBand** 関数はデフォルトの TextureCoordinates から水平、垂直のバンドを生成します。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Width (Scalar)** | プロシージャルなバンドの幅を計算する 0-1 の値。デフォルトは 0.25 です。|
| **Sharpness (Scalar)** | バンドのエッジのフォールオフを制御します。設定を 100 にすると、エイリアシングがある非常にはっきりとしたバンドになります。|
| **Offset (Scalar)** | テクスチャ空間周囲でバンドをスライドさせます。|
| **Direction Switch (StaticBool)** | *true* に設定するとバンドは水平ではなく垂直になります。デフォルトは *false*、すなわち水平です。|
| **Compare (Scalar)** | これはバンドを作るためにテクスチャ座標が比較される値です。デフォルトは 0.5 です。
| **Input Coordinates (Vector2)** | 関数に既に組み込まれているデフォルトではなく、UV のカスタム セットを受け取ります。|


![GeneratedBand](GeneratedBand_Demo.png)

### GeneratedOffsetBands

GeneratedBand 関数と同様に **GeneratedOffsetBands** は UV 空間上にプロシージャルに生成されたテクスチャのバンドを作ります。しかし、この関数は 1 つではなく、複数のバンドを作ることがあります。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Width (Scalar)** | プロシージャルなバンドの幅を計算する 0-1 の値。デフォルトは 0.25 です。|
| **Sharpness (Scalar)** | バンドのエッジのフォールオフを制御します。設定を 100 にすると、エイリアシングがある非常にはっきりとしたバンドになります。|
| **Offset (Scalar)** | テクスチャ空間周囲でバンドをスライドさせます。|
| **Direction Switch (StaticBool)** | *true* に設定するとバンドは水平ではなく垂直になります。デフォルトは *false*、すなわち水平です。|
| **Compare (Scalar)** | これはバンドを作るためにテクスチャ座標が比較される値です。デフォルトは 0.5 です。
| **Bands (Scalar)** | バンドの合計数を変更します。|
| **Input Coordinates (Vector2)** | 関数に既に組み込まれているデフォルトではなく、UV のカスタム セットを受け取ります。|


![GeneratedOffsetBands](GeneratedOffsetBands_Demo.png)

### NormalFromHeightmap

この関数は、別個のテクスチャをメモリに読み込む代わりに、既存のブラックとホワイトの高さマップから法線マップを迅速に作成する手段となります。

[REGION:note]
	この関数は TextureSample ではなく TextureObject (T2d) 表現式ノードを受け取ります。
[/REGION]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Coordinates (Vector2)** | 高さマップの適切なスケーリング / タイリングの座標を受け取ります。|
| **Height Bias (Scalar)** | 高さマップから適切な高さを派生するために使用するスプレッドです。デフォルト値は 0.005 です。|
| **Height (Scalar)** | 法線マップの最終的な強度を制御します。デフォルトは 8 です。|
| **Heightmap In (TextureObject)** | TextureObject 表現式ノードから高さマップのテクスチャを受け取ります。|


![NormalFromHeightMap](NormalFromHeightMap_Demo.png)

### NormalFromHeightmapChaos

**NormalFromHeightMapChaos** 関数は高さマップを受け取り、それを 4 方向にパンします。次にその結果をブレンドして合わせて、無秩序にアニメートされた法線マップを作ります。

[REGION:warning]
	この関数は負荷が高いと考えられるため、注意深く使用してください。
[/REGION]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Coordinates (Vector2)** | 高さマップの適切なスケーリング / タイリングの座標を受け取ります。|
| **Height Bias (Scalar)** | 高さマップから適切な高さを派生するために使用するスプレッドです。デフォルト値は 0.005 です。|
| **Height (Scalar)** | 法線マップの最終的な強度を制御します。デフォルトは 8 です。|


![NormalFromHeightMapChaos](NormalFromHeightMapChaos_Demo.png)

[REGION:note]
	このドキュメントの執筆時点では、高さマップに対する入力値はありません。こうした入力値は、以下のステップを使用して追加できます。しかし、高さマップの入力値が見つかったら、これは修正済であり、以下のステップは不要です。
[/REGION]

![Input correction](NormalFromHeightMapChaos_Correction.png)(w:900)

1. 新規のマテリアル エディタで NormalFromHeightmapChaos の関数ノードを **ダブルクリック** して開きます。

2. **Texture Object** (T2d) 表現式ノードを探します。現在、その中にデフォルト (緑色のスライム) のテクスチャが入っているはずです。

3. **FunctionInput**  表現式ノードを作成し、それを 3 *Motion_4WayChaos* 関数ノード上の *Texture (T2d)* 関数ノードに接続します。

4. その新しい FunctionInput の表現式で **Input Type** のプロパティを *FunctionInput_Texture2D* に設定します。

5. その入力値にラベル付けするには、**Input Name** のプロパティを「Heightmap In」 に設定します。

6. オリジナルの *Texture Object (T2d)* 表現式ノードをその新規のFunctionInput 表現式ノードの *Preview* 入力値に接続します。
