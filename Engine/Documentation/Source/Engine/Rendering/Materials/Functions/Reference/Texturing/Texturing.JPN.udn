INTSourceChangelist:3807090
Availability:Public
Title:テクスチャリング
Crumbs: %ROOT%, Engine, Engine/Rendering/Materials,  Engine/Rendering/Materials/Functions
Description:UV の再投影、トリミングなど、テクスチャ作業の補助を目的に作成された幅広い機能
Version:4.9
tags:Materials

[TOC (start:2 end:3)]

テクスチャリング機能により、テクスチャベースの動作に対する特別な処理が可能になります。

## テクスチャリング機能

以下は、Texturing カテゴリにある全機能のリストです。

### CylindricalUVs

この機能は、オブジェクトの中央の周りに円柱型に投影された UV を使ってオブジェクトの周りのテクスチャをタイル処理します。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **TextureObject (Texture Object)** | Cylindrical UVs を使って投影されるテクスチャです。 |
| **In (Scalar)** | 投影円柱の高さをワールド空間単位で受け取ります。|
| **Normal (Vector3)** | 投影円柱を回転させるためのベクターを入力します。|
|[REGION:tablesection]出力値[/REGION] ||
| **Cylinder Projection** | 最終的なテクスチャをまるで円柱から投影されているように出力します。ただし、キャップがないので、テクスチャの上側と下側で詰まってしまう傾向があります。|
| **Cylinder Projection w Top** | 最終的なテクスチャをまるでキャップ付きの円柱から投影されているように出力します。|


![CylindricalUVs](CylindricalUVs_Demo.png)


### DetailTexturing

マテリアルのディテール テクスチャの作成プロセスを簡素化する関数です。オブジェクトに対する元となるディフューズと法線上で、ディフューズと法線マップの組み合わせをより高度に繰り返してレイヤーを重ねて、テクスチャ内にディテールの多い錯覚を与える関数です。近距離ではディテールの錯覚はさらに大きくなります。 

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Scale (Scalar)** | ディテール法線とディフューズのタイル処理を制御します。|
| **Diffuse (Vector3)** | さらにディテールを必要とする元となるディフューズ テクスチャです。|
| **DetailDiffuse (Texture Object)** | 追加されたディテールのディフューズ テクスチャです。|
| **DiffuseIntensity (Scalar)** | 元となるディフューズへブレンドするために必要とするディテール ディフューズの量です。 |
| **Normal (Vector3)** | さらにディテールを必要とする元となる法線です。|
| **DetailNormal (Texture Object)** | 元となる法線マップにさらにディテールを追加するためのディテール法線です。|
| **NormalIntensity (Scalar)** | 元となる法線上に表示するディテール法線の量です。|
|[REGION:tablesection]出力値[/REGION] ||
| **Diffuse** | ディテール ディフューズ テクスチャとブレンドされた元となるディフューズ テクスチャの結果です。 |
| **Diffuse** | ディテール法線テクスチャとブレンドされた元となる法線テクスチャの結果です。 |


![DetailTexturing](DetailTexturing_Demo.png)

### LocalAlignedTexture

LocalAlignedTexture 関数は、ローカル空間のオブジェクト上のテクスチャをタイル処理します。

[REGION:note]
	この関数には法線用の入力がありますが、現時点では入力は機能しません。
[/REGION]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Normal (Vector3)** | オブジェクトのサーフェス リファレンスを使用するために法線を受け取ります。現時点ではこの入力は機能しません。
| **TextureObject (Texture Object)** | ワールド空間でタイル処理されるテクスチャを受け取ります。 |
|[REGION:tablesection]出力値[/REGION] ||
| **XY Texture** | ワールドの X と Y 座標 全体でタイル処理されたテクスチャの結果です。|
| **XYZ Texture** | ワールドの X、Y、Z 座標で全体でタイル処理されたテクスチャの結果です。|
| **Z Texture** | ワールドの Z 座標 全体でタイル処理されたテクスチャの結果です。|


![LocalAlignedTexture](LocalAlignedTexture_Demo.png)

### ZWorldSpaceFlow

ZWorldSpaceFlow 関数は、オブジェクトのタンジェント空間に沿ってテクスチャを押して、結果的にテクスチャがそのサーフェスに沿って「フロー」しているように見せる関数です。テクスチャをパンするバリエーションを同じ方向に 2 つ作ることでこのようにできますが、それぞれは若干オフセットしています。そして、片方をもう片方の上に繰り返しブレンドします。 

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **FlowTexture (Texture Object)** | オブジェクトのサーフェス全体にフローさせたいテクスチャです。|
| **FlowStrength (Scalar)** | 2 通りのテクスチャ ブレンド バージョンで発生するテクスチャ ブレンド量を制御します。これを微調整することで、ブレンドが発生するサーフェス エリアを制御します。|
| **FlowDirection (Vector2)** | テクスチャがフローする方向を制御する 2D ベクターです。|
| **UVs (Vector2)** | タイル処理を制御するテクスチャの既存の UV です。|
| **FlowSpeed (Scalar)** | サーフェス上をフローするテクスチャの速度です。|


![TangentSpaceFlow](ZWorldSpaceFlow_Demo.png)

### TextureCropping

TextureCropping 関数を使用すると、あるテクスチャをトリミングして小さくしテクスチャ座標プレーン上の位置をオフセットすることができます。エミッシブ テクスチャ リージョンの上に色のブロックを配置する場合に最適です。

[REGION:note]
	この関数は、Photoshop などの画像編集パッケージで使用されるような本来のトリミング操作は実際には行いません。むしろ、既存のテクスチャを UV テクスチャ空間の新しい座標へ再マップします。トリミングというよりはスケーリングです。ただし、マスクの生成やカラーをテクスチャ領域へ追加する場合もこの関数は非常に便利です。
[/REGION]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **UVs (Vector2)** | 新しくトリミングされたテクスチャで使用するテクスチャ座標です。|
| **TextureIn (Texture Object)** | トリミングされるテクスチャです。|
| **UpperLeftCorner (Vector2)** | 0-1 テクスチャ座標でテクスチャの新しい左上隅の位置です。|
| **LowerRightCorner (Vector2)** | 0-1 テクスチャ座標でテクスチャの新しい右上隅の位置です。|
|[REGION:tablesection]出力値[/REGION] ||
| **Cropped** | トリミング関数の結果です。タイリング操作の場合とよく似ています。|
| **CroppedMasked** | *UpperLeftCorner* と *LowerRightCorner* で定義された部分以外の領域を塗りつぶ (マスク)　しながら、トリミング関数の結果をレポートします。|
| **Crop UVs** | 新しくトリミングされたエリアの UV 座標です。|
| **Crop Mask** | トリミングされたエリアを表す黒のバックグラウンド (マスク) 上の白いエリアです。 |


![TextureCropping](TextureCropping_Demo.png)

### WorldAlignedNormal

WorldAlignedNormal は法線を受け取り、テクスチャをローカルにオブジェクトに合わせるというよりは、ワールドに対して合わせます。また、テクスチャ サイズ比ではなくてワールド単位でスケールします。

[REGION:note]
	この関数は、ワールド空間のテクスチャをワールド空間でタイル処理するので、アニメートされたオブジェクトをこの方法でテクスチャ化すると、テキストはそのままの位置で、オブジェクトがテキストの下にスライドする、「スイミング」が起こります。
[/REGION]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **TextureObject (Texture Object)** | ワールド空間でタイル処理されるテクスチャを受け取ります。 |
| **TextureSize (Vector3)** | X、Y、Z 軸に沿ったワールド単位のテクスチャサイズです。|
| **Normal (Vector3)** | ワールドの上方向軸の法線の方向を特定することができるので、この関数が使用する座標が回転します。デフォルトは 0、0、1、または Z-up です。|
| **WorldPosition (Vector3)** | 3D ワールド空間におけるテクスチャの開始点をオフセットします。|
|[REGION:tablesection]出力値[/REGION] ||
| **XY Texture** | ワールドの X と Y 座標で投影されたテクスチャの結果です。|
| **XYZ Texture** | ワールドの X と Y と Z 座標で投影されたテクスチャの結果です。|
| **XYZFlatTop** | ワールドの X と Y と Z 座標で投影されたテクスチャの結果です。|
| **Z Texture** | ワールドの Z 座標で投影されたテクスチャの結果です。|


![WorldAlignedNormal](WorldAlignedNormal_Demo.png)

[REGION:note]
床が回転してもテクスチャはワールド座標系に基づくことに留意してください。
[/REGION]

### WorldAlignedTexture

オブジェクトのサイズと回転に関係なく、ワールド空間のオブジェクトのサーフェスに渡りテクスチャをタイル処理する役割をもつ関数です。この関数を使うと、テクスチャが投影される方向を指定することができ、テクスチャ サイズ比ではなくてワールド単位でスケールされます。

[REGION:note]
	この関数は、ワールド空間のテクスチャをワールド空間でタイル処理するので、アニメートされたオブジェクトをこの方法でテクスチャ化すると、テキストはそのままの位置で、オブジェクトがテキストの下にスライドする、「スイミング」が起こります。
[/REGION]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **TextureObject (Texture Object)** | ワールド空間でタイル処理されるテクスチャを受け取ります。 |
| **TextureSize (Vector3)** | X、Y、Z 軸に沿ったワールド単位のテクスチャサイズです。|
| **WorldPosition (Vector3)** | 3D ワールド空間におけるテクスチャの開始点をオフセットします。|
| **ExportFloat 4 (StaticBool)** | 入力テクスチャのアルファ チャンネルを使用するかどうかを設定します。デフォルト設定は *false* です。|
| **World Space Normal (Vector3)** | ワールドの up 軸に対する法線の方向を指定し、それに合わせてこの関数が使用する座標を回転します。デフォルトは 0、0、1、または Z-up です。|
| **ProjectionTansitionContrast (Vector3)** | X、Y、Z に投影されると、 2 つの投影プレーンが交わるブレンドのコントラストを制御します。 |
|[REGION:tablesection]出力値[/REGION] ||
| **XY Texture** | ワールドの X と Y 座標で投影されたテクスチャの結果です。|
| **Z Texture** | ワールドの Z 座標で投影されたテクスチャの結果です。|
| **XYZ Texture** | ワールドの X と Y と Z 座標で投影されたテクスチャの結果です。|


![WorldAlignedTexture](WorldAlignedTexture_Demo.png)

[REGION:note]
床が回転してもテクスチャはワールド座標系に基づくことに留意してください。
[/REGION]

### 3DSandMayaUVCoordinates

入力 UV の緑のチャンネルを反転させて、左上ではなくて左下角の 0、0 座標 (3ds Max や Maya と同様) に配置する関数です。これらのアプリケーションから入力されるモデルの場合は、テクスチャを反転する必要がなくなるので重要です。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
* **UVChannel0** - UV チャンネル 0 から V を反転させた UV です。
* **UVChannel0** - UV チャンネル 1 から V を反転させた UV です。
* **UVChannel0** - UV チャンネル 2 から V を反転させた UV です。
* **UVChannel0** - UV チャンネル 3  から V を反転させた UV です。


![3DSandMayaUVCoordinates](3DSandMayaUVCoordinates_Demo.png)

### CustomRotator

テクスチャを回転させる関数です。ただし、イメージが回転する中心点をエクスポーズするという点で、この関数は基本的な Rotator expression ノードとは異なります。また、回転システムを 0-1 ベースへ変更するので、1 という値は完全な回転あるいは 360 度と見なされます。標準の Rotator 上では、完全に回転するためには Time input 約 25.1 必要です。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **UVs (Vector2)** | テクスチャの既存の座標を受け取ります。|
| **Rotation Center (Vector2)** | 回転の中心としての役割を果たすテクスチャ空間 0-1 の位置です。|
| **Rotation Angle (0-1) (Scalar)** | 0-1 フォーマットでのイメージの回転です。1 を完全な回転とします。|


![CustomRotator](CustomRotator_Demo.png)

### HeightLerp

ハイトマップと遷移位相値に基いて、2 つのテクスチャの間の線形補間を実行する関数です。Lerp を実行するハイトマップに沿って値を調節できます。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **A (Vector3)** | lerp 計算の最初のテクスチャです。|
| **B (Vector3)** | lerp 計算の 2 番目のテクスチャです。|
| **Transition Phase (Scalar)** | 遷移を実行するハイトマップの領域を定義する値です。この値を 0.5 にすると標準の lerp が実行されます。0 と 1 に向かって値を調整すると、それぞれ高さマップの上と下に向かってバイアスが生じます。
| **Height Texture (Scalar)** | lerp の操作に使用するハイトマップです。|
| **Contrast (Scalar)** | CheapContrast 関数を使ってコントラストの強調をハイトマップに適用します。|
|[REGION:tablesection]出力値[/REGION] ||
| **Results** | HeightLerp 関数によるブレンド結果です。|
| **Alpha** | コントラスト強調を適用させて、lerp で使用するアルファ値です。|
| **Alpha** | コントラスト強調を適用せずに、lerp で使用するアルファ値です。|


![HeightLerp](HeightLerp_Demo.png)

### CameraWorldBlend

カメラの角度に応じた 3 つのプライマリ ワールド ベクターに対するフォールオフ結果を出力します。カメラが見る方向に基いてテクスチャ間でブレンドする場合に使用します。

[REGION:warning]
	この関数はまだ開発中です。期待する結果がでない場合があります。
[/REGION]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Blend Power (Scalar)** | あるテクスチャから別のテクスチャへブレンドする割合です。|
| **Use Reflection Vector (StaticBool)** | *true* の場合、CameraVector (マテリアルの Normal 入力が結果に影響します) ではなく ReflectionVector を使用します。デフォルトは *false* です。ただし今回は、切り替え用の _false_入力データがないので、_false_ に設定したままでも結果に影響しません。|
| **Use Smoothable Normals (StaticBool)** | *true* の場合、CameraVector (Material's Normal input will effect results) ではなく ReflectionVector を使用します。デフォルトは *false* です。ただし今回は、切り替え用の _false_入力データがないので、_false_ に設定したままでも結果に影響しません。|
| **Smooth Reflection Percentage (Scalar)** | ブレンド前にサーフェスに適用する法線のスムーズ度です。|
|[REGION:tablesection]出力値[/REGION] ||
| **XY True** | サーフェスが XY プレーと平行になるので、フォールオフで白へブレンドされます。|
| **XZ True** | サーフェスが XZ プレーンと平行になるので、フォールオフで白へブレンドされます。|
| **YZ True** | サーフェスが YZ プレーンと平行になるので、フォールオフで白へブレンドされます。|


![CameraWorldBlend](CameraWorldBlend_Demo.png)

[REGION:note]
緑色のテクスチャはサーフェスが XY 面と平行になるとブレンドされ、赤色はどの位置でもブレンドされることに留意してください。
[/REGION]

### LocalSpaceSurfaceMirroring

この関数は、ある特定のローカル軸の方へ向いているサーフェスの全てのサーフェスに対してミラーリングを適用します。それ以外のサーフェス面はマスクされます。これらのマスクはスカラー値の入力によりオフセットされ、法線マップを計算全体に反映し凹凸を表現することができます。サーフェスのトポロジーに応じてミラーリングを行う必要がある場合に便利です。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Use NormalMap (StaticBool)** | 法線マップの適用後、サーフェスの方向を計算するか設定します。|
| **Normal Map (Vector 3)** | ローカル トポロジーの計算前に、オブジェクトのサーフェスの凹凸表現に使用する法線マップを受け取ります。|
| **In (Scalar)** | 結果として生じるマスクを移動するオフセット値です。|
|[REGION:tablesection]出力値[/REGION] ||
| **Local X** | ローカルの X 軸に面しているサーフェスのみ影響を及ぼすマスクされたミラー エフェクトを出力します。|
| **Local Y** | ローカルの Y 軸に面しているサーフェスのみ影響を及ぼすマスクされたミラー エフェクトを出力します。|
| **Local Z** | ローカルの Z 軸に面しているサーフェスのみ影響を及ぼすマスクされたミラー エフェクトを出力します。|

### SubUV_Function

複数のフレームのあるスプライト シートやテクスチャでのアニメーション処理に最適な関数です。テクスチャ オブジェクトを受け取り、出力に応じてそのテクスチャ上でそのフレームのブレンドされたアニメーションを表示する関数です。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Texture (Texture Object)** | 入力されるスプライト シート テクスチャです。|
| **UVs (Vector2)** | タイル処理が必要な場合のテクスチャ UV 座標です。|
| **SubImages (Vector2)** | 水平方向と垂直方向のテクスチャ上のフレーム数です。|
| **Frame (Scalar)** | アニメーションの現在のフレームです。ゼロベースで、10 進値でブレンドされます。例えば、値が 2.35 の場合、3 番目と 4 番目のフレームの間で 35% でブレンドされます。


![SubUV_Function](SubUV_Function_Demo.png)(w:800)

### TwoSidedTexturing

裏表のあるマテリアルの両面に個別のテクスチャ入力を与える関数です。マテリアルの *Two Sided* プロパティがアクティブでない場合、この関数では何も行われません。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Texture Side A (Vector3)** | ポリゴンの正の側 (外側) で使用されるテクスチャです。|
| **Texture Side B (Vector3)** | ポリゴンの負の側 (内側) で使用されるテクスチャです。|
| **Use Surface Normals (StaticBool)** | メッシュの入力法線マップを使用するかどうかをシェーダーに指示します。 |


![TwoSidedTexturing](TwoSidedTexturing_Demo.png)

### WorldCoordinate3Way

ワールド座標のオブジェクトのサーフェスにテクスチャを投影する関数です。ユーザーはエッジでどのように複数のテクスチャを一緒にブレンドするかを制御することができ、サーフェスに凹凸を付けるために法線マップを計算前に追加することができます。

[REGION:note]
	これらのテクスチャはワールド座標に沿って投影されるので、あるオブジェクトのモーションや回転はテクスチャがサーフェスに沿って「スイミング」する原因となります。
[/region]

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **XY Texture (Texture Object)** | XY プレーンに投影されるテクスチャです。|
| **YZ Texture (Texture Object)** | YZ プレーンに投影されるテクスチャです。|
| **XZ Texture (Texture Object)** | XZ プレーンに投影されるテクスチャです。|
| **XY Scale (Scalar)** | XY プレーンに投影されるテクスチャに適用されるスケーリングです。 |
| **YZ Scale (Scalar)** | YZ プレーンに投影されるテクスチャに適用されるスケーリングです。 |
| **XZ Scale (Scalar)** | XZ プレーンに投影されるテクスチャに適用されるスケーリングです。 |
| **Blend Exponent Y Z (Scalar)** | Y と Z に沿って投影されるテクスチャ間の遷移の比率を制御します。|
| **Blend Mult Y Z (Scalar)** | 側面の間のブレンドを乗算します。|
| **Blend Exponent X (Scalar)** | Y と Z に沿って投影されるテクスチャ間の遷移の比率を制御します。|
| **Blend Mult X (Scalar)** | 側面の間のブレンドを乗算します。|
| **Single Texture (StaticBool)** | _true_ に設定されている場合、 *XY Texture* 入力に適用されるテクスチャのみ使用し、3 つ全ての側面上に投影します。|
| **Normal (Vector3)** | 法線マップでブレンド計算を行い、それによりサーフェスが向く方向を決定します。|
| **WorldPosition (Vector3)** | 投影中心位置をオフセットすることができるオプション出力です。|
|[REGION:tablesection]出力値[/REGION] ||
| **XYZ Output** | 3 つ全てのテクスチャを、それぞれのプレーンから投影し、エッジでブレンドして出力します。|
| **XY** | XY プレーンに沿って投影されたテクスチャのみを投影します。|
| **XZ** | XZ プレーンに沿って投影されたテクスチャのみを投影します。|
| **YZ** | YZ プレーンに沿って投影されたテクスチャのみを投影します。|


![WorldCoordinate3Way](WorldCoordinate3Way_Demo.png)
[COMMENT:none]
-
### MF_TerrainHeightLerp

MF_TerrainHeightLerp はハイトマップ値に基いて 2 つのテクスチャ間のブレンドを可能にするという点で、 HeightLerp と似ています。ただし、テレイン レイヤーのブレンドを補助するための特別な設定とは異なります。ベースに配置するテクスチャ、一番上の層に配置するレイヤーを選択し、実質的に、テクスチャが配置される場所を制御しながら、両方にハイトマップを作成することができます。

| アイテム | 説明 |
| -------- | -------- |
| [REGION:tablesection]入力値[/REGION] ||
| **Base Diffuse (Vector3)** | ベースとして使用するテクスチャです。|
| **Base Normal (Vector3)** | ベース テクスチャに適用する法線マップです。|
| **Base Height (Scalar)** | ベース テクスチャが優先される場所を制御するハイトマップです。|
| **Layer Diffuse (Vector3)** | ベースとブレンドされるレイヤーのディフューズ テクスチャです。|
| **Base Normal (Vector3)** | レイヤー テクスチャに適用する法線マップです。|
| **Layer Height (Scalar)** | レイヤー テクスチャが優先される場所を制御するハイトマップです。|
| **Layer Alpha (Scalar)** | レイヤー テクスチャの可視性を制御するアルファ チャンネルです。|
| **Contrast (Scalar)** | レイヤー ハイトマップのコントラストを強調する値です。|
|[REGION:tablesection]出力値[/REGION] ||
| **Diffuse(RGB)** | ベース テクスチャとレイヤー テクスチャのブレンド結果である最終的なディフューズ テクスチャを出力します。|
| **Normal(RGB)** | ベース法線マップとレイヤー法線マップのブレンド結果である最終的な法線マップです。|
| **Height(R)** | 結果の最終的なハイトマップです。|
| **Alpha** | コントラストの強調を適用して、レイヤー テクスチャの可視性を制御するためのアルファ チャンネルです。|
| **Lerp Alpha No Contrast** | コントラストの強調は適用せずに、lerp を操作するためのアルファ チャンネルです。|


![MF_TerrainHeightLerp](MF_TerrainHeightLerp_Demo.png)(w:600)

 TODO
### WorldAlignedStain


[/COMMENT]
