Availability:Public
Title:Physically Based Materials		
Crumbs: %ROOT%, Engine
Description:An overview of the primary Material inputs and how best to use them.
Version: 4.9
parent:Engine/Rendering/Materials
order:13
topic-image:physically_based_topic.png
type:overview
tags:Physically Based Shading
tags:PBR
tags:Materials

[REGION:fullwidth]
![](PhysMatHeader.png)
[/REGION]


This document is designed to help those who need to quickly get up to speed in Unreal Engine 4's physically based Materials system. It assumes that you are
at least somewhat familiar with Material creation in the Unreal Engine, at least with Unreal Engine 3 or later. If you are completely new to Materials in Unreal,
you may prefer to start with the [](Engine/Rendering/Materials\IntroductionToMaterials) page.

Our goal here is to give you just the "plain-language essentials" on how to make standard Materials using this system, as it can be
confusing even for those with experience in previous Unreal Engine iterations. We will only be focusing on those aspects of Materials
that are involved with our physically based approach. For a complete rundown of the available inputs, check out [](Engine/Rendering/Materials\MaterialInputs).

## What Does Physically Based Mean?

Physically based shading means we approximate what light actually does as opposed to approximating what we
intuitively think it should do. The end result is more accurate and typically more natural looking. Physically
based Materials will work equally well in all lighting environments. In addition, the Material values can be
less complex and interdependent, resulting in a more intuitive interface. These benefits are applicable even for non-photorealistic
rendering as evident in the latest films from Pixar [[4]](#Smits) and Disney [[3]](#Burley).

For these reasons and more, Unreal Engine 4 has adopted a new physically based Material and shading model. For an in depth,
technical look at UE4's physically based Material and shading model, please refer to my SIGGRAPH presentation [[2]](#Karis).

## Material Parameters

In terms of the "physically based" aspect of our Materials system, there are really only 4 different properties with which you need to be familiar. These are:



* **Base Color** 
* **Roughness** 
* **Metallic**
* **Specular**


[REGION:note]
All of these inputs are designed to take in values between 0 and 1. In the case of _Base Color_, this means a color with RGB values that fall between 0 and 1.
[/REGION]

Physically based values can be measured from real world Materials. Some examples will be given below.

### Base Color

[EXCERPT:BaseColor] 
**Base Color** simply defines the overall color of the Material. It takes in a Vector3 (RGB) value and each channel is automatically clamped between 0 and 1.

If taken from the real world, this is the color when photographed using a polarizing filter 
(polarization removes the specular of nonmetals when aligned).

[REGION:fullwidth]
![](BaseColor_QS.png)
[/REGION]
[/EXCERPT:BaseColor]

[EXCERPT:MeasuredBaseColor] 
**Measured BaseColor values for nonmetals (intensity only):**

| Material       | BaseColor Intensity |
| -------------- | ------------------- |
| Charcoal       | 0.02                |
| Fresh asphalt  | 0.02                |
| Worn asphalt   | 0.08                |
| Bare soil      | 0.13                |
| Green grass    | 0.21                |
| Desert sand    | 0.36                |
| Fresh concrete | 0.51                |
| Ocean Ice      | 0.56                |
| Fresh snow     | 0.81                |

**Measured BaseColors for metals:**

| Material | BaseColor (R, G, B)   |
| -------- | --------------------- |
| Iron     | (0.560, 0.570, 0.580) |
| Silver   | (0.972, 0.960, 0.915) |
| Aluminum | (0.913, 0.921, 0.925) |
| Gold     | (1.000, 0.766, 0.336) |
| Copper   | (0.955, 0.637, 0.538) |
| Chromium | (0.550, 0.556, 0.554) |
| Nickel   | (0.660, 0.609, 0.526) |
| Titanium | (0.542, 0.497, 0.449) |
| Cobalt   | (0.662, 0.655, 0.634) |
| Platinum | (0.672, 0.637, 0.585) |
[/EXCERPT:MeasuredBaseColor] 

### Roughness

[EXCERPT:Roughness]
The **Roughness** input literally controls how rough the Material is. A rough Material will scatter reflected light in more directions than a smooth Material.
This can be seen in how blurry or sharp the reflection is or in how broad or tight the specular highlight 
is. Roughness of 0 (smooth) is a mirror reflection and roughness of 1 (rough) is completely matte or diffuse.
[/EXCERPT:Roughness]

![](roughness_nonmetal.png)(convert:false)
![](roughness_metal.png)(convert:false)
[REGION:caption]
Roughness 0 to 1. Nonmetal top, metal bottom.
[/REGION]

[INCLUDE:Engine/Rendering/Materials\PhysicallyBased#RoughnessSlider]


#### Mapping Roughness

[EXCERPT:RoughnessMap]
Roughness is a property that will frequently be mapped on your objects in order to add the most physical variation to the surface.
[/EXCERPT:RoughnessMap]

[REGION:fullwidth]
[INCLUDE:Engine/Rendering/Materials\PhysicallyBased#RoughBiasSlider]
[/REGION]

[EXCERPT:RoughnessTip]
[REGION:tip]
If you have been making Materials in previous iterations of the Unreal Engine and are not accustomed to physically-based Materials, keep in mind that Roughness maps are where you will handle most of your Specularity texturing.
[/REGION]
[/EXCERPT:RoughnessTip]


### Metallic

[EXCERPT:Metallic]
The **Metallic** input literally controls how "metal-like" your surface will be. Nonmetals have Metallic values of 0,
metals have Metallic values of 1. For pure surfaces, such as pure metal, pure stone,
pure plastic, etc. this value will be 0 or 1, not anything in between. When creating hybrid surfaces like corroded, dusty, or rusty metals,
you may find that you need some value _between_ 0 and 1. 
[/EXCERPT:Metallic]

![](metallic.png)(convert:false)
[REGION:caption]
Metallic 0 to 1
[/REGION]

[REGION:tip]
You may be reluctant at first to make any Material completely metallic. Resist!
[/REGION]

You will notice we have added a little bit of Roughness in this example. This was purely an artistic choice. 

[INCLUDE:Engine/Rendering/Materials\PhysicallyBased#MetallicSlider]


### Specular

[EXCERPT:Specular]
The **Specular** input should not be connected and left as its default value of 0.5 for most cases.

It is value between 0 and 1 and is used to scale the current amount of specularity on _non-metallic_ surfaces. It has no effect on metals.
[/EXCERPT:Specular]

[REGION:tip]
For very diffuse Materials, you may be inclined to set this to zero. Resist! All Materials 
have specular, see this post for examples [[5]](#Hable). What you really want to do for very 
diffuse Materials is make them rough.
[/REGION]

Commonly, if we modify Specular, we do so to add micro occlusion or small scale shadowing, say from cracks represented in the normal map. These are sometimes referred to as cavities.
Small scale geometry, especially details only present in the high poly and baked into the normal map, will not be picked up by the renderer's real-time shadows. To capture this shadowing, we generate a cavity map,
which is typically an AO map with very short trace distance. This is multiplied by the final BaseColor before output and multiplied with 0.5 (Specular default) as the Specular output.
To be clear this is BaseColor = Cavity*OldBaseColor, Specular = Cavity*0.5.

For advanced use, this can be used to control the index of refraction (IOR). We have not found this to be necessary for 99% of Materials. Below are Specular values based off of measured IOR.

**Measured Specular Values:**

| Material | Specular |
| -------- | -------- |
| Glass    | 0.5      |
| Plastic  | 0.5      |
| Quartz   | 0.570    |
| Ice      | 0.224    |
| Water    | 0.255    |
| Milk     | 0.277    |
| Skin     | 0.35     |


[INCLUDE:Engine/Rendering/Materials\PhysicallyBased#SpecularSlider]



![](measured_materials.png)(convert:false)
[REGION:caption]
Example measured Materials. Top: Charcoal, fresh concrete, worn asphalt. Bottom: Copper, iron, gold, aluminum, silver, nickel, titanium
[/REGION]


## References

(#Lagarde)
**1**. Lagarde, [Feeding a physically based shading model](http://seblagarde.wordpress.com/2011/08/17/feeding-a-physical-based-lighting-mode/)
(#Karis)
**2**. Karis, [Real Shading in Unreal Engine 4](https://de45xmedrsdbp.cloudfront.net/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf)
(#Burley)
**3**. Burley, [Physically-Based Shading at Disney](http://blog.selfshadow.com/publications/s2012-shading-course/burley/s2012_pbs_disney_brdf_slides_v2.pdf)
(#Smits)
**4**. Smits, [Reflection Model Design for WALL-E and Up](http://blog.selfshadow.com/publications/s2012-shading-course/smits/s2012_pbs_pixar_model_slides_v2.pdf)
(#Hable)
**5**. Hable, [Everything is Shiny](http://filmicgames.com/archives/547)




[COMMENT:none]
-----------

* **Base Color** - The color of your object. Similar to Diffuse in other Material systems, including UE3.
* **Metallic** - Literally, this controls how metal-like your surface will be. For pure surfaces, such as pure metal, pure stone, pure plastic, etc. this will be 0 _or_ 1, not anything in between. When creating surfaces like corroded or rusty metals, you may find that you need some value _between_ 0 and 1.
* **Roughness** - This controls how rough the surface is at the microscopic level. Surfaces such as mirrors or shiny plastic would have a very low Roughness value, very near 0. As you approach more matte-shaded objects, such as chalk or dull rubber, your Roughness increases. For believable realism, it is important to note that very rarely will a surface actually achieve Roughness values all the way to the extents of 0 and 1. Usually, they'll be something in between.




[EXCERPT:MetallicSlider]
[OBJECT:SliderSequence]
	[PARAMLITERAL:max]
	21
	[/PARAMLITERAL]
	[PARAMLITERAL:ext]
	jpg
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	Metallic
	[/PARAMLITERAL]
	[PARAM:caption]
	**Drag the slider to see the Metallic value update** 
	[/PARAM]
	[PARAM:image_list]
	![](Metallic_1.png)
	![](Metallic_2.png)
	![](Metallic_3.png)
	![](Metallic_4.png)
	![](Metallic_5.png)
	![](Metallic_6.png)
	![](Metallic_7.png)
	![](Metallic_8.png)
	![](Metallic_9.png)
	![](Metallic_10.png)
	![](Metallic_11.png)
	![](Metallic_12.png)
	![](Metallic_13.png)
	![](Metallic_14.png)
	![](Metallic_15.png)
	![](Metallic_16.png)
	![](Metallic_17.png)
	![](Metallic_18.png)
	![](Metallic_19.png)
	![](Metallic_20.png)
	![](Metallic_21.png)
	[/PARAM]
[/OBJECT]
[/EXCERPT:MetallicSlider]




[EXCERPT:RoughnessSlider]
[OBJECT:SliderSequence]
	[PARAMLITERAL:max]
	21
	[/PARAMLITERAL]
	[PARAMLITERAL:ext]
	jpg
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	Roughness
	[/PARAMLITERAL]
	[PARAM:caption]
	**Drag the slider to see the Roughness value update**
	[/PARAM]
	[PARAM:image_list]
	![](Roughness_1.png)
	![](Roughness_2.png)
	![](Roughness_3.png)
	![](Roughness_4.png)
	![](Roughness_5.png)
	![](Roughness_6.png)
	![](Roughness_7.png)
	![](Roughness_8.png)
	![](Roughness_9.png)
	![](Roughness_10.png)
	![](Roughness_11.png)
	![](Roughness_12.png)
	![](Roughness_13.png)
	![](Roughness_14.png)
	![](Roughness_15.png)
	![](Roughness_16.png)
	![](Roughness_17.png)
	![](Roughness_18.png)
	![](Roughness_19.png)
	![](Roughness_20.png)
	![](Roughness_21.png)
	[/PARAM]
[/OBJECT]
[/EXCERPT:RoughnessSlider]



[EXCERPT:RoughBiasSlider]
[OBJECT:SliderSequence]
	[PARAMLITERAL:max]
	21
	[/PARAMLITERAL]
	[PARAMLITERAL:ext]
	jpg
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	RoughBias
	[/PARAMLITERAL]
	[PARAM:caption]
	**Drag the slider to see the Roughness value update, biasing through a texture. The most interesting results are seen near 0.5.**
	[/PARAM]
	[PARAM:image_list]
	![](RoughBias_1.png)
	![](RoughBias_2.png)
	![](RoughBias_3.png)
	![](RoughBias_4.png)
	![](RoughBias_5.png)
	![](RoughBias_6.png)
	![](RoughBias_7.png)
	![](RoughBias_8.png)
	![](RoughBias_9.png)
	![](RoughBias_10.png)
	![](RoughBias_11.png)
	![](RoughBias_12.png)
	![](RoughBias_13.png)
	![](RoughBias_14.png)
	![](RoughBias_15.png)
	![](RoughBias_16.png)
	![](RoughBias_17.png)
	![](RoughBias_18.png)
	![](RoughBias_19.png)
	![](RoughBias_20.png)
	![](RoughBias_21.png)
	[/PARAM]
[/OBJECT]
[/EXCERPT:RoughBiasSlider]


[EXCERPT:SpecularSlider]
[OBJECT:SliderSequence]
	[PARAMLITERAL:max]
	21
	[/PARAMLITERAL]
	[PARAMLITERAL:ext]
	jpg
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	Specular
	[/PARAMLITERAL]
	[PARAM:caption]
	**Drag the slider to see the Specular value update.**
	[/PARAM]
	[PARAM:image_list]
	![](Specular_1.png)
	![](Specular_2.png)
	![](Specular_3.png)
	![](Specular_4.png)
	![](Specular_5.png)
	![](Specular_6.png)
	![](Specular_7.png)
	![](Specular_8.png)
	![](Specular_9.png)
	![](Specular_10.png)
	![](Specular_11.png)
	![](Specular_12.png)
	![](Specular_13.png)
	![](Specular_14.png)
	![](Specular_15.png)
	![](Specular_16.png)
	![](Specular_17.png)
	![](Specular_18.png)
	![](Specular_19.png)
	![](Specular_20.png)
	![](Specular_21.png)
	[/PARAM]
[/OBJECT]
[/EXCERPT:SpecularSlider]


[/COMMENT]
