INTSourceChangelist:4308189
Availability:Public
Title:파티클 라이트
Crumbs: %ROOT%, Engine, Engine/Rendering/LightingAndShadows
Description:VFX 아티스트에게 있어서 또하나의 무기, 파티클 라이트입니다.
Version: 4.9
tags:Particles
parent:Engine/Rendering/ParticleSystems
order:6
type:overview
topic-image:particleLights_topic.png

[TOC(start:2 end:2)]

[EXCERPT:PL001]
_CPU Particle Emitters_ (CPU 파티클 이미터)는 **캐스케이드** 에서 **Particle Light Module** (파티클 라이트 모듈)을 추가하여 각 파티클에 붙은 라이트로써 렌더링되도록 만들 수 있습니다. 주변 환경에 알아볼 만큼의 빛을 내뿜는 스파크나 화염같은 이펙트에 좋습니다.
[/EXCERPT:PL001]

## 준비 운동

파티클 라이트의 퍼포먼스 비용은 전적으로 화면에 얼마만큼의 오버드로를 발생시키느냐에 달렸습니다. 오버드로는 라이트 수에 영향받은 픽셀 수를 곱하여 계산합니다.

파티클 라이트 구성시의 일반적인 전략은 커다란 파티클 라이트를 아주 조금 만들거나, 조그만 파티클 라이트를 많이 만드는 것입니다. 파티클 라이트의 비용은 쉽게 감당할 수 없을만큼 늘어나기 때문에 항상 `ProfileGPU` 콘솔 명령으로 프로파일링 및 트윅 작업을 하는 것이 중요합니다. 그 비용은 _라이트_ 부분에 표시됩니다.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
bJ1xiMPl71Y
[/PARAMLITERAL]
[/OBJECT]

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
nyGqpilZe08
[/PARAMLITERAL]
[/OBJECT]

참고로 여기, 파티클 라이트 이미터만 가지고 위 애니메이션을 찍은 스틸 샷입니다.

![](PL_system_01_still.png)(h:407) ![](PL_system_02_still.png)(h:407)

첫 이미지에서 파티클 라이트는 이미 입체 파티클 시스템을 강조하기 위해 사용되었으며, 스파크와 플레어에 좀 더 물리적인 느낌을 내고 있습니다. 나아가 특정 순간에 존재하는 파티클 라이트는 극소수입니다. 두 번째 이미지에서 라이트는 시스템에 볼륨과 위치를 추가하고 있으나, 같은 효과를 내는 데 훨씬 더 많은 수(200 개 이상)의 파티클 라이트를 사용하고 있습니다.

## 용례

파티클 시스템에 라이트를 추가하는 것은 매우 간단합니다:

1. 캐스케이드에서 파티클 시스템을 엽니다.
1. 라이트가 있었으면 하는 이미터 아무 곳에 **우클릭** 합니다.
1. 모듈 리스트에 마우스를 내려 **라이트 -> 라이트** 로 갑니다.
	[REGION:lightbox]
	[![](PL_addLightModule.png)(w:830)](PL_addLightModule.png)
	[/REGION]
1. 새 라이트 모듈을 구성합니다.
	[REGION:lightbox]
	[![](PL_lightModuleAdded.png)(w:830)](PL_lightModuleAdded.png)
	[/REGION]


[REGION:note]
기억하실 것은, **라이트** 모듈은 CPU 파티클에만 작동되며, GPU 파티클에는 작동되지 않습니다. GPU 이미터에 모듈을 추가한다고 시스템이 깨지지는 않지만, 어떠한 작업도 하지 않으며, 리스트의 모듈 위에 커다란 빨강 _X_ 가 생깁니다.
[/REGION]

### 프로퍼티

![](PL_lightModuleProperties.png)

| 프로퍼티 | 설명 |
| -------- | ----------- |
| Use Inverse Squared Falloff | 역제곱 감쇠 사용 - 켜면 **Light Exponent** (라이트 지수)를 무시하고, 라이트의 반경에 따라 좀 더 현실적으로 감쇠되는 방식을 사용합니다. |
| **Affects Translucency** | 반투명에 영향 - 켜면 각 파티클 라이트는 라이팅된 반투명에 영향을 끼칩니다. 연기속을 지나가는 로켓의 불꽃 자취같은 것에 좋습니다. 이 프로퍼티로 렌더링되는 파티클마다 상당량의 비용이 추가되므로, 이 세팅을 켠 파티클은 조금만 둘 것을 추천합니다. |
| Preview Light Radius | 라이트 반경 미리보기 - **미리보기** 창에 라이트의 반경이 와이어프레임 구체로 표시됩니다. |
| Spawn Fraction | 스폰 백분율 - 파티클의 몇 퍼센트에 라이트를 붙일지를 정의합니다. 1.0 은 모든 파티클, 0.5 는 절반의 파티클, 0.1 은 파티클의 10% 를 나타냅니다. 최적화시 비용을 줄일 때 이 옵션을 사용하세요. |
| Color Scale Over Life | 수명에 따른 컬러 스케일 - Radius Scale (반경 스케일)처럼, 라이트의 컬러에 여기 입력된 값을 곱하여, 파티클의 컬러에 따라 라이트의 컬러에 오프셋을 적용합니다. |
| Brightness Over Life | 수명에 따른 밝기 - 라이트의 수명에 따른 밝기를 조절할 수 있습니다. |
| Radius Scale | 반경 스케일 - 파티클의 크기에 따라 라이트의 반경을 정의하는 배수입니다. X 축 스케일이 1 적용된 파티클은 **Radius Scale** 과 같은 반경을 가지겠지만, X 축 스케일이 10 인 파티클은 **Radius Scale** x 10 의 반경을 갖게 됩니다. |
| Light Exponent | 라이트 지수 - **Use Inverse Squared Falloff** (역제곱 감쇠 사용) 옵션이 꺼지면, 이 지수로 라이트 감쇠를 제어합니다. 수치가 클 수록 라이트 범위 외곽으로 갈 수록 점진적인 감쇠가 이루어지고, 수치가 작을 수록 라이트 범위 외곽에서 밝기가 급격히 떨어집니다. |



