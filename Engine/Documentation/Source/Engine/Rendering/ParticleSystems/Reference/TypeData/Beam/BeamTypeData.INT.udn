Availability:Public
Title:Beam Type Data
Crumbs: %ROOT%, Engine, Engine/Rendering/ParticleSystems, Engine/Rendering/ParticleSystems/Reference
Description:The Beam type data module indicates that the emitter should output beams - connecting particles to form a stream between a source point and a target point.
Version: 4.9
tags:Particles
tags:TypeData
order:1
topic-image:psys_beam.gif


[EXCERPT:Intro]
The **Beam** type data module indicates that the emitter should output beams - connecting particles to form a stream between a source point, such as the emitter, and a target point, such as a particle or Actor.
[/EXCERPT:Intro]

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
coXs-CmI_v8
[/PARAMLITERAL]
[/OBJECT]

The **Beam** type data module has the following properties:

| Property | Description |
| -------- | ----------- |
| [REGION:tablesection]Beam[/REGION] ||
| **Beam Method** | This enumeration allows for setting the method for generating your beam. It can be one of the following: [INCLUDE:#BeamMethod] |
| **Texture Tile** | The number of times to tile the texture along the beam. Currently, this is unimplemented. |
| **Texture Tile Distance** | The distance along the beam that represents one tile of the source texture. |
| **Sheets** | The number of sheets to render along the beam. Sheets will be evenly distributed around the beam path. For example, 2 sheets would form a cross if you were looking down the axis the beam is travelling down. |
| **Max Beam Count** | The maximum number of live beams the emitter is allowed to have. |
| **Speed** | The speed at which the beam should move from source to target when firing up. If the value is set to 0, the beam will instantaneously jump from the source to the target. |
| **Interpolation Points** | Indicates whether the beam should use the source and target tangents to interpolate a curve along the beam. If this value is less than or equal to zero, the beam will be a straight line between the source and target (i.e., no interpolation). If greater than zero, the beam will determine the path between source and target by interpolating between the two utilizing their respective tangent values. The number of steps it will use during this will be the value set in this property. |
| **Always On** | If _true_, the emitter will ensure there is always a live particle. |
| **Up Vector Step Size** | The approach to use for determining the Up vector(s) for the beam. [INCLUDE:#UpVectorStep] |
| [REGION:tablesection]Branching[/REGION] ||
| **Branch Parent Name** | Currently unused. |
| [REGION:tablesection]Distance[/REGION] ||
| **Distance** | This float distribution provides the distance along the X-axis the beam should travel when the BeamMethod is set to PEB2M_Distance. |
| [REGION:tablesection]Taper[/REGION] ||
| **Taper Method** | How the beam is tapered along its length. Can be one of the following values:  [INCLUDE:#TaperMethod] |
| **Taper Factor** | A distribution supplying the amount to taper the beam. When using a constant curve, a time value of 0.0 represents the taper at the source of the beam, while a time value of 1.0 is the target. |
| **Taper Scale** | The amount to scale the tapering. The final taper values used will be Taper = (TaperFactor * TaperScale). This is intended primarily to be used as a particle parameter distributor to allow game code to set scale factors on the tapering of the beam that correspond to its usage. |
| [REGION:tablesection]Rendering[/REGION] ||
| **Render Geometry** | If _true_, the actual geometry for the beam will be rendered. This should typically be enabled as the trail is not visible otherwise. |
| **Render Direct Line** | If _true_, a direct line will be rendered between the source and target of the beam. Used for debugging in Cascade. |
| **Render Lines** | If _true_, lines will be rendered along each segment of the beam. Used for debugging in Cascade. |
| **Render Tessellation** | If _true_, the tessellated path between the source and target will be rendered. Used for debugging in Cascade. |


[COMMENT:none]
 Begin Beam Includes 
[/COMMENT]
[COMMENT:none]

[EXCERPT:BeamMethod]
[REGION:simpletable]
| Method | Description |
| --- | --- |
| `PEB2M_Distance` | Use the distance property to emit a beam along the X-axis of the emitter. |
| `PEB2M_Target` | Emit a beam from the source of the emitter to the supplied target. |
| `PEB2M_Branch` | Currently unused. |
[/REGION:simpletable]
[/EXCERPT:BeamMethod]

[EXCERPT:UpVectorStep]
[REGION:simpletable]
| Value | Method |
| --- | --- |
| _0_ | The Up vector should be calculated at every point in the beam. |
| _1_ | The Up vector should be calculated at the start at the beam and then used at every point. |
| _N_ | An Up vector should be calculated every N points and interpolated between them. [INCLUDE:#UpVectorStepNote] |
[/REGION:simpletable]
[/EXCERPT:UpVectorStep]

[EXCERPT:UpVectorStepNote]
[REGION:note]
	This method is not currently supported
[/REGION]
[/EXCERPT:UpVectorStepNote]

[EXCERPT:TaperMethod]
[REGION:simpletable]
| Method | Description |
| --- | --- |
| `PEBTM_None` | No tapering is applied to the beam. |
| `PEBTM_Full` | Taper the beam relative to source moving to target, regardless of current beam length. |
| `PEBTM_Partial` | Currently unused. |
[/REGION:simpletable]
[/EXCERPT:TaperMethod]


[/COMMENT]
[COMMENT:none]
 End Beam Includes 
[/COMMENT]



