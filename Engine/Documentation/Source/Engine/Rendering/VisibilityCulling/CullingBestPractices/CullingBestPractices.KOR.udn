INTSourceChangelist:3782314
Availability: Docs
Title: 비저빌리티 컬링 모범 사례
Crumbs: %ROOT%, Engine, 
Description: 비저빌리티 컬링 모범 사례입니다.
Version: 4.13

[TOC(start:2 end:2)]



게임의 비저빌리티 컬링 디자인 및 작업을 할 때 따르면 좋을 모범 사례는 다음과 같습니다. 

## 큰 뷰 디스턴스

뷰 디스턴스가 크면 렌더링해야 하는 액터 수로 인해 퍼포먼스에 영향을 줄 수 있습니다. 커다란 오클루더로 뷰 디스턴스가 커지지 않도록 하면 액터를 쓸 데 없이 렌더링하지 않을 수 있습니다.
검사할 액터 수를 줄여 GPU 로 보낼 쿼리 수를 줄일 수 있습니다. 차례로 검사 및 렌더링할 액터 수가 줄어 퍼포먼스가 향상됩니다.

* 가급적 큰 오클루더를 사용합니다. 
* 컬 디스턴스 볼륨을 사용하여 뷰에 가려졌어도 원거리에서 잘 보이지 않는 작은 액터를 제거합니다.
* 가리지 못하는 반투명 액터의 오버드로 수를 제한합니다.

## 액터 GPU 쿼리로 인한 랙/갑툭튀 현상

비저빌리티 컬링에 뷰 프러스텀 및 하드웨어 오클루전 쿼리를 사용할 때 한 프레임 후 GPU 에서 읽어 오기 때문에 발생하는 일반적인 이슈입니다. 플레이어 카메라를 매우 빨리 회전하거나, 
플레이어가 라이팅이 어두운 코너를 도는 데 그 뒤의 라이팅이 대조적인 경우 흔히 발생합니다. 

* 다른 지오메트리를 사용하면 이 부작용을 숨기는 데 도움이 됩니다. 동굴 등 바깥이 밝은 어두운 지역에는 커다란 오클루더 메시로 외부를 막아 pop in (갑자기 툭 튀어나오는, 갑툭튀) 현상을 막고 빛도 차단하여 명확히 드러나지 않도록 합니다.
* 문제의 원인이 되는 액터의 바운드 스케일을 높입니다. 
* 지오메트리를 만들 때 작은 조각을 너무 많이 조립하지 않습니다. 벽, 바닥, 천장이 특히 그렇습니다.

## 애셋 구성

게임의 지오메트리를 생성할 때, 디자인 목적 및 재사용을 위해 지오메트리를 모듈식 조각으로 분해하는 것이 좋습니다. 하지만 디자인 프로세스에서 모듈화가 너무 심하게 하면 너무 작은 
조각으로 큰 지오메트리를 만들 수가 있습니다. 그래서 각 액터는 가시성 상태 검사를 해야 합니다. 합리적인 게임 디자인과 최고의 퍼포먼스를 내는 최적화 사이 균형을 찾는 것이 가장 좋습니다. 
가시성 검사에 필요한 쿼리 수를 줄이는 것이 최적화의 핵심이며 갑툭튀 현상을 줄일 수 있습니다. 

* 레벨을 만들 때 구조적 표면에는 작은 조각으로 분해해서 조립하기 보다는 큰 지오메트리를 사용하세요. 하나의 액터가 아닌 작은 액터를 다수 테스트하면 GPU 에 영향이 큽니다.
* 메시 구조를 고려하면 액터 갑툭튀 현상이 줄어듭니다.


## 오클루전 vs 디스턴스 컬링 비용 고려

오클루전 및 비저빌리티 컬링 메서드는 디스턴스 컬링보다 비용이 훨씬 많이 드는데, GPU 쿼리가 필요하기 때문입니다. 즉 원거리 부분은 어차피 씬의 일정 부분에 가려진다 하더라도 
컬 디스턴스 볼륨을 설정하는 것이 좋습니다.

* 컬 디스턴스 볼륨을 잘 활용하면 오클루전 컬링 비용을 줄일 수 있습니다.
* 디스턴스 또는 오클루전 컬링에 의존하기 보다는 가급적 레벨 스트림 아웃이 좋습니다.
* `Stat Initviews` 명령으로 퍼포먼스 균형을 유지하세요.

레벨 스트리밍 관련 정보는 [](Engine/LevelStreaming) 문서를 참고하세요.
