INTSourceChangelist:3439587
Availability:Public
Title:动画和动画混合
Crumbs: %ROOT%, Engine, Engine/Sequencer, Engine/Sequencer/HowTo
Description:说明如何在 Sequencer 中将动画应用到骨架网格体并混合动画。 
Version:4.15
SkillLevel:Intermediate
parent:Engine/Sequencer/HowTo
order:1
checkpoint: editorqs
Related:Engine/Sequencer/Overview
Related:Engine\Sequencer\ReferenceEditor\
tags:Sequencer

创建影片序列时，有时可能需要角色在场景中四处移动，或者执行一些动画。
在 **Sequencer** 实现这种效果的方法是为关卡序列添加一个骨架网格体 Actor，然后添加一个动画子轨迹，并指定 Actor 需要执行的动画。
重复此流程，为 Actor 添加不同类型的动画，使影片序列中的角色活灵活现！

我们将在此指南中创建一个小场景，其中的角色将以行走开始，然后混合到跳跃动画中。 

## 步骤

[REGION:note]
在此指南中，我们使用的是启用了 **Starter Content** 的 **Blueprint Third Person Template** 项目。 
[/REGION]

1.	点击项目中工具栏下的 **Cinematics** 按钮和 **Add Level Sequence**。 

	![](CharacterAnim_01.png)

1.	在 **Content Browser** 下的 **Content/Mannequin/Character/Mesh** 中，将 **SK_Mannequin** 拖入关卡。 

	![](CharacterAnim_02.png)

1.	保持 **SK_Mannequin** 的选中状态，点击 Sequencer 中的 **Add** 按钮将其添加到关卡序列。 

	![](CharacterAnim_03.png)

1.	点击新骨架网格体轨迹中的 **Animation** 按钮，指定 **ThirdPersonWalk** 动画。 

	![](CharacterAnim_04.png)

1.	展开 **Animation**，然后将 **时间轴** 拖至第 **30** 帧处。 

	![](CharacterAnim_05.png)

1.	再次点击 **Animation** 按钮并添加 **ThirdPersonJump_Start** 动画。 

	![](CharacterAnim_06.png)

	现在播放动画会发现两个动画之间存在跳动。 

	[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:width]
	640
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	360
	[/PARAMLITERAL]
	[PARAMLITERAL:videoid]
	oHjDpYPAdCo
	[/PARAMLITERAL]
	[/OBJECT]

	添加动画时，可以使用加权值在多个动画之间进行混合。这就是处理动画之间跳动的方法。 

1.	将下方的 **ThirdPersonJump_Start** 动画拖至行走动画下方，并回到序列的第 **25** 帧。 

	![](CharacterAnim_07.png)

1.	展开两个子动画轨迹并点击行走轨迹上的 **add key** 按钮，为跳跃开始动画的值设为 **1.0** 和 **0.0**。 

	![](CharacterAnim_08.png)

	这将关闭跳跃开始动画的播放，因其权重值为 0.0。 

1.	拖至第 **30** 帧并分别在行走和跳跃动画上添加 **0.0** 和 **1.0** 的键。 

	![](CharacterAnim_09.png)

	这将混入跳跃开始动画，混出行走动画。 

1.	点击 **Preview Play** 按钮观看动画混合。 


## 最终结果

现在序列便包含骨架网格体和多个顺畅混合的动画，动画之间不会出现跳动。 

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
kVotxriT1Y4
[/PARAMLITERAL]
[/OBJECT]

还可在此例基础上进行拓展：加入跳跃循环和跳跃结束动画，并将它们混入，使角色能够跳跃和落地。 
