Availability: Public
Title:Blending Animations & Properties
Crumbs: %ROOT%, Engine, Engine/Sequencer, Engine/Sequencer/HowTo
Description:Illustrates how you can apply animation to a Skeletal Mesh Actor in Sequencer and blend animations as well as blend property values. 
Type: how-to
SkillLevel: Intermediate
Version: 4.17
Parent: Engine/Sequencer/HowTo
Order: 1
Tags: Sequencer
Related: Engine/Sequencer/Overview
Related: Engine\Sequencer\ReferenceEditor\
type:how-to

When creating cinematic sequences, there may be times where you want to have a character in your scene move around or perform some kind of animation.
In **Sequencer**, this is done by adding a Skeletal Mesh Actor to a Level Sequence then adding an Animation sub-track and specifying the animation that you want the Actor to perform.
Sequencer enables you to crossfade and blend animations (as well as property values) automatically by dragging and dropping a property tracks onto an existing property track. 
When doing so, an automatic blend is applied which you can tune and tweak with easing properties or by defining your own custom curve asset. 

In this guide, we create a sample sequence of animations where a character blends from a walk into a jump and back to a walk again. 

![](AnimationBlending.png)(w:720)

## Steps

[REGION:note]
For this how-to, we are using the **Blueprint Third Person Template** project with **Starter Content Enabled**. 
[/REGION]

1.	Inside your project, from the Main Toolbar, click the **Cinematics** button and **Add Level Sequence**. 

	![](CharacterAnim_01.png)

1.	In the **Content Browser** under **Content/Mannequin/Character/Mesh**, drag the **SK_Mannequin** into the level. 

	![](CharacterAnim_02.png)

1.	With the **SK_Mannequin** asset still selected, click the **Track** button in Sequencer to add it to your Level Sequence. 

	![](CharacterAnim_03.png)

1.	Click the **Animation** button on the new Skeletal Mesh Track and assign the **ThirdPersonWalk** animation. 

	![](CharacterAnim_04.png)

1.	Scrub the timeline to **30** and click the **Animation** button and add the **ThirdPersonJump_Start** animation. 

	![](CharacterAnim_05.png)

1.	Left-click and drag the **ThirdPersonJump_Start** animation in the tracks window onto the **ThirdPersonWalk** back to frame **25**. 

	![](CharacterAnim_06.png)

	[REGION:tip]
	When dragging an animation on the timeline, negative numbers indicate how many frames you're moving back in the timeline, whereas positive numbers indicate how many frames you're moving forward in the timeline.
	[/REGION]

1.	Add the **ThirdPersonJump_Loop** at frame **39**, then drag it backwards onto **ThirPersonJump_start** and crossfade it starting at frame **34**. 

	![](CharacterAnim_07.png)

1.	Add the **ThirdPersonJump_End** animation and crossfade it **2** frames. 

	![](CharacterAnim_08.png)

1.	Add the **ThirdPersonWalk** and crossfade it for **3** frames. 

	![](CharacterAnim_09.png)

1.	At the start of one of the crossfades, right-click on the up triangle icon to bring up the **Easing Curve** options. 

	![](CharacterAnim_10.png)

1.	Under the **Options** section, select any of the desired **Easing** options to define how the curve is performed. 

	![](CharacterAnim_11.png)

	Alternatively, you can change the **Method** to **Curve Asset**. 

	![](CharacterAnim_12.png)

	When doing so, the **Option** section will enable you to define which custom **Curve** asset you want to use. 

	![](CharacterAnim_13.png)

1.	Scrub the timeline through the sequence to see the blending or click the **Preview Play** button. 


## End Result

Your sequence now includes a Skeletal Mesh with multiple animations that smoothly blend together with easing options available that you can use to tune the blend. 

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:videoid]
ZV_jKfrmVM0
[/PARAMLITERAL]
[PARAMLITERAL:width]
100
[/PARAMLITERAL]
[PARAMLITERAL:height]
56.25
[/PARAMLITERAL]
[PARAMLITERAL:units]
%
[/PARAMLITERAL]
[PARAMLITERAL:type]
simple
[/PARAMLITERAL]
[/OBJECT]

### Blending by Weight Values

Another method of animation blending can be performed using the **Weight** sub-tracks on an animation track. 

Below, we have one animation with a Weight value of **1.0** and another animation with a Weight value of **0.0**. 

![](CharacterAnim_14.png)

We then scrub the timeline ahead and reverse the Weight values for each which produces an interpolation between the two values causing the animations to blend.

![](CharacterAnim_15.png)

### Blending Property Values

Blending is not restricted to animations, any 2D/3D transforms, vectors, colors, or floats can also be automatically blended. 

By default, transform, vector, colors and similar tracks are set to **Infinite** which means the property value is persistent throughout the sequence. 
By turning this option off and using property **Sections**, you can blend those Sections together. In the example video below, we blend the color of a light over time within Sequencer using a similar approach to this guide. 

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:videoid]
w9j6RaMG9Nc
[/PARAMLITERAL]
[PARAMLITERAL:width]
100
[/PARAMLITERAL]
[PARAMLITERAL:height]
56.25
[/PARAMLITERAL]
[PARAMLITERAL:units]
%
[/PARAMLITERAL]
[PARAMLITERAL:type]
simple
[/PARAMLITERAL]
[/OBJECT]





