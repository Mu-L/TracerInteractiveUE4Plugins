Availability: Public
Title:Asset vs. Instance
Crumbs:%ROOT%, Engine, Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor
Description:A look at the difference between painting on assets and painting on an individual instance.
Version: 4.9

When painting Vertex Colors, you are only painting on an individual **Instance** of the material and not the actual material asset itself. 
If you want to apply the vertex color data to another instance of the mesh, you can copy and paste the data onto another mesh or multiple meshes. 

When painting vertex colors, the **Instance Vertex Colors** field will display information about the selected mesh(es).

![](VertexColorData_Mem.png)

This displays the _number of bytes of memory used_ by the vertex color data (stored in the map package.)  This value reflects the total for all assets that are currently selected.  

| **Command** | **Description** |
| --- | --- |
|**Copy**| Copies the instance vertex color data for the selected mesh. See [Sharing Instance Color Data](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/SharingColorData) for more information. |
|**Paste**| Pastes instance vertex color data that was previously copied. See [Sharing Instance Color Data](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/SharingColorData) for more information. |
|**Remove**| Discard the data for all selected meshes and restores the default vertex colors. |
|**Fix**| Attempts to match stored instance data on re-imported meshes with different vertex counts. See [Vertex Color Matching](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/VertexColorMatching) for more information. |
