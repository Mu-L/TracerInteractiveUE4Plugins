Availability: Public
Title:Colors vs. Blend Weights
Crumbs:%ROOT%, Engine, Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor
Description:An overview of painting colors onto a mesh vs. painting texture blending weights.
Version: 4.9





Instead of painting colors directly, you can switch the tool to _paint texture blend weights_.  This is useful as often you will configure your material to use the vertex color channels as blend factors between two or more textures.  The Mesh Paint tool will help you out here by **automatically normalizing your blend weights** as you paint.  You simply select a texture index and start painting, and the tool will make sure the color/alpha values are set correctly.

When the **paint mode** is set to _blend weights_, you have these options available.

![](BlendWeightMode.png)

|**Option**|**Description**|
|---|---|
|**Texture count**|Configures the blend weight "strategy" by setting the number of textures you are blending between in the material associated with the mesh.  When you change this option, the choices available for _Paint texture_ and _Erase texture_ will update.  Each setting requires a different type of material to be in place in order to be used properly. See the [Material Setup page](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/MaterialSetup) for more information.[INCLUDE:#TextureCount]|
|**Paint texture**|Selects the texture index to apply each time you click or move the mouse cursor while painting is enabled. (**Ctrl+LMB+drag**)|
|**Erase texture**|The texture index to use as your "eraser" texture while erasing. (**Ctrl+Shift+LMB+drag**)|


Note that you can click the Swap button ![](button_swap.png) between _Paint texture_ and _Erase texture_ to quickly swap the two texture indices.



[COMMENT:none]
Includes--


[EXCERPT:TextureCount]
[REGION:simpletable]
|**Setting**|**Description**|
| --- | --- |
|_2 (alpha lerp)_|**Provides 2 texture channels**, which will be controlled by painting alpha. This means the material will use only alpha values of 0 (black) and 1 (white) for blending. This setting requires that the object have a 2-way alpha lerp blend material applied, similar to the one demonstrated on the [2-Way Texture Blend material setup page](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/MaterialSetup/2Way).|
|_3 (RGB)_|**Provides 3 texture channels**, which will be controlled by painting RGB values. This means the material will use only RGB values to blend textures. This setting requires that the object have a 3-way lerp blend material applied, similar to the one demonstrated on the [3-Way Texture Blend material setup page](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/MaterialSetup/3Way).|
|_4 (ARGB)_|**Provides 4 texture channels**, which will be controlled by painting ARGB values. This means the material will use only RGB values - as well as alpha - to blend textures. This setting requires that the object have a 4-way lerp blend material applied, similar to the one demonstrated on the [4-Way Texture Blend material setup page](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/MaterialSetup/4Way).|
|_5 (one minus ARGB)_|**Provides 5 texture channels**, which will be controlled by painting ARGB values. This means the material will use only RGB values - as well as alpha - to blend the first four textures. An internal _one minus_ calculation on the alpha provides a fifth channel for blending. This setting requires that the object have a 5-way lerp blend material applied, similar to the one demonstrated on the [5-Way Texture Blend material setup page](Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/MaterialSetup/5Way).|
[/REGION]
[/EXCERPT:TextureCount]







--End Includes
[/COMMENT]
