INTSourceChangelist:2693476
Availability:Public
Title:4 種類のブレンドマテリアル
Crumbs:%ROOT%, Engine, Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor, Engine/UI/LevelEditor/Modes/MeshPaintMode/VertexColor/MaterialSetup
Description:4 種類 (ARGB) のテクスチャブレンディングのマテリアル設定ガイド
Version:4.9
SkillLevel:Intermediate




ブレンドウェイト設定で 4 つのテクスチャを処理するには、以下のようなマテリアルを作成する必要があります。

![](4-way_material.png)

この方法は 3 種類を使用した設定と良く似ていますが、アルファ値を混ぜることで 4 番目のブレンディングオプションが与えられます。以下のことが起こります。

* 各カラーチャンネル (ARGB) は、独自の線形補間の計算式を取得します。 
* 各テクスチャは、それぞれが対応する Lerp (線形補間) ノードの B 入力に接続します。
* Texture1 に対応する Lerp がマテリアルに接続し、そのアルファが頂点カラーのアルファ チャンネルによって決定されます。
* Texture2 に対応する Lerp が Texture1 に対応する Lerp の A 入力に接続し、そのアルファが頂点カラーの Red チャンネルによって決定されます。
* Texture3 に対応する Lerp が Texture2 に対応する Lerp の A 入力に接続し、そのアルファが頂点カラーの Green チャンネルによって決定されます。
* Texture4 に対応する Lerp が Texture3 に対応する Lerp の A 入力に接続し、そのアルファが頂点カラーの Blue チャンネルによって決定されます。
* 最終的に Texture1 へ戻り、最後となる 4 番目の Lerp の A プラグになります。これにより、Texture1 はデフォルト テクスチャとなります。


これが一度設定されると、ブレンドウェイトの _Texture Count_ 設定が **4 (ARGB)** にセットされます。 

![](4-Way_Setting.png)

こちらがこのマテリアルの例です。 RGB モードで表示されたメッシュを筆頭に、配置された頂点カラーを表示します。この設定では、 _アルファ_ (黒で表示) が Texture1 に対応、 _赤_ が Texture2 に対応、 _緑_ が Texture3 に対応、 _青_ は Texture4 に対応していることにご注目ください。

![](4-Way_RGB.png)(w:400)

こちらが最終結果となります。

![](4-way_Result.png)(w:400)

最初の画像で、頂点カラーの黒 (Texture1) の部分には変化がないことに留意してください。これは、Texture1 が 4 番目の Lerp 式 (上記参照) のA 入力にも接続されており、デフォルトテクスチャとなっているからです。基本的に、Texture1 から開始して、Texture2、3、4 と適切な色をペイントしていきます。または Texture1 の色をTextures 2、3、4 に適用することができます。

[REGION:note]
	このようなマテリアルを繰り返し設定される場合、カスタム [マテリアル関数](Engine/Rendering/Materials/Functions) を配備するのに最適な場所となります！
[/REGION]

