INTSourceChangelist:3782314
Availability:Public
Title:视图模式
Crumbs:%ROOT%, Engine, Engine/UI, Engine/UI/LevelEditor/Viewports
Description:本文提供视口内可用视图模式的说明。
Version:4.9
topic-image:ViewModes_Topic.png


[VAR:WireSize]462[/VAR]

[REGION:fullwidth]
![](ViewMode_Header.png)
[/REGION]

[TOC(start:2 end:2)]



[EXCERPT:Intro]
虚幻编辑器视口提供了许多可视化模式来帮助您查看场景中正在处理的数据类型，以及诊断任何错误或意外结果。较为常用的视图模式有自己的热键，但所有视图模式都可从视口内通过 **视图模式（View Mode）**菜单进行访问。

![](ViewModeMenu.png) ![](ViewModes_SubMenu_button.png)(h:273)
[/EXCERPT:Intro]

(#Lit)
## 照亮

[REGION:fullwidth]
![](VM_Lit.png)
[/REGION]

* 视图模式热键：**Alt + 4**
* 控制台命令：`viewmode lit`

**照亮** 视图模式显示应用所有材质和照明之后的场景最终结果。

(#Unlit)
## 不照亮

[REGION:fullwidth]
![](VM_Unlit.png)
[/REGION]


* 视图模式热键：**Alt + 3**
* 控制台命令：`viewmode unlit`

**不照亮** 视图模式从场景中移除所有照明，从而只显示底色。


(#Wireframe)
## 线框

[REGION:fullwidth]
![](VM_Wireframe.png)
[/REGION]

* 视图模式热键：**Alt + 2**
* 控制台命令：`viewmode wireframe`

**线框** 显示场景中的所有多边形边缘。对于“画刷”，您将看到所产生的几何体。

(#DetailLighting)
## 细节照明

[REGION:fullwidth]
![](VM_DetailLighting.png)
[/REGION]

* 视图模式热键：**Alt + 5**
* 控制台命令：`viewmode lit_detaillighting`

**细节照明** 使用原始材质的法线贴图在整个场景内激活中性材质。这对于进行隔离而言非常有用，而无论底色是否因为过暗或噪声过高而遮蔽了光线。

(#LightingOnly)
## 仅照明

[REGION:fullwidth]
![](VM_LightingOnly.png)
[/REGION]

* 视图模式热键：**Alt + 6**
* 控制台命令：`viewmode lightingonly`

**仅照明** 显示仅受照明影响的中性材质。此模式与 _细节照明_ 模式的区别在于，您不会看到法线贴图。

(#LightComplexity)
## 光线复杂性

[REGION:fullwidth]
![](VM_LightingComplexity.png)
[/REGION]

* 视图模式热键：**Alt + 7**
* 控制台命令：`viewmode lightcomplexity`

“光线复杂性”显示影响几何体的非静态光线数目。这对于跟踪照明成本而言非常有用 - 影响表面的光线越多，进行明暗处理的成本越高。

|光线复杂性着色|||||||
|:---|:---:|:---:|:---:|:---:|:---:|:---:|
|**颜色**|![](LightComplexity_0.gif)|![](LightComplexity_1.gif)|![](LightComplexity_2.gif)|![](LightComplexity_3.gif)|![](LightComplexity_4.gif)|![](LightComplexity_5.gif)|
|**影响表面的光线数目**|**0**|**1**|**2**|**3**|**4**|**5+**|


此颜色方案是在着色器代码中定义的。

(#ShaderComplexity)
## 着色器复杂性


[REGION:fullwidth]
![](VM_ShaderPerf.png)
[/REGION]

* 视图模式热键：**Alt + 8**
* 控制台命令：`viewmode shadercomplexity`

**着色器复杂性** 模式用来显示用于计算场景中每个像素的着色器指令数。通常，这可以很好地指示场景的性能状况。一般来说，此模式用来测试基本场景的整体性能以及优化粒子效果，这些效果可能会导致短时间内发生大量过度绘制，从而导致性能突降。

只有指令计数用来计算着色器复杂性，这可能不一定准确。例如，在所有平台上，含有 16 条指令（全部都是纹理查找）的着色器都会比含有 16 条算术指令的着色器慢得多。并且，包含未展开的循环的着色器无法由指令计数准确表示，此问题主要与顶点着色器相关。总的来说，指令计数在大部分情况下是一个良好的指标。

此视图模式使用色谱来指示场景的成本。绿色到红色表示“成本非常低”到“成本高”的线性关系，而粉红色和白色表示快速跳跃至“成本非常高”的像素。较小的白色区域可以容忍，但如果屏幕的大部分区域都显示为鲜红色或白色，那么表示性能不佳。

[REGION:imagetable]
|着色器复杂性着色||||||||||
|[REGION:shadercomplexity sc_1][/REGION]|[REGION:shadercomplexity sc_2][/REGION]|[REGION:shadercomplexity sc_3][/REGION]|[REGION:shadercomplexity sc_4][/REGION]|[REGION:shadercomplexity sc_5][/REGION]|[REGION:shadercomplexity sc_6][/REGION]|[REGION:shadercomplexity sc_7][/REGION]|[REGION:shadercomplexity sc_8][/REGION]|[REGION:shadercomplexity sc_9][/REGION]|
|:---:|:---:|:---:|:--:-|:---:|:---:|:---:|:---:|:---:|
|**理想**| | |**中等** | | |**成本高**|**成本非常高**||
[/REGION]

[REGION:code]
+ShaderComplexityColors=(R=0.0,G=1.0,B=0.127,A=1.0)  
+ShaderComplexityColors=(R=0.0,G=1.0,B=0.0,A=1.0)  
+ShaderComplexityColors=(R=0.046,G=0.52,B=0.0,A=1.0)  
+ShaderComplexityColors=(R=0.215,G=0.215,B=0.0,A=1.0)  
+ShaderComplexityColors=(R=0.52,G=0.046,B=0.0,A=1.0)  
+ShaderComplexityColors=(R=0.7,G=0.0,B=0.0,A=1.0)  
+ShaderComplexityColors=(R=1.0,G=0.0,B=0.0,A=1.0)  
+ShaderComplexityColors=(R=1.0,G=0.0,B=0.5,A=1.0)  
+ShaderComplexityColors=(R=1.0,G=0.9,B=0.9,A=1.0)  
[/REGION]

(#StationaryLightOverlap)
## 静止光线重叠

[REGION:fullwidth]
![](VM_StationaryLightOverlap.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**


(#LightmapDensity)
## 光照贴图密度

[REGION:fullwidth]
![](VM_LightmapDensity.png)
[/REGION]

视图模式热键：**Alt + 0**

**光照贴图密度** 模式显示进行了纹理贴图的对象的光照贴图密度，按其与理想/最大密度设置的关系对其进行颜色编码，并显示映射到实际光照贴图纹素的网格。在整个场景内使用偶数纹素密度以获得一致的光照贴图照明十分重要。

[REGION:imagetable]
|![](LightmapDensityLight.gif)|![](LightmapDensityMedium.gif)|![](LightmapDensityHeavy.gif)|
|---|---|---|
|小于理想纹素密度|理想纹素密度|最大或大于理想纹素密度|
[/REGION]

[REGION:note]
骨骼网格将以浅棕色显示，此计算不会对其加以考虑。
[/REGION]
## 反射

[REGION:fullwidth]
![](VM_Reflections.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**反射** 视图模式以平面法线和粗糙度 0（即镜面）覆盖所有材质。这对于诊断反射细节十分有用，还使您得以将更多反射捕获 Actor 放入需要更多细节的区域。

(#LODColoration)
## LOD 着色

[REGION:fullwidth]
![](ViewMode_LODColoration.png)
[/REGION]

* 控制台命令：`viewmode LODColoration`

**LOD 着色** 视图模式显示基本对象的当前 LOD 指标。这对于诊断任何 LOD 问题或了解 LOD 的切换距离非常有用。 

|LOD 基本着色|||||||||
|:---|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|
|**颜色**|![](LODColoration_0.png)|![](LODColoration_1.png)|![](LODColoration_2.png)|![](LODColoration_3.png)|![](LODColoration_4.png)|![](LODColoration_5.png)|![](LODColoration_6.png)|![](LODColoration_7.png)|
|**LOD 基本颜色**|**0**|**1**|**2**|**3**|**4**|**5**|**6**|**7**|

[REGION:code]
+LODColorationColors=(R=1.0,G=1.0,B=1.0,A=1.0)     
+LODColorationColors=(R=1.0,G=0.0,B=0.0,A=1.0)     
+LODColorationColors=(R=0.0,G=1.0,B=0.0,A=1.0)     
+LODColorationColors=(R=0.0,G=0.0,B=1.0,A=1.0)     
+LODColorationColors=(R=1.0,G=1.0,B=0.0,A=1.0)     
+LODColorationColors=(R=1.0,G=0.0,B=1.0,A=1.0)     
+LODColorationColors=(R=0.0,G=1.0,B=1.0,A=1.0)     
+LODColorationColors=(R=0.5,G=0.0,B=0.5,A=1.0)     
[/REGION]

[Region: note]
默认情况下，引擎仅使用 4 个 LOD，但可在源代码中增加此数目。 
[/Region]

(#BufferVisualization)
## 缓冲区可视化

![](GBufferMenu.png)

“缓冲区可视化”区域使您能够访问图形卡中的各个缓冲区，这可以帮助您诊断场景的外观问题。为了最大限度地利用缓冲区可视化模式，了解 [](Engine/Rendering/Materials\MaterialInputs) 和 [](Engine/Rendering/Materials\MaterialProperties) 的基本要点会有帮助。

(#BufferOverview)
### 缓冲区概观

[REGION:fullwidth]
![](Buffer_Overview.png)
[/REGION]

**缓冲区概观** 可视化模式允许您查看图形卡 Gbuffer 中的多个图像。其中许多图像与材质上的输入相关，这意味着您可以在仅使用单个材质输入的情况下查看场景的外观。


(#BaseColor)
### 底色


[REGION:fullwidth]
![](Buffer_BaseColor.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**底色** 模式允许您仅查看场景中材质的底色。


[COMMENT:none]
-
### Custom Depth
Not included until I can get an answer from Daniel 

[/COMMENT]


(#DecalMask)
### 贴花蒙版

[REGION:fullwidth]
![](Buffer_DecalMask.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**贴花蒙版** 模式以白色显示任何可以接收延迟贴花的表面。无法显示的对象将显示为黑色。

(#DiffuseColor)
### 漫射颜色


[REGION:fullwidth]
![](VM_DiffuseColor.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**漫射颜色** 显示底色与材质环境光遮蔽输入的结果。


[COMMENT:none]

### Final Image
Removed, since DanielW wasn't sure why it's here. 

"final image is the same as Lit
aka no visualization
not sure why it’s in there
"

[/COMMENT]

(#ShadingModel)
### 明暗处理模型

[REGION:fullwidth]
![](Buffer_LightingModel.png)
[/REGION]


* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**明暗处理模型** 模式显示场景中每个材质的“明暗处理模型”属性的值。 


|光线复杂性着色|||||
|:---|:---:|:---:|:---:|:---:|
|**颜色**|![](LightModel_Lit.gif)|![](LightModel_Unlit.gif)|![](LightModel_Subsurface.gif)|![](LightModel_PreintegratedSkin.gif)|
|**材质的明暗处理模型**|**默认照亮**|**不照亮**|**次表面**|**预整合皮肤**|


(#MaterialAO)
### 材质 AO

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![点亮模式下的场景（游戏视图开启）](Buffer_MaterialAO_1.png)(w:500)
	[/PARAM]
	[PARAM:after]
	![缓冲区材质 AO 模式下的场景（游戏视图开启）](Buffer_MaterialAO_2.png)(w:500)
	[/PARAM]
[/OBJECT]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**材质 AO** 可视化模式显示任何与材质 _环境光遮蔽（Ambient Occlusion）_输入相连接的纹理处理或材质表达式节点的结果。


(#Metallic)
### 金属色


[REGION:fullwidth]
![](Buffer_Metallic.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**金属色** 可视化模式显示任何与材质 _金属色（Metallic）_输入相连接的纹理处理或材质表达式节点的结果。

注：通常，材质的“金属色”（Metallic）值为 0 或 1，而不是两者之间的值。介于 0 与 1 之间的值将会因为层混合而产生，但物理材质始终为金属或非金属。

(#Opacity)
### 不透明

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![点亮模式下的场景](Buffer_Opacity_1.png)(w:500)
	[/PARAM]
	[PARAM:after]
	![缓冲区材质不透明模式下的场景（游戏视图开启）](Buffer_Opacity_2.png)(w:500)
	[/PARAM]
[/OBJECT]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**不透明** 可视化模式显示任何与材质 _不透明（Opacity）_输入相连接的纹理处理或材质表达式节点的结果。在上面的图中，您可以看到人物的长发绺有点透明。

“不透明”视图模式仅显示使用了“不透明”（Opacity）的不透明材质，这对于次表面散射材质来说十分重要，因为“不透明”（Opacity）控制着光线可以穿透的距离。

(#Roughness)
### 粗糙度


[REGION:fullwidth]
![](Buffer_Roughness.png)
[/REGION]


* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**粗糙度** 可视化模式显示任何与材质 _粗糙度（Roughness）_输入相连接的纹理处理或材质表达式节点的结果。粗糙度变化是许多反射变化的根源。

(#SceneColor)
### 场景颜色

[REGION:fullwidth]
![](Buffer_SceneColor.png)
[/REGION]


* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**场景颜色** 显示执行任何后处理之前的场景结果。即，在进行任何曝光、高光处理、颜色校正或抗锯齿之前的场景结果。在上图中，场景显得非常暗，因为曝光尚未使其变亮。



(#SceneDepth)
### 场景深度



[REGION:fullwidth]
![](Buffer_SceneDepth.png)
[/REGION]


* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**场景深度** 以白色（最远）到黑色（最近）的恒定梯度显示场景的深度。 

(#SeparateTranslucencyRGB)
### 单独半透明 RGB


[REGION:fullwidth]
![](Buffer_SeparateTransRGB.png)
[/REGION]


* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**单独半透明 RGB** 显示任何呈半透明且使用了“单独半透明”（Separate Translucency）的材质的颜色信息。


(#SeparateTranslucencyA)
### 单独半透明 A


[REGION:fullwidth]
![](buffer_SeparateTransA.png)
[/REGION]


* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**单独半透明 A** 仅显示任何呈半透明且使用了“单独半透明”（Separate Translucency）的材质的阿尔法信息。

(#SpecularColor)
### 镜面反射颜色


[REGION:fullwidth]
![](Buffer_SpecColor.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**镜面反射颜色** 显示向材质的镜面反射提供的颜色。通常，此颜色是根据底色和金属色值的组合来确定的。

(#Specular)
### 镜面反射


[REGION:fullwidth]
![](buffer_Specular.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**镜面反射** 显示任何输送到材质 _镜面反射（Specular）_输入的纹理处理或材质表达式节点的结果。

(#SubsurfaceColor)
### 次表面颜色


[REGION:fullwidth]
![](buffer_SubsurfColor.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**次表面颜色** 显示任何输送到材质 _次表面颜色（Subsurface Color）_输入的纹理处理或材质表达式节点的结果。

(#WorldNormal)
### 全局法线

[REGION:fullwidth]
![](buffer_WorldNormal.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**


**全局法线** 显示任何不透明表面的全局空间法线。 


(#AmbientOcclusion)
### 环境光遮蔽

[REGION:fullwidth]
![](buffer_AO.png)
[/REGION]

* 视图模式热键：**无（默认情况下只能通过菜单进行访问）**

**环境光遮蔽 (AO)** 显示场景中发生的任何环境光遮蔽计算的结果。此计算与任何应用于材质的 AO 纹理无关，因为这是引擎根据表面和法线贴图进行的计算。

(#LandscapeVisualizers)
## 地形可视化器

(#Normal)
### 正常

[REGION:fullwidth]
![](Landscape_Normal.png)
[/REGION]


**正常** 地形可视化模式以正常的照亮状态显示地形。


### LOD

[REGION:fullwidth]
![](Landscape_LOD.png)
[/REGION]

**LOD** 地形可视化模式将地形划分为颜色编码面板，这些面板代表其当前 LOD 状态。



(#LayerDensity)
### 层密度

[REGION:fullwidth]
![](Landscape_LayerDensity.png)
[/REGION]

**层密度** 地形可视化模式以颜色编码模式显示地形，随着更多的层添加到地形中，该颜色编码模式将从绿色变为红色。



[COMMENT:none]

### Layer Debug
TODO

[/COMMENT]

(#Exposure)
## 曝光

[REGION:fullwidth]
[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
yhjRn9xZUTs
[/PARAMLITERAL]
[/OBJECT]
[/REGION]

曝光是一种后处理效果，用于控制场景的整体亮度。您可将其设置为固定值或保持自动调整。


(#Automaticvs.FixedExposure)
### 自动曝光与固定曝光

在后处理期间激活曝光的情况下游戏时，您会注意到从较亮区域移至较暗区域（反之亦然）会导致摄像机临时进行调整，这类似于我们的眼睛在注视不同光线环境时发生的调整。在大多数情况下，这是期望的结果。但是，如果特定关卡中不断变化会分散玩家的注意力，那么您可将视图设置为采用固定曝光。这将锁定曝光，使其不再随着您从较亮区域移至较暗区域或者从较暗区域移至较亮区域而自动变化，但也意味着很容易产生光线对于您需要完成的工作而言过亮或过暗的情况。
