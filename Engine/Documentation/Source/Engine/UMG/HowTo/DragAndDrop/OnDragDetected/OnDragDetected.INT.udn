Availability: docs
Title:3. On Drag Detected
Crumbs: %ROOT%, Engine, Engine/UMG, Engine/UMG/HowTo
Description:In this step we set up what happens when drag is detected.
SkillLevel: Intermediate
Version: 4.15
parent:Engine/UMG/HowTo/DragAndDrop
order:3
checkpoint: editorqs
Related: Engine/UMG
Related: Engine/UMG/UserGuide
tags:UMG UI Designer
tags:UI
type:how-to

## Set to docs as the page has been combined into a single page. 

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Step](Engine\UMG\HowTo\DragAndDrop\WidgetSetup "%Engine\UMG\HowTo\DragAndDrop\WidgetSetup:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Drag and Drop Widgets](Engine\UMG\HowTo\DragAndDrop)
	[/PARAM]
	[PARAM:next]
		[Next Step](Engine\UMG\HowTo\DragAndDrop\OnDrop "%Engine\UMG\HowTo\DragAndDrop\OnDrop:title%")
	[/PARAM]
[/OBJECT]
[/VAR]



In this step, we determine what happens when the player is, in fact, dragging the HealthBar around on the screen. 

## Steps

1.	Open the **OnDragDetected** function, **Right-click** and add a **Create Widget** node set to **Drag Widget**, then **Browse** to it. 

	![](UpdatedDragDrop1.png)

	When drag is detected, we will create our DragWidget (which will hold our drag widget). 
	Before we continue with our OnDragDetected function, we need to pass through the Health Bar widget as a reference when the DragWidget is created. 

1.	Open **DragWidget** and add a **User Widget** variable called **WidgetReference** set to **Expose on Spawn** and **Editable**. 

	![](UpdatedDragDrop2.png)

1.	**Compile** and close **DragWidget**, then open the **HealthBar** Widget Blueprint and the **OnDragDetected** function again. 

1.	Assign **Self** as the **Widget Reference** and **Promote** the **Return Value** to a variable called **Dragged Widget** and connect as shown. 

	![](UpdatedDragDrop3.png)

	Now when our drag widget is created, it will have a reference to the existing Health Bar widget. 
	We also promote the dummy drag widget to a variable so that we have access to it later and can remove it from display when we choose to drop the widget. 

1.	**Right-click** and create a **DragAndDropOperation** node set to **Widget Drag** with **Pivot** set to **Mouse Down**. 
	
	![](UpdatedDragDrop4.png)
	
	Pivot determines where the Drag Widget Visual will appear when being dragged relative to the pointer performing the drag operation. 

1.	Add **Self** as the **Widget Reference**, **DraggedWidget** as the **Default Drag Visual** and **Drag Offset** as the **Drag Offset** on the node. 

	[REGION:lightbox]
	[![](UpdatedDragDrop5.png)](UpdatedDragDrop5.png)
	[/REGION:lightbox]

	_Click for full view._

	Above we indicated what Widget Blueprint is our reference, what the drag visual should be and provided an offset in which to start dragging. 
	There is an offset pin on the node by default, however, we are using our own in our own calculation to determine the position in which to start dragging when Mouse Button Down is pressed. 

The last few things we need to do is to determine what happens when the player releases the Left Mouse Button and performs the OnDrop function. 
We also need to add the HealthBar Widget to our Main HUD Widget Blueprint and tell that to be displayed before testing everything out.  





