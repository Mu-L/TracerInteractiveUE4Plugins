INTSourceChangelist:3782314
Availability:Public
Title:4.On Drop
Crumbs: %ROOT%, Engine, Engine/UMG, Engine/UMG/HowTo
Description:プレイヤーがドラッグしたウィジェットをドロップしたときに何がおこるかを設定します。
SkillLevel:Intermediate
Version:4.15
parent:Engine/UMG/HowTo/DragAndDrop
order:4
checkpoint: editorqs
Related:Engine/UMG
Related:Engine/UMG/UserGuide
tags:UMG UI Designer
tags:UI
type:how-to


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[前のステップ](Engine\UMG\HowTo\DragAndDrop\OnDragDetected "%Engine\UMG\HowTo\DragAndDrop\OnDragDetected:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[ドラッグ＆ドロップのウィジェット](Engine\UMG\HowTo\DragAndDrop)
	[/PARAM]
	[PARAM:next]
		[次のステップ](Engine\UMG\HowTo\DragAndDrop\FinishingUp "%Engine\UMG\HowTo\DragAndDrop\FinishingUp:title%")
	[/PARAM]
[/OBJECT]
[/VAR]



メインの **HUD** Widget ブループリントをセットアップし、**OnDrop** 関数を行うときに起こることをオーバーライドします。 

## ステップ

1.	**HUD** Widget ブループリントを開き、**[Canvas Panel]** の **[Details]** パネルで、その **[Visibility]** を **[Visible]** に設定します。 

	![](DragDrop13.png)

	Health Bar ウィジェット内で、ドラッグ検知を行っていますが、左マウスボタンを放したときに、それを HUD Widget ブループリントにドロップするようにします。
	HUD がヒット検知を受け取るようにするためには、その **[Visibility]** 設定を **[Visible]** にする必要があります。 

1.	**[Palette]** ウィンドウから、**Health Bar** ウィジェットをグラフの必要な場所に追加します。 

	![](DragDrop14.png)

1.	**グラフ** モードに進み、**OnDrop** 関数のオーバーライドを **[My Blueprint]** パネルから追加します。 

	![](DragDrop15.png)

1.	**OnDrop** 内で、**Operation** から **WidgetDrag にキャスト** します。次に **Widget Reference** と **Drag Offset** を 取得します。 

	![](DragDrop16.png)

	**OnDrop** 関数の一部としてどの型の演算が行われるかをチェックするためにキャストします。**Widget Drag** でしょうか？ 
	もしそうなら、**WidgetReference** (ドラッグされているウィジェットとして、通過) および **DragOffset** (すなわち、ドラッグを開始した位置) を get します。 

1.	**My Geometry** と **Pointer Event** から、**Absolute to Local** ノードと **GetScreenSpacePosition** ノードを使って、以下のように接続します。

	![](DragDrop17.png)

	これは、左マウスボタンを放して、ウィジェットをドロップする場所である 2D 空間における位置を示します。 
	ここから、**DragOffset** を差し引いて、ドロップするときにどこにウィジェットを配置するかを決定します。 

1.	**Absolute to Local** の **Return Value** から、**DragOffset** を差し引きます。 

	![](UpdateDragDrop1.png)

1.	**Widget Reference** から **Remove from Parent** 、その後に **Add to Viewport** と **Set Position in Viewport** のノードを追加します。 

1.	以下のようにノードを接続し、**Remove DPIScale** のチェックを外し、**Return Node** の **Return Value** にチェックを入れます。 

	[REGION:lightbox]
	[![](UpdateDragDrop2.png)](UpdateDragDrop2.png)
	[/REGION]

	_フルサイズ表示するにはここをクリック_

	**Remove DPIScale** のチェックを外して、**Return Value** のチェックボックスにチェックを入れています。[](Engine/UMG/UserGuide/DPIScaling) を取り除く必要はなく、この関数を処理したため true として戻します。 
	このスクリプトでは、最初に既存の Health Bar ウィジェットを取り除いてから、Drag Offset に相対的に画面の新しい位置に再度追加しています。 

HUD はドラッグしたウィジェットをドロップ処理するようにセットアップされて、ヘルスバーを表示させます。 
次のこのチュートリアルの最後のステップでは、ドラッグしたウィジェットをセットアップし、ヘルスバーの形状を模倣し、Character ブループリントに対してこの HUD をビューポートに追加するように指示します。 




