INTSourceChangelist:3244089
Availability: Public
Title:위젯 템플릿 제작
Crumbs: %ROOT%, Engine, Engine/UMG, Engine/UMG/HowTo
Description:게임플레이 도중 화면에서 UI 요소를 생성, 표시, 제거하는 방법 예제입니다.
Related: Engine/UMG
Related: Engine/UMG/UserGuide
Version: 4.13
SkillLevel: Intermediate
tags:UMG UI Designer

UMG 로 만드는 **위젯 블루프린트** 는 전부 **사용자 위젯** 으로 간주되어 다른 위젯 블루프린트 안에 재사용 배치할 수 있습니다.
본질적으로, UI 의 일정 부분을 템플릿으로 반들어 다른 위젯 블루프린트 안에서 사용할 수 있는 것입니다.
위젯 블루프린트에 배치한 시각적인 요소 뿐이 아닌, 스크립트로 작성한 기능적인 부분 역시 옮겨집니다.

약간의 블루프린트 스크립트 작업을 통해 UI 위젯의 기능이나 외형적인 면을 결정하는 변수를 만들어, 인스턴스 단위로 덮어쓸 수 있습니다.
예를 들어 여기서는 다른 위젯 블루프린트 안에서 사용할 수 있는 버튼 위젯 블루프린트를 만들어 볼 것입니다.
하지만 다른 블루프린트에 배치했을 때는 스타일을 덮어써서 다르게 할 수 있는 방식으로 만들 것입니다.
마지막으로 버튼을 클릭했을 때 벌어지는 일도 인스턴스 단위로 설정할 수 있도록 할 것입니다 (메뉴에 여러가지 버튼이 있는데 모양이나 작동 방식은 비슷하지만, 눌렀을 때 각기 다른 결과가 나도록 하는 데 좋습니다).

## 단계

[REGION:note]
여기서는 **블루프린트 삼인칭 템플릿** 에 **시작용 콘텐츠** 를 포함시켜 사용합니다.
[/REGION]

1.	**콘텐츠 브라우저** 에 **우클릭** 하고 **위젯 블루프린트** 를 둘 만듭니다. 하나는 **CustomButton**, 다른 하나는 **HUD** 라 합니다. **CustomButton** 는 UserWidget (사용자 위젯)으로, 메인 **HUD** 위젯 블루프린트 안에서 사용할 것입니다.

	![](UserWidget01.png)

1.	**CustomButton** 위젯 블루프린트 안에서 **Canvas Panel** 을 삭제하고 **Button** 을 추가한 뒤 그 위에 **우클릭** 하고 **Size Box** 로 **Wrap With** (감싸기)합니다. 

	![](UserWidget02.png)

1.	**Size Box** 의 경우 **디테일** 패널에서 **Width Override** 값을 **300** 으로, **Height Override** 값을 **100** 으로 변경합니다. 선택적으로, 그래프 레이아웃을 **Desired on Screen** 으로 하면 버튼의 실제 크기가 어느정도 되는지 감을 잡을 수 있습니다.

	![](UserWidget03.png)

1.	**그래프** 탭에서 **Ctrl** 키를 누르고 **내 블루프린트** 패널에서 **Button_0** 을 끌어 놓은 뒤, 그것을 다시 클릭하여 끌어 놓고 **Set Style** 노드를 추가합니다. **Variables > Apperance** 카테고리 아래에서 옵션을 선택합니다. 다른 것은 버튼 배경의 색 배수를 처리합니다.

	![](UserWidget04.png)

1.	**Event Construct** 노드를 **Set Widget Style** 노드에 연결한 뒤, **Widget Style** 에 **우클릭** 하고 **변수로 승격** 합니다.

	![](UserWidget05.png)

1.	새로운 변수 이름은 **ButtonStyle** 이라 하고 **컴파일** 한 뒤, **Normal** 스타일 **Image** 를 아무 텍스처로 설정합니다.

	![](UserWidget06.png)

1.	**Normal** 부분에 **우클릭** 하고 **복사하기** 를 선택한 뒤, **Hovered** 와 **Pressed** 상태에 **우클릭** 한 뒤 **붙여넣기** 합니다.

	![](UserWidget07.png)

1.	**Hovered** 를 펼치고 **Tint** 색을 (노랑 등) 아무 색으로 설정합니다.

	![](UserWidget08.png)

1.	또 **ButtonStyle** 에 대해서도 **Editable** (편집가능)과 **Expose on Spawn** (스폰시 노출) 박스를 체크합니다. 그러면 이 변수의 값을 다른 블루프린트에서 사용할 때도 변경할 수 있게 됩니다.

	![](UserWidget08b.png)

1.	**Button_0** 변수를 선택한 뒤 **OnClicked** 의 **+** 부호를 클릭합니다. 

	![](UserWidget09.png)

1.	**내 블루프린트** 패널에서 **+ Event Dispatcher** 버튼을 클릭하여 새로운 **이벤트 디스패처** 를 만들고 **ButtonClicked** 라 합니다. 

	![](UserWidget10.png)

1.	**ButtonClicked** 를 끌어 그래프에 놓고 **Call** 을 선택한 뒤, **OnClicked** 이벤트에 연결합니다. 그렇게 하면 버튼을 클릭할 때마다의 고유 스크립트 함수 기능을 만들 수 있습니다. 이 버튼 인스턴스가 여럿 있고 **OnClicked** 이벤트만 사용하는 경우, 각 인스턴스는 동일한 함수 기능에 반응하여 실행될 것입니다. 하지만 **이벤트 디스패처** 를 만든 뒤 인스턴스 단위로 이벤트를 구현해 두면, 실제로 클릭된 버튼만 거기에 추가된 스크립트가 발동되도록 할 수 있습니다.

	![](UserWidget11.png)

1.	**HUD** 위젯 블루프린트를 열고, **Canvas Panel** 에 **Vertical Box** 를 추가한 뒤 아래와 같이 크기를 조정합니다.

	![](UserWidget12.png)

1.	**팔레트** 에서 **User Created** 아래, **Vertical Box** 에 **Custom Button** 을 셋 추가합니다. 

	![](UserWidget13.png)

1.	**그래프** 에서 **CustomButton** 을 선택하고 Event **Button Clicked** 옆 **+** 를 클릭합니다. 이것이 **CustomButton** 위젯 블루프린트 안에 만들어 둔 **이벤트 디스패처** 로, 이 버튼이 클릭될 때마다 반응하게 됩니다.

	![](UserWidget15.png)

1.	다른 버튼들의 **Button Clicked** 옆 **+** 를 누르고 각기 다른 문자열을 출력하도록 하는 **Print String** 노드에 연결합니다. 우리 예제에서는 버튼 중 하나를 누를 때마다 화면에 출력하도록 하고 있으나, 어떤 버튼을 클릭했는가에 따라 각기 다른 텍스트가 출력됩니다. 실제 상황에서는 각 버튼마다 다른 메뉴를 열거나, 여러가지 게임 세팅을 변경하거나, 플레이어 캐릭터에게 변경을 가하도록 할 수 있겠습니다.

	![](UserWidget16.png)

1.	레벨 에디터 메인 툴바에서, **블루프린트** - **레벨 블루프린트 열기** 를 클릭합니다.

	![](UserWidget17.png)

1.	**우클릭** - **Event BeginPlay** 를 추가한 뒤 **Create Widget** 노드에 연결, **Class** 는 **HUD** 로 설정합니다. 

	![](UserWidget18.png)

1.	**Add to Viewport** 노드를 만들어 연결한 뒤, **Get Player Controller** 를 **Set Show Mouse Cursor** 에 (**True** 로 설정하여) 연결합니다. 

	![](UserWidget19.png)

1.	**레벨 블루프린트** 를 **컴파일** 하고 닫은 뒤, **플레이** 를 클릭하여 에디터에서 플레이합니다.
	
	
## 최종 결과

에디터에서 플레이해 보면, 각 버튼은 정의된 **ButtonStyle** 변수에 따라 자동으로 스타일이 적용됩니다. 각 버튼을 클릭하면 각기 다른 스크립트 부분이 실행되는데, **이벤트 디스패처** 가 호출되어 그에 맞는 **ButtonClicked** 이벤트가 호출되기 때문입니다. 선택적으로, **ButtonStyle** 변수가 스폰시 노출되어 편집가능한 상태이므로, 다른 어떤 위젯 블루프린트에 배치했든 그 안에서 버튼 스타일을 덮어쓸 수 있습니다. 어떤 애니메이션이나 복잡한 스크립트 로직을 매번 다시 만들 필요 없이, 사용자 위젯으로 만들어 두면 추가 작업 없이 다른 위젯 블루프린트에 재사용할 수 있습니다.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
j3Oni-3AM_I
[/PARAMLITERAL]
[/OBJECT]



