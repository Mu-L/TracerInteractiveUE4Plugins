INTSourceChangelist:3782314
Availability:Public
Title:1.必要なプロジェクト設定
Crumbs:%ROOT%, Engine, Engine/UMG, Engine/UMG/QuickStart
Description:HUDで使用する Widget ブループリントを作成し、HUDに情報を渡すようにキャラクターをセットアップします。 
version:4.9
tags:UMG UI Designer

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[クイックスタート ホーム](Engine/UMG\QuickStart) 
	[/PARAM]
	[PARAM:next]
		[次のステップ](Engine/UMG\QuickStart\2 "%Engine/UMG\QuickStart\2:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]



[REGION:note]
このチュートリアルでは **スターター コンテンツ** を有効にして **Blueprint First Person** テンプレートを使用します。新規プロジェクトの作成およびテンプレートの使用方法がわからない場合は、 [](Engine/Basics/Projects/Browser) ページで詳しい情報をご覧ください。 
[/REGION]

1. **コンテンツ ブラウザ** で、 **[Add New]** ボタンをクリックし、 **User Interface** で **Widget ブループリント** オプションを選択し、**HUD** と名前を付けます。

	![](UMGQS1.png)

	すべてのユーザー インターフェース要素 (HUD、メニューなど) は Widget ブループリント 内で作成され、保存されます。Widget ブループリントでは、UI 要素を視覚的にレイアウトし、こうした要素に対してスクリプト化された機能を提供します。プレイヤー キャラクターがワールドでスポーンしたときに、表示されることがわかるようにWidget ブループリントを作成しますが、そのセットアップは後でします。 
	[REGION:note]

	Widget ブループリントの詳しい情報については、 [Widget ブループリント](Engine/UMG/UserGuide/WidgetBlueprints) のドキュメントをご覧ください。 
	[/REGION]

1. あと 2 つ **Widget ブループリント** を作成します。ひとつは、**MainMenu(メイン メニュー) ** でもうひとつは **PauseMenu(一時停止メニュー)** と呼ばれます。 

	![](AllWidgets.png)

1. **[コンテンツ ブラウザ]** で右クリックして **Main** という新規 **Level** を作成します。 

	![](CreateLevel.png)

	これは後でメイン メニューのセットアップのガイドで使用します。 

1. **コンテンツ ブラウザ** で **Content/FirstPersonBP/Blueprints** フォルダにある **FirstPersonCharacter** ブループリントを開きます。 

	![](UMGQS2.png)

	これはプレイ可能なキャラクターのブループリントであり、表示のために **HUD** Widget ブループリントに渡す情報を作成します。 

1.	**[MyBlueprint]** ウィンドウで **[Add Variable (変数追加)]** ボタンをクリックします。 

	![](UMGQS3.png)

1.	 新規変数の **[詳細]** パネルで **Health** と名前を付けて、**Float** 変数型に変更し、 **Default Value** を **1.0** に設定します。 

	![](UMGQS4.png)

	この変数は、HUD に表示するプレイヤー キャラクターのヘルスを表します。 

1.	 **デフォルト値** が **1.0** の **Energy** という **Float** 変数をもうひとつ作成します。 

	![](UMGQS5.png)

	この変数は、HUD に表示するプレイヤー キャラクターのエネルギーを表します。 

	[REGION:note]
	デフォルト値を入力できませんか？ツールバーにある **[コンパイル]** ボタンをクリックし、ブループリントをコンパイルしてから再度試みてください。 
	[/REGION]

1.	 **デフォルト値** が **25** の **Ammo** という **Integer** 型の変数をもうひとつ作成します。 

	![](UMGQS6.png)

1.	 **デフォルト値** が同じく **25** の **MaxAmmo** という **Integer** の変数をもうひとつ作成します。 

1.	**グラフ** ウィンドウ内で **右クリック** して、**Event Begin Play** ノードを追加します。 

1.	**Event Begin Play** を引き出して、 **Class** が **HUD** Widget ブループリントに設定された **Create Widget** ノードを追加します。 

	![](UMGQS7.png)

1.	 **Create HUD_C Widget** の **Return Value** から、**Promote to Variable (変数に昇格)** を選択し、 **HUD Reference** と名前を付けます。 

	![](UMGQS8.png)

	これでゲーム開始時に HUD ウィジェット ブループリントが作成され、後でアクセスできるように変数として格納されます。これは、後で関数を呼び出したり、HUD のプロパティを設定するのに役立ちます。例えば、ゲームを一時停止中に HUD を非表示にしたい場合、この変数を通して HUD にアクセスすることができます。 

1.	 **Set** ノードの出力ピンからドラッグして、**Add to Viewport** ノードを追加します。 

	![](UMGQS9.png)

	名前が表すように、ターゲットとして指定された Widget ブループリントをプレイヤーのビューポートに追加し、画面上にそれを描画します。 

## キャラクター変数を調整する

実際の HUD 生成開始前に最後に行うことは、キャラクター変数が変化する方法を与えることです。 

1. **FirstPersonCharacter** ブループリント内で、**Alt** を押しながら **Energy** 変数をドラッグして Jump スクリプトの隣に配置します。 

	![](Step2_1.png)(w:720)

1. **Ctrl** キーを押しながら、 **Energy** 変数のコピーをドラッグして、 **0.25** に設定された **Float - Float** ノードに以下のように接続します。 

	![](Step2_2.png)

	毎回キャラクターがジャンプするたびに、キャラクターの現在のエネルギー値から 0.25 が差し引かれます。 

1. **Health** 変数に対して同じスクリプトをセットアップしますが、テストのために **F** Key Event を使用してください (または他のキー押下イベント)。

	![](Step2_3.png)

	これでキーが押されるたびにヘルス変数がHUD を通して適切に表示されるかをテストすることができます。 

1.	**Spawn Projectile** スクリプトを見つけて、**InputAction Fire** イベントの後で **右クリック** して **Branch** ノードを追加します。 

1.	**Branch** 条件で、**Ctrl** を押しながら **0** に設定された **Integer > Integer** 変数に接続された **Ammo** 変数をドラッグし、以下のように接続します。

	![](Step2_4.png)(w:820)

	弾薬が 0 よりも大きい場合に限りプレイヤーが発射物を発砲できるようにします。 

1.	**Play Sound at Location** ノードの後の **Spawn Projectile** スクリプトの最後で **Ammo** を **Ammo - 1** と等しくなるように設定します。 

	![](Step2_5.png)

	これで毎回プレイヤーが発射物を発砲するたびに弾薬を 1 つ差し引いて、HUD に表示するものが与えられます。 

1.	**コンパイル** し **保存** してから、ブループリントを閉じます。 


次のステップでは、HUD のヘルス、エネルギー、弾薬の変数の表示をセットアップし、ゲーム内で動作するようにします。 




