INTSourceChangelist:2601374
Availability:Public
Title:ゲームの調整
Crumbs: %ROOT%, Gameplay, Gameplay/Analytics
Description:インゲーム アナリティクスを使用して、プレイヤーのエンゲージメントを追跡しバランスの問題を見つけます。


プレイヤーの継続率をキャプチャするには、アナリティクス プロバイダーをゲームに登録します。これはプロジェクトの `DefaultEngine.ini` ファイルを使って行いますのでデフォルト プロバイダーを 
登録する必要があります。任意で、ゲームの異なるビルドタイプ (開発、テスト、実稼働) に対して、別のプロバイダーとアカウント詳細を登録することもできます。以下のセクションは 
Apsalar プラグインのコンフィギュレーションの例です。

	[Analytics]
	ProviderModuleName=IOSApsalar
	ApiKey=YourAnalyticsKey1
	ApiSecret=YourAnalyticsSecret1
	SendInterval=60

	[AnalyticsDevelopment]
	ApiKey=YourAnalyticsKey2
	ApiSecret=YourAnalyticsSecret2
	SendInterval=60

	[AnalyticsTest]
	ApiKey=YourAnalyticsKey3
	ApiSecret=YourAnalyticsSecret4
	SendInterval=60

`[Analytics]` セクションは、使用しているデフォルトのことで、デフォルトのプロバイダー モジュール名を設定します。上記のケースでは、4.5 リリースの一部の IOSApsalar プラグインを 
設定しました。`ApiKey` と `ApiSecret` のフィールドは、 Apsalar ウェブサイトのものです。アカウントを作成すると、使用するキーとシークレットが与えられます。

プロジェクト用の設定が完了すると、アナリティクス イベントを記録する準備が整います。基本的な継続率を取得するには、ゲームの開始と共にセッションを作成し、 
フォアグラウンドから消えた時点でセッションを終了する必要があります。方法は、以下のコード行、
あるいはバージョン 4.5 以降についている [ブループリント分析プラグイン](Gameplay/Analytics/Blueprints) を使用して行います。

	FAnalytics::Get().GetDefaultConfiguredProvider()->StartSession();
	FAnalytics::Get().GetDefaultConfiguredProvider()->EndSession();

これらのコールをゲームの一部とすると、プレイヤーの継続率の自動収集が始まります。基本的な継続率の収集の終了後、 
さらにイベントを追加して、ゲーム内のプレイヤーのビヘイビアをもっと詳しく知ることができます。 
