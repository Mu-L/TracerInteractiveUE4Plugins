INTSourceChangelist:3108692
Availability:Public
Title:게임 계측하기
Crumbs: %ROOT%, Gameplay, Gameplay/Analytics
Description:게임내 분석을 사용해서 플레이어 활동 추적 및 밸런싱 문제를 알아낼 수 있습니다.


플레이어 활동 데이터를 캡처하는 첫 단계는 게임에 분석 제공자를 등록하는 것입니다. 이 작업은 프로젝트의 `DefaultEngine.ini` 파일을 통해 이루어지는데요. 기본 제공자를 등록해야 합니다.
옵션으로 다른 제공자를 등록하고, 각기 다른 게임 빌드 유형(development, testing, production 등)에 대한 계정 세부사항을 등록할 수 있습니다. 
Apsalar 플러그인 환경설정 예제는 아래와 같습니다:

	[Analytics]
	ProviderModuleName=IOSApsalar
	ApiKey=YourAnalyticsKey1
	ApiSecret=YourAnalyticsSecret1
	SendInterval=60

	[AnalyticsDevelopment]
	ApiKey=YourAnalyticsKey2
	ApiSecret=YourAnalyticsSecret2
	SendInterval=60

	[AnalyticsTest]
	ApiKey=YourAnalyticsKey3
	ApiSecret=YourAnalyticsSecret4
	SendInterval=60

`[Analytics]` 섹션이 기본으로 사용되는 것으로, 기본 제공자 모듈 이름을 설정해야 합니다. 위의 경우 4.5 릴리즈에 포함된 IOSApsalar 플러그인으로 설정되어 있습니다.
`ApiKey` 및 `ApiSecret` 칸은 Apsalar 웹사이트에서 왔습니다. 계정을 만들면 사용할 수 있는 키와 비번을 줄 것입니다.

프로젝트에 대한 환경설정을 마쳤으면, 분석 이벤트 녹화 시작 준비가 되었습니다. 기본적인 플레이어 활동 데이터만 구하려면, 게임 시작시 세션을 생성하고 
더이상 전방에서 실행되지 않는 경우 종료해 줘야 합니다. 그 방법은 아래와 같은 코드나, 4.5 버전 이후에 제공되는 [블루프린트 분석 플러그인](Gameplay/Analytics/Blueprints) 을 
사용하면 됩니다:

	FAnalytics::Get().GetDefaultConfiguredProvider()->StartSession();
	FAnalytics::Get().GetDefaultConfiguredProvider()->EndSession();

위 호출을 게임에 포함시켜 두면, 플레이어 활동 데이터를 자동으로 수집하기 시작할 것입니다. 기본적인 플레이어 활동 데이터를 구한 뒤에는, 좀 더 구체적인 이벤트를 추가하여 
게임 내 플레이어 행위에 대한 보다 구체적인 정보를 구할 수 있습니다.
