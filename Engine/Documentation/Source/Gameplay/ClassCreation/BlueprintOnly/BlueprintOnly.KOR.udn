INTSourceChangelist:3108692
Availability:Public
Title:블루프린트 전용
Crumbs: %ROOT%, Gameplay, Gameplay/ClassCreation
Description:언리얼 엔진 작업을 시작하는 게임플레이 프로그래머를 위한 입문 정보입니다.
version: 4.9

[블루프린트 클래스](Engine/Blueprints/UserGuide/Types/ClassBlueprint) 는 [](Engine/Blueprints) 비주얼 스크립팅 시스템을 사용해서 새로운 클래스를 구성할 수 있습니다. [새 블루프린트 클래스 생성](Engine/Blueprints/UserGuide/Types/ClassBlueprint/Creation) 이후에는,
컴포넌트를 추가하고, 비주얼 스크립팅으로 함수나 기타 게임플레이 또는 디자인 방식을 구성하고, 클래스 변수의 기본값을 설정합니다. LightSwitch 클래스는 **LightSwitch_BPOnly** 라는 이름의 
블루프린트만을 사용해서 구성되어 있으며, 아래 설명되어 있습니다.

## 클래스 셋업

**LightSwitch_BPOnly** 클래스는 **콘텐츠 브라우저** 에 생성되었고, **액터** 가 부모 클래스로 선택되었습니다.

컴포넌트를 블루프린트에 추가하는 방식은, **블루프린트 에디터** 의 [컴포넌트](Engine/Blueprints/UserGuide/Components) 탭에서 정적으로, 또는 [그래프 에디터](Engine/Blueprints/Editor/UIComponents/GraphEditor) 의 비주얼 스크립팅을 통해 동적으로 이루어집니다.
LightSwitch 클래스는 항상 PointLightComponent 와 SphereComponent 를 갖고있기 때문에, 이 경우 컴포넌트는 컴포넌트 탭에서 정적으로 추가해 주었습니다.

**컴포넌트** 탭을 사용해서 **PointLight1** 이란 이름의 PointLightComponent 를 루트 컴포넌트로 추가하고, **Sphere1** 란 이름의 SphereComponent 를 PointLightComponent 에 붙였습니다.
**블루프린트 에디터** 에서 클래스에 추가된 컴포넌트의 아이콘은 연파랑색인 반면, 부모 클래스에서 상속된 컴포넌트의 아이콘은 진파랑색입니다.

![](BP_Only_ComponentList.png)  

**블루프린트 에디터** 의 [](Engine/Blueprints/Editor/UIComponents/MyBlueprint) 탭에서는 새로운 [변수](Engine/Blueprints/UserGuide/Variables), 
[함수](Engine/Blueprints/UserGuide/Functions), [매크로](Engine/Blueprints/UserGuide/Macros) 를 추가할 수 있습니다. 
블루프린트 클래스 안에 들어있는 모든 [그래프](Engine/Blueprints/UserGuide/Graphs) 에 접근할 수도 있습니다. 그래프에서, [노드](Engine/Blueprints/UserGuide/Nodes) 를 서로 
연결하여 클래스 변수, 게임플레이 이벤트, 심지어 액터의 주변 정보로 구동 가능한 게임플레이 기능 및 디자인 방식을 만들어 냅니다.

**내 블루프린트** 탭을 사용하여 **LightSwitch_BPOnly** 클래스에 플로트 변수 **DesiredBrightness** 가 추가되었습니다. **내 블루프린트** 탭에는 **컴포넌트 창** 에서 추가된 컴포넌트도 표시되어, 
원한다면 그래프에서 접근해 볼 수 있습니다.

![](BP_Only_MyBlueprint.png)

**LightSwitch_BPOnly** 클래스 행위 구성에 사용된 그래프는 둘입니다. 첫째는 [](Engine/Blueprints/UserGuide/UserConstructionScript) 함수 그래프로, **컨스트럭션 스크립트** 함수 입구 노드가 들어있는 것입니다.
이 이벤트는 액터가 레벨에 추가될 때, 또는 기존 액터가 레벨 안에서 움직일 때 실행됩니다. **LightSwitch_BPOnly** 클래스에서 **컨스트럭션 스크립트** 이벤트는 **Set Intensity** 노드에 연결되어,
액터가 레벨에 추가되거나 그 안에서 움직일 때 **Point Light 1** (PointLightComponent)의 밝기가 **Desired Brightness** 값으로 설정됩니다.

![](BP_Only_ConstructionScript.png)

**LightSwitch_BPOnly** 클래스에 구성되어 있는 나머지 그래프는 [](Engine/Blueprints/UserGuide/EventGraph) 입니다. 이벤트 그래프 내의 실행은 **OnComponentBeginOverlap** 이나 
**OnComponentEndOverlap** 와 같은 이벤트로부터 시작됩니다. 이러한 이벤트는 레벨에 있는 다른 액터가 SphereComponent 에 겹치거나 벗어날 때 실행됩니다. 두 이벤트 모두 **Toggle Visibility** 노드에 
연결되어, 해당 이벤트 실행시 PointLightComponent 의 표시여부가 토글됩니다. 이벤트나 그래프 작업 관련 상세 내용은 [](Engine/Blueprints/UserGuide/Events), [](Engine/Blueprints/UserGuide/EventGraph),
[그래프 에디터](Engine/Blueprints/Editor/UIComponents/GraphEditor) 문서를 확인해 주시기 바랍니다.


![](BP_Only_EventGraph.png)

[REGION:note]
**우클릭** 메뉴에서 Toggle Visibility 를 찾을 수 없는 경우 '컨텍스트에 따라' 체크를 해제하거나 '노드 찾기' 메뉴에서 검색해 보시기 바랍니다. 그냥 포인트 라이트 변수 노드에서 선을 끌어 
놓은 다음 Toggle Visibility 를 검색해도 같은 결과를 얻을 수 있습니다.
[/REGION]
[REGION:note]
Sphere1 에 대한 OnComponentEndOverlap 를 찾을 수 없는 경우, Sphere 변수가 선택되었는지 확인한 다음 Event->Add Event 에서 이벤트를 추가하거나,
**우클릭** 메뉴에서 Add Event->Collision->View **OnComponentBeginOverlap / OnComponentEndOverlap** 하시기 바랍니다.
[/REGION]

**DesiredBrightness** 변수는 세팅에서 **Editable** 로 설정되어, **블루프린트 에디터** 의 **클래스 디폴트** 에 보이며 편집도 가능합니다.
이는 그 변수가 클래스의 각 인스턴스별로 변경 가능하여, 각 액터마다 별도의 **DesiredBrightness** 값을 가질 수 있다는 뜻입니다.

![](BP_Only_Defaults.png)(convert:false)

블루프린트 클래스는 다른 블루프린트 클래스로 확장 가능한데, **클래스 뷰어** 에서 클래스 옆의 드롭다운을 통해 새 블루프린트를 만들거나, 블루프린트에 우클릭한 다음 
**이것을 기반으로 새 블루프린트 생성** 을 선택하는 것입니다.

**LightSwitchBPOnly** 블루프린트 클래스는 [](Engine/Content/Browser) 에 있으며, 거기서 레벨에 드래그 앤 드롭 가능합니다. [](Engine/UI/ClassViewer) 에도 있습니다.
**콘텐츠 브라우저** 또는 **클래스 뷰어** 를 사용하여 레벨에 액터를 놓는 방법에 대한 상세 정보는, [](Engine/Actors/Placement) 문서를 확인해 주시기 바랍니다.
