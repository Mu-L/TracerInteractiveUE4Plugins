Availability:Public
Title:创建类的基础知识
Crumbs: %ROOT%, Gameplay
Description:一些示例，展示了如何单独使用蓝图、单独使用C++及同时使用二者来创建类。

![](LightSwitchActor.png)(w:500 convert:false) 

这些示例展示了如何仅使用蓝图、仅使用C++及同时使用二者来创建一个新类。 目标是分别使用这三种流程来创建一个具有同样属性和行为的新LightSwitch类，然后把每个新类的实例添加到关卡中，这样就有三个全新的LightSwitch Actor了。 

LightSwitch类直接基于Actor类，因为它们的主要需要就是可被放置在关卡中。  它们包含了一个PointLightComponent和SphereComponent来作为根组件，  SphereComponent是PointLightComponent的子项。 每个LightSwitch类都还包含一个名称为DesiredIntensity的变量，用于设置PointLightComponent的亮度。  最后，这些类的默认行为是：当玩家或离开SphereComponent时，切换PointLightComponent的可见性。  


## 示例
[REGION:topics third]
[OBJECT:TopicCompact]
	[PARAM:image]
		![](BP_Only_Topic.png)
	[/PARAM]
	[PARAM:title]
		%Gameplay\ClassCreation\BlueprintOnly:title%
	[/PARAM]
	[PARAM:description]
		%Gameplay\ClassCreation\BlueprintOnly:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Gameplay\ClassCreation\BlueprintOnly]
	[/PARAM]
[/OBJECT]
[OBJECT:TopicCompact]
	[PARAM:image]
		![](Code_Only_topic.png)
	[/PARAM]
	[PARAM:title]
		%Gameplay\ClassCreation\CodeOnly:title%
	[/PARAM]
	[PARAM:description]
		%Gameplay\ClassCreation\CodeOnly:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Gameplay\ClassCreation\CodeOnly]
	[/PARAM]
[/OBJECT]
[OBJECT:TopicCompact]
	[PARAM:image]
		![](Both_topic.png)
	[/PARAM]
	[PARAM:title]
		%Gameplay\ClassCreation\CodeAndBlueprints:title%
	[/PARAM]
	[PARAM:description]
		%Gameplay\ClassCreation\CodeAndBlueprints:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Gameplay\ClassCreation\CodeAndBlueprints]
	[/PARAM]
[/OBJECT]
[/REGION]
