INTSourceChangelist:3429254
Availability:Public
Title:ゲーム フローの概要
Crumbs:%ROOT%, Gameplay/Framework
Description:エンジンを起動し、ゲームまたは Play-In-Editor セッションを開始する方法を説明します。
Version:4.12
type:overview
parent:Gameplay/Framework
order:1
tags:Gameplay Framework
topic-image:Gameplay/Framework/gameflow_lander.png

エンジンを起動し、ゲームを開始する方法を説明します。ここでは、エディタ パスとスタンドアローン パスの 2 つのメインのパスがあります。エンジンを初期化する一般的なイベントの順序は、エンジンを初期化し、**GameInstance** を作成し初期化し、レベルをロードし、最終的にプレイを開始します。しかし、スタンドアローン モードとエディタ モードには呼び出されるいくつかの関数の正確な順序と関数が呼び出される順序の両方について違いがあります。以下のフローチャートは、ゲーム開始時に収束するまで平行して実行する 2 つのパスを示しています。

## ゲーム フローの詳細

[![](GameFlowChart.png)(w:320)](GameFlowChart.png)
[REGION:caption]
クリックしてフルサイズの画像を表示
[/REGION]

## スタンドアローン

エディタ外でプレイされるゲームによって使用されるスタンドアローン モードでは、ゲームをプレイするために必要なオブジェクトが作成され、スタートアップ時のエンジンの初期化に続いてただちに初期化されます。**GameInstance** のようなオブジェクトは、エンジン起動前に作成され、初期化されます (エンジンを作成し、初期化するのとは異なります)。エンジンの start 関数が呼び出されるとすぐにスタート マップがロードされます。この時点でゲームプレイは公式に開始し、レベルが適切な [](Gameplay/Framework/GameMode) ともうひとつの [](Programming/UnrealArchitecture/Actors) を作成した時点で公式に開始します。

## エディタ

**Play In Editor** と **Simulate In Editor** で使用される In Editor モードでは、異なるフローが使われます。エンジンは、初期化し、エディタを実行する必要があるためただちに起動します。しかし、**GameInstance** などのオブジェクトの作成と初期化はユーザーがPIE セッションや SIE セッションを起動するボタンを押してから行われます。さらに、レベル内の [](Programming/UnrealArchitecture/Actors) は、インゲームの変更がエディタのレベルに影響を及ぼさないように複製されます。**GameInstance** オブジェクトを含むあらゆるオブジェクトは、各 PIE インスタンスに対して別箇のコピーを持ちます。**UWorld** クラスのゲームプレイの初めに、エディタ パスは、スタンドアローン パスに再び合流します。
