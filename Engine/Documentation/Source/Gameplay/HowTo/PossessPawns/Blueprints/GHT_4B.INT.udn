Availability: Public
Title:Possessing Pawns in Blueprint
Crumbs: %ROOT%, Gameplay, Gameplay/HowTo/PossessPawns
Description:Illustrates using the Possess node in Blueprints to switch between and control multiple characters. 
Version: 4.8
SkillLevel: Intermediate
type:how-to
Related: Engine/Blueprints
Related: Gameplay/Framework/Pawn
Related: Gameplay/Framework/Pawn/Character
Related: Engine/Basics/Projects/Browser
Related: Gameplay/Framework/Controller/PlayerController

Learn how to use the **Possess** and **UnPossess** [Blueprint](Engine/Blueprints) nodes to take control of and provide input to a [Pawn](Gameplay/Framework/Pawn) or [Character](Gameplay/Framework/Pawn/Character) in your project.  

[REGION:note]
For the purposes of this guide we are using the **Blueprint Side Scroller** template, however you can use your own project if you would like. If you do not know how to create projects or use templates, refer to the [Project Browser](Engine/Basics/Projects/Browser) page for more information. 
[/REGION]
 
## Steps

1. From the **Content Browser**, drag-and-drop into your level the additional characters you would like to control. 

	![](Pawns1b.png)(w:860)

	Here we added two additional **SideScrollerCharacter** Blueprints from the **Content > SideScrollerBP > Blueprints** folder to the level giving us a total of three characters in our level. With this particular template project, a character is already placed inside the level by default. 
	
1.	In the **World Outliner**, select each of the characters you want to control. 

	![](Pawns2b.png)
	
1. From the Main Toolbar, click the **Blueprints** button and **Open Level Blueprint**. 

	![](Pawns3b.png)

1. **Right-click** in the graph area, then select **Create References to selected Actors** option from the context menu. 

	![](Pawns4b.png)(w:640)

	This will allow us to reference each of the characters that we've selected in the level. 

1. **Right-click** in the graph area, then search for the **1** Keyboard Event and select it. 

	![](Pawns5b.png)(w:640)

	This will allow us to fire off an event whenever the 1 key is pressed or released. 

1. Add the **2** and **3** Keyboard Events to the graph. 

1. **Right-click** in the graph and search for and add the **Get Player Controller** node. 

	![](Pawns6b.png)(w:640)

	The [Player Controller](Gameplay/Framework/Controller/PlayerController) is used to take the input from a human player and translate that into actions for a Pawn. 

1. **Left-click** and drag off the **Return Value** of the Get Player Controller node and search for and add the **Possess** node. 

	![](Pawns7b.png)(w:640)

	This will tell the Player Controller which target Pawn to possess and take control of. When the **Possess** function is called, it will automatically check if a Pawn is currently controlled and **UnPossess** it first before attempting to Possess a new Pawn. 
	
	You can use the UnPossess function if you want to have the player release control of their Pawn and enter, say for example, a spectator type of state where they are not directly controlling a playable character. 

1. Create two more **Possess** nodes and connect the **1**, **2** and **3** Keyboard Events as shown below. 

	![](Pawns8.png)(w:640)
	
	We are now set up to possess a Pawn when 1, 2 or 3 is pressed. Next we need to define which Pawn to possess from our references. 

1. Connect each of the **SideScrollerCharacter** references to each of the **In Pawn** pins as shown below. 

	![](Pawns9.png)(w:640)

	Our scripted functionality is complete and we are ready to test it. 

1. Click **Compile** from the toolbar to update your script. 

	![](Pawns10b.png)

1. Click **Play** from the toolbar to play the game in the editor. 

	![](Pawns11b.png)
	
## End Result

When you press 1, 2 or 3 on your keyboard you will switch between each of the characters in your level. 

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
RFgeogZOnvQ
[/PARAMLITERAL]
[/OBJECT]
