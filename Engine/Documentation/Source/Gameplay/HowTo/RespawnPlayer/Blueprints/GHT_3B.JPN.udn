INTSourceChangelist:3429254
Availability:Public
Title:ブループリントでプレイヤーをリスポーンするための操作ガイド
Crumbs: %ROOT%, Gameplay, Gameplay/HowTo/RespawnPlayer
Description:UE4 のブループリントでプレイヤー キャラクターをリスポーンするための操作ガイド 
Version:4.9
SkillLevel:Advanced
type:how-to

[TOC (start:2)]

 ここでは、ブループリントを使用してシングル プレイヤー ゲームでプレイヤー キャラクターをリスポーンする方法について学習します。 

## プレイヤーをリスポーンする（シングル プレイヤー）

以下では、シングル プレイヤー ゲームでプレイヤーがキルされた場合にリスポーンする手順を説明します。 

_以下の手順は、**Blueprint Third Person Template** プロジェクトの使用に基づいていますが、必要に応じて他のプロジェクトを使用することもできます。_

1.	プロジェクト内で、**Game Mode** ブループリントを開きます (**ThirdPersonGameMode** ブループリントを使用しています)。 

1.	グラフ内で **右クリック** して、**Event Begin Play** ノードを追加します。再度 **右クリック** して **Get Player Character** ノードを追加します。 

1.	**Get Player Character** ノードの **Return Value** をドラッグして、**Cast To ThirdPersonCharacter** ノードを追加し、ノードを接続します。 

	![](GHT3B_1.png)

	Player Character ブループリント (この例では ThirdPersonCharacter) に Cast To します。これで、このブループリントにアクセス可能になり、On Destroyed event を使用して、プレイヤー キャラクターがいつキルされるかを判断します。この時、新しいプレイヤー キャラクターをスポーンできます。 

1.	 **As ThirdPersonCharacter C** ピンをドラッグして、**Assign On Destroyed** ノードを追加します。 

1.	新規追加した **OnDestroyed_Event** ノードから、リスポーンまでの任意の遅延時間を設定した **Delay** ノードを追加します (オプション)。 

	![](GHT3B_2.png)

	ここでは、あるイベントを別のブループリントからの別のイベントにバインドしています。これで、別のブループリントからイベントが発生するとこのブループリントのイベントが発行できるようになります (ThirdPersonCharacter から OnDestroy Event)。これは、**Event Dispatcher** といい、**Level ブループリント** と通信し、ワールドに対してイベントが発生したことを通知するためにも使用することができます。 
	[REGION:note]

	詳しい情報については、[](Engine/Blueprints/UserGuide/EventDispatcher) のドキュメントをご覧ください。
	[/REGION] 

1.	**Delay** ノード (追加した場合) から、**SpawnActorFromClass** ノードを追加し、**Class** ドロップダウンを **ThirdPersonCharacter** に設定します。 

1.	新規 **Transform** 変数を作成し、それを **Spawn Transform** と呼びます。次に、それを **Spawn Actor** ノードの **Spawn Transform** に接続します。 

	![](GHT3B_3.png)

1.	グラフ内を **右クリック** して、**Possess** ノードを追加します。 

	![](GHT3B_4.png)

	ノードをメニューに表示するために **Context Sensitive** オプションのチェックを外す必要があるかもしれません。

1.	**Spawn Actor** から **Return Value** を **Possess** ノードの **In Pawn** に接続し、その実行ワイヤーを接続します。 

1.	**Possess** ノードの **Target** ピンからドラッグして、**Get Player Controller** ノードを追加します。 

	![](GHT3B_5.png)(w:840)

1.	**Event Begin Play** ノード付近で、グラフ内を **右クリック** して **Custom Event** を追加し、**Respawn** と名前を付けます。

	![](GHT3B_6.png)

	 ノードをメニューに表示するために **Context Sensitive** を再確認する必要があるかもしれません。 

1.	このカスタム イベントを **Cast To ThirdPersonCharacter** ノードに接続します。 

1.	**Possess** ノードからドラッグして、**Respawn** を呼び出します。グラフ全体は以下のようになります。 

	[REGION:lightbox]
	[![](GHT3B_7.png)(w:840)](GHT3B_7.png)
	[/REGION]

	_画像をクリックしてフルサイズで表示_

1.	**コンパイル** し **保存** してから、ブループリントを閉じます。

1.	**ThirdPersonCharacter** ブループリントを開き、グラフ内で **右クリック** し、**Event Begin Play** ノードを追加します。 

1.	再度 **右クリック** して、**Get Game Mode** ノードを追加します。次にそこから **Cast To MyGame** (またはご自身の Game Mode) にドラッグします。 

	![](GHT3B_8.png)

1.	**As My Game C** ピンをドラッグして、**Set Spawn Transform** ノードを追加します。 

1.	グラフ内で **右クリック** して、**Get Actor Transform** ノードを追加し、それを **Set Spawn Transform** ノードに接続します。 

	![](GHT3B_9.png)

	これで、ゲームを開始するとプレイヤーの位置を取得し、それをリスポーン位置として設定します。 

1.	グラフ内で **右クリック** して、**F** キー イベントを追加し、**Pressed** ピンから **Destroy Actor** ノードを接続します。 

	![](GHT3B_10.png)

	これはテスト目的であり、**F** キーが押されると、キルします(アクタを破壊)。プレイヤーがヘルスを十分に失うか、通常プレイヤーをキルするような他のイベントでこの **Destroy Actor** ノードを呼び出す可能性が高くなります。 

**コンパイル** し、エディタで再生すると、**F** キーを押すたびに、一瞬消えた後に開始位置でリスポーンします。 








