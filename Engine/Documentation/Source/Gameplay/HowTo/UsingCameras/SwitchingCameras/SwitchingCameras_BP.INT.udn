Availability: Public
Title:Switching Between Multiple Fixed Cameras
Crumbs: %ROOT%, Gameplay, Gameplay\HowTo\UsingCameras
Description:An example of how to setup and trigger the use of multiple fixed camera angles. 
Related: Gameplay\HowTo\UsingCameras
Related: Gameplay\Framework\Camera
Related: Engine/Matinee
Related: Engine/Blueprints
SkillLevel: Beginner
Version: 4.8
type:how-to

In this How-to we add multiple **Camera** Actors to our level and switch between them as the player enters **Trigger** Volumes that we have placed in the level. After completing this tutorial, you will have the ability to set up your own multi-camera based game and define when each camera is used. 

[REGION:note]
 For this example, we are using the **Blueprint Third Person Template** project with **Starter Content** included.
[/REGION]


1.	From the **Modes** menu while in **Place**, under **Basic**, drag in the number of **Camera Actors** you wish to cycle between. 

	[REGION:lightbox]
	[![](camera_1.png)(w:720)](camera_1.png)
	[/REGION]
	_Click image for a larger view._
	
	Here we have placed three cameras using different angles. 

1.	Also in the **Modes** menu, under **Basic**, drag in the number of **Box Triggers** to match the number of cameras you placed. 

	[REGION:lightbox]
	[![](camera_2.png)(w:720)](camera_2.png)
	[/REGION]
	_Click image for a larger view._

	Move the **Box Triggers** to where you want the player to trigger the changing of cameras. 

	[REGION:tip]
	With a Box Trigger selected, press **W** (to enter Translation Mode), **E** (to enter Rotation Mode) or **R** (to enter Scale Mode) to manipulate the Actors to your desired location, rotation or scale. Please see [](GettingStarted/HowTo/ManipulatingActors) for more information. 
	[/REGION]

1.	With each of your cameras selected, click the **Blueprints** button then select **Open Level Blueprint**. 

	![](camera_3.png)

1.	Inside the **Level Blueprint**, **Right-click** in the graph and choose **Create References to selected Actors**. 

	![](camera_4.png)

	This will add references to each of the Camera Actors you have placed in your level. 

1.	Return to the Level Editor viewport, then in the [World Outliner](Engine/UI/LevelEditor/SceneOutliner/Interface), select each of your **Box Triggers** and return to the Level Blueprint. 

1.	**Right-click** in the graph and under **Add Event for Selected Actors** and **Collision**, select **AddOnActorBeginOverlap**. 

	![](camera_5.png)
	
	This will add **Events** for each **Box Trigger** that will fire off when the player enters them. 

1.	**Right-click** in the graph and add the **Get Player Controller** node. 

	![](camera_6.png)

1.	**Right-click** in the graph and add the **Set View Target with Blend** node (un-check **Context Sensitive** if you do not see it). 

	![](camera_7.png)

1.	Connect the (TriggerBox), **Get Player Controller** and **CameraActor** nodes as shown below. 

	![](camera_8.png)

	We have now assigned the first camera to be used when entering the first trigger box. 

1.	Repeat the process above for the rest of your cameras/trigger boxes. 

	![](camera_9.png)

	Each of our cameras are now set to be switched to when entering their respective trigger boxes. 

1.	Click **Compile** then close the Blueprint and click **Play** to play in the Editor. 

	![](camera_10.png)

## End Result

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
RQz0V-UuLCw
[/PARAMLITERAL]
[/OBJECT]

You will see that when you enter each of the Box Trigger's you have placed, it updates the game view to the Camera Actor you have specified. This a quick example of how you could start working on a multi-camera based game, you would probably want to also account for situations when the player is outside of your camera's viewing angle and adjust player input based on camera relativity. 


