INTSourceChangelist:3429254
Availability: Public
Title:여러 카메라 전환
Crumbs: %ROOT%, Gameplay, Gameplay\HowTo\UsingCameras
Description:다중 고정 카메라 앵글 구성 및 전환 사용법 예제입니다.
Related: Gameplay\HowTo\UsingCameras
Related: Gameplay\Framework\Camera
Related: Engine/Matinee
Related: Engine/Blueprints
SkillLevel: Beginner
Version: 4.8
type:how-to

이번 하우투에서는 레벨에 **카메라** 액터를 다수 추가한 뒤 플레이어가 레벨에 배치된 **Trigger Volume** 에 들어서면 그 카메라 액터를 전환하도록 하겠습니다. 이 튜토리얼을 마치고 나면, 직접 다중 카메라 기반 게임 구성 및 각 카메라 사용 시기를 정의할 수 있을 것입니다.

[REGION:note]
 이번 예제에는, **시작용 콘텐츠** 가 포함된 **블루프린트 삼인칭 템플릿** 프로젝트를 사용합니다.
[/REGION]


1.	**모드** 메뉴의 **배치** 상태에서 **기본** 아래 **Camera** (카메라) 액터를 원하는 만큼 끌어 놓습니다.

	[REGION:lightbox]
	[![](camera_1.png)(w:720)](camera_1.png)
	[/REGION]
	_Click image for a larger view._
	
	여기서는 앵글이 다른 카메라를 셋 배치했습니다.

1.	또한 **모드** 메뉴에서 **기본** 아래 배치한 카메라 갯수에 맞춰 **박스 트리거** 를 끌어 놓습니다.

	[REGION:lightbox]
	[![](camera_2.png)(w:720)](camera_2.png)
	[/REGION]
	_Click image for a larger view._

	플레이어가 카메라를 전환시켰으면 하는 트리거 위치에 **박스 트리거** 를 배치합니다. 

	[REGION:tip]
	박스 트리거를 선택한 채 키보드의 **W** (이동 모드), **E** (회전 모드), **R** (스케일 모드) 키를 눌러 액터의 위치, 방향, 크기를 조절할 수 있습니다. 자세한 정보는 [](GettingStarted/HowTo/ManipulatingActors) 문서를 참고하세요.
	[/REGION]

1.	각 카메라를 선택한 상태로 **블루프린트** 버튼을 클릭한 다음 **레벨 블루프린트 열기** 를 선택합니다.

	![](camera_3.png)

1.	**레벨 블루프린트** 안에서 그래프에 **우클릭** 한 다음 **선택된 액터로의 레퍼런스 생성** 을 선택합니다.

	![](camera_4.png)

	그러면 레벨에 배치한 각 카메라 액터로의 레퍼런스가 추가됩니다.

1.	**레벨 블루프린트** 로 돌아온 다음 [월드 아웃라이너](Engine/UI/LevelEditor/SceneOutliner/Interface) 에서 **박스 트리거** 각각을 선택한 뒤 **레벨 블루프린트** 로 돌아옵니다.

1.	그래프에 **우클릭** 하고 **선택된 액터에 대한 이벤트 추가** 아래 **콜리전** 에서 **Add OnActorBeginOverlap** 를 선택합니다. 

	![](camera_5.png)
	
	그러면 플레이어가 각 **박스 트리거** 에 들어설 때 발동되는 **이벤트** 가 추가됩니다.

1.	그래프에 **우클릭** 한 다음 **Get Player Controller** 노드를 추가합니다.

	![](camera_6.png)

1.	그래프에 **우클릭** 한 다음 **Set View Target with Blend** 노드를 추가합니다 (안보이면 **컨텍스트에 따라** 체크를 해제합니다). 

	![](camera_7.png)

1.	트리거 박스, **Get Player Controller**, **CameraActor** 노드를 아래와 같이 연결합니다.

	![](camera_8.png)

	첫 트리거 박스에 들어서면 사용할 첫 번째 카메라를 할당했습니다.

1.	나머지 카메라/트리거 박스에 위 작업을 반복합니다.

	![](camera_9.png)

	각각의 카메라가 각자의 트리거 박스에 들어서면 전환되도록 설정했습니다.

1.	**컴파일** 클릭 후 블루프린트를 닫고 **플레이** 를 클릭하여 에디터에서 플레이합니다.

	![](camera_10.png)

## 최종 결과

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
RQz0V-UuLCw
[/PARAMLITERAL]
[/OBJECT]

이제 배치한 박스 트리거 각각에 들어서면 지정한 카메라 액터로 게임 뷰가 업데이트되는 것을 볼 수 있을 것입니다. 멀티 카메라 기반 게임 작업 토대가 되는 간단한 예제로, 플레이어가 카메라 뷰 앵글 밖에 있는 상황을 고려하여 카메라에 상대적으로 플레이어 입력을 조정해 볼 수도 있겠습니다.

