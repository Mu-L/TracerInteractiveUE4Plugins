INTSourceChangelist:3782314
Availability:Public
Title:虚幻项目和游戏性
Crumbs: %ROOT%, Gameplay
Description:介绍虚幻引擎中的项目、关卡、类和 Actor。
version:4.9

项目的所有内容均包含在项目目录中。可创建任意数量的项目，但每个均为自含式。使用虚幻引擎的 **项目浏览器（Project Browser）** 进行 [创建新项目](Engine/Basics/Projects/Browser#creatingnewprojects) 将设置必要的项目框架，如 [目录结构](Engine\Basics\DirectoryStructure) 和可 [在编辑器中打开](Engine/Basics/Projects/Browser#openingprojects) 的虚幻项目文件（`[ProjectName].uproject`）。  

项目所包含的资源作为 `.uasset` 文件存储在 Content 文件夹中。这些资源包括材质、静态和骨骼网格体、蓝图、声音提示，以及纹理。它们是可重复使用的参考物质和模板，可被项目中的对象调用。

项目中还包括关卡。关卡通常被称作地图，作为 `.umap` 文件存储在 Content 文件夹中。在虚幻编辑器中，每次可针对一个关卡进行操作，关卡将显示 
在 **视口** 中。 

![](map_viewport.png)(w:500)

[COMMENT:none]
 **Actors** 是虚幻引擎 4 中最重要的概念。它们在游戏中无处不在，游戏中每个互动实体均为 Actor。它们通常包含一个或多个组件，可被放置在 **关卡** 中或在游戏进程中被 **生成**，支持多人游戏中的网络复制。 
[/COMMENT]

从最基础的层面而言，**Actor** 是一个游戏性实体，（通常）包含一个或多个组件，可被放置在 **关卡** 中或在游戏进程中被 **生成**，支持多人游戏中的网络复制。在上图的关卡中，地面平台、关卡中央的块，以及图片下方的 PlayerStart 都是 Actor。所有的 Actor 均由 AActor 类（可生成游戏性对象的基类）延展而来。

在某种意义上，Actor 可被视为包含特殊类型 **对象**（称作 **组件**）的容器。例如，一个 CameraActor 包含一个摄像机组件（CameraComponent）。

![](camera_actor.png)

而摄像机组件包含摄像机的全部功能（如视场）。这意味着摄像机组件可包含在其他 Actor 中（如角色），为这些对象赋予相同的摄像机功能。

![](pawn_actor.png)

不同类型的组件可用于控制 Actor 移动的方式、Actor 被渲染的方式，以及 Actor 功能的诸多其他部分。所有对象，包括组件，皆由 UObject 类（游戏性对象的基类）延展而来。这意味着它们无法被实例到世界场景中，必须从属于 Actor。

每个 Actor 或对象皆为一个类的单独实例。类设置 Actor 或对象的模板。它定义可针对该 Actor 或对象进行设置的变量，还定义可在该 Actor 或对象中进行执行的函数。可使用 C++ 代码新建类，或对象和 Actor 的类型。蓝图类主要用于创建设置新 Actor 的类，但也可通过蓝图类扩展一些对象。也可新建一个 C++ 类，然后制作一个派生自此 C++ 类的蓝图类，将以上两者结合起来。如需了解创建类并制作新类型 Actor 和对象的更多内容，请查阅 [类创建基础](Gameplay\ClassCreation) 页面。

