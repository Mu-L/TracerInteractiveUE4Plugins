INTSourceChangelist:3782314
Availability:Public
Title:アンリアル プロジェクトとゲームプレイ
Crumbs: %ROOT%, Gameplay
Description:アンリアルエンジンのプロジェクト、レベル、クラス、アクタ入門
version:4.9

プロジェクトに関するあらゆるものはプロジェクトディレクトリ内に格納されます。好きな数だけプロジェクトを作成することができますが、各プロジェクトは独立しています。[新規プロジェクトの作成](Engine/Basics/Projects/Browser#新規プロジェクトの作成) にアンリアルエンジンの **プロジェクト ブラウザ** を使用すると、
[ディレクトリ構造](Engine\Basics\DirectoryStructure) やアンリアル プロジェクト ファイル (`.uproject`) など、 
[アンリアルエディタで開く](Engine/Basics/Projects/Browser#プロジェクトを開く) ことができるプロジェクト フレームワークが設定されます。  

プロジェクトに格納されるアセットは、「Content」フォルダに「`.uasset`」ファイルとして保存されます。こうしたアセットはマテリアル、スタティックやスケルタルメッシュ、ブループリント、サウンドキュー、そしてテクスチャを含むことが可能です。
ユーザーのプロジェクトのオブジェクトで呼び出し可能な再利用できるリファレンス マテリアルおよびテンプレートです。

プロジェクトにはレベルも含まれます。レベルは、マップとも呼ばれ、「Content」フォルダ内の「`.umap`」ファイルとして保存されます。アンリアルエディタでは、一度に 1 つのレベルの作業を行い、 
レベルは **ビューポート** に表示されます。 

![](map_viewport.png)(w:500)

[COMMENT:none]
 **アクタ** はアンリアル エンジン 4 において非常に重要な概念です。ゲームにはアクタがたくさんあります。ゲーム内のすべてのインタラクティブなエンティティはアクタだからです。通常、アクタには 1 つ以上のコンポーネントがあり、**レベル** 内に配置するか、ゲームプレイ中に **スポーン** されます。マルチプレイヤー ゲームではネットワークのレプリケーションをサポートします。 
[/COMMENT]

最も基本的なレベルでは、**アクタ** は1つ以上のコンポーネントを (通常) 格納するゲームプレイエンティティで、**レベル** に配置したりゲームプレイ中に **スポーン** することができて、マルチプレイヤーゲームのネットワークレプリケーションをサポートします。上記のレベルでは、グラウンドプラットフォーム、レベル中央のブロック、画面下部のプレイ開始の表示は全てアクタです。全てのアクタは、 AActor クラスから拡張されます。このクラスはスポーン可能なゲームプレイオブジェクトのベースクラスです。

アクタはある意味、コンポーネントと呼ばれる特別なタイプの **オブジェクト** を保持するコンテナとして考えられます。例えば、CameraActor は CameraComponent を格納します。

![](camera_actor.png)

FOV (視野角) のようなカメラの機能は、全て CameraComponent 内に格納されます。つまり _CameraComponent_ は、これらのオブジェクトに対し同一のカメラ機能を実装するために、 
キャラクターのように別のアクタに含むことができます。

![](pawn_actor.png)

異なるタイプのコンポーネントを、アクタの移動方法、レンダリング方法、また機能の他の部分に使用することができます。コンポーネントを含むすべてのオブジェクトは、 UObject クラスから拡張されます。 
UObject クラスは、全ゲームプレイオブジェクトの基底クラスです。つまり、このクラスはワールド内へ直接インスタンス化することはできず、アクタに属さなければいけません。

各アクタまたは各オブジェクトは、クラスの単一インスタンスです。クラスは、アクタまたはオブジェクトのテンプレートを設定します。テンプレートは、アクタあるいはオブジェクトに設定可能な変数、
そしてアクタまたはオブジェクト内で実行可能な関数を定義します。C++ コードでオブジェクトとアクタの新規クラスまたはタイプを作成することができます。Blueprint クラスを使っていくつかのオブジェクトを拡張することもできますが、 
Blueprint クラスでは主に新規アクタを設定するクラスを作成することができます。新規の C++ クラスを作成して、このクラスから Blueprint クラスを派生させることによって、これら両方を組み合わせることも出来ます。新規のアクタおよびオブジェクトのためのクラス作成に関する詳細は、 
[クラス作成の基本](Gameplay\ClassCreation) ページを参照してください。

