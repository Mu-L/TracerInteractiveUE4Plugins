INTSourceChangelist:1992863
Availability: Licensee
Title: Perforce 自动融合工具
Crumbs:%ROOT%, GettingStarted, GettingStarted/DownloadingUnrealEngine, GettingStarted/DownloadingUnrealEngine/Perforce
Description: 使用 Perforce 自动完成整合的脚本

[TOC(start:2)]



## 概述

Perforce 的 AutoMerge(自动融合) 脚本用于自动地执行在进行一个Perforce集成中所包含的冗长的和/或容易出错的步骤。
它合并了在 [Perforce 集成](GettingStarted/DownloadingUnrealEngine/Perforce/Integration) 页面所描述的用于融合的各种最佳实践，
所以这是在虚幻引擎Perforce数据库中推荐的融合方法。



## 使用自动融合工具

在P4V或P4Win中，该脚本是作为"custom tool(自定义工具)"操作的，它允许您融合两个分支间的一个单独的变更列表。

以下的屏幕截图显示了它在P4V中的样子：

![P4AutoMergeCustomToolMenu.jpg](P4AutoMergeCustomToolMenu.jpg)


* 对于任何分支，你可以选择 _Safe Merge(安全融合)_  或 _NULL Merge(空融合)_ （如下所示）。
* 有一个 _General(通用)_ 工具允许你选择一个任意的分支(通过一个弹出的对话框)。
* 通过匹配在P4V 或 P4Win中的自定义工具编辑器使用的格式，你可以增加你自己的自定义分支。


当运行脚本时，将在单独的窗口中输出一个诊断 (在P4V, P4Win中，显示在状态面板中)。如以下所示：

![P4AutoMergeOutput.jpg](P4AutoMergeOutput.jpg)

这个窗口将给出一个当前发生的事情的概要，并且可以用于解决问题。

最终，当您准备好迁入文件时，描述区域已经填入了我们的融合策略所要求的信息。

![P4AutoMergeChangeDescription.jpg](P4AutoMergeChangeDescription.jpg)

描述包括：


* [AUTOMERGE(自动融合)] 或 [SAFEMERGE(安全融合)]来说明融合是以何种方式进行的。
* 一个原始变更列表描述的副本。
* 一个说明了原始的分支、change(变更)#、提交者以及日期的脚注。



### 安全融合

_Safe Merge(安全融合)_ 工具融合一个变更列表并执行一个 _auto-safe(自动-安全)_ 冲突解决，它仅能自动解决在一个分支或另一个分支中的文件发生改变的冲突，但不能解决两个分支全部文件改变的冲突。这种类型的冲突解决保证会成功。当这个过程完成，你会看到一个已经填写好所要求的迁入描述的新的变更列表。如果有遗留了任何需要进行冲突解决的文件 (需要有执行一个融合的文件)，你必须在迁入前手动的处理它们。

请查看 [Perforce 集成](GettingStarted/DownloadingUnrealEngine/Perforce/Integration) 页面获得更多的关于手动冲突解决的问题。


### 空融合

 _空融合_ 工具融合一个变更列表并执行一个 _accept yours(接受您的)_ 冲突处理，这意味着文件将会被集成，但是不会被改变。这就明确说明将考虑集成一个变更列表，但是该变更列表不会合并这些变更。

要获得关于空融合的更多信息，请查看 [Perforce 集成](GettingStarted/DownloadingUnrealEngine/Perforce/Integration#Resolve) 页面。



## 应用


* 安全融合(UT3仅仅是用作一个例子):
    * 在UT3-PC中右击一个已提交的变更列表 
    * AutoMerge | UT3 PC -> PS3:  SAFE Merge(安全融合) 
    * 当完成时，将会生成关于这些文件的新的变更列表。
    * 将为你处理可以进行安全地冲突解决的任何文件，输出窗口中会列出剩余的不能处理的文件。
    * 处理不能安全地进行冲突解决的其它文件并迁入。
* 空融合 (UT3仅仅是用作一个例子):
    * 在UT3-PC中右击一个已提交的变更列表 
    * MergeTo | UT3 PC -> PS3:  NULL Merge（空融合） 
    * 当完成时，将会生成关于这些文件的新的变更列表。
    * 所有文件都会进行空融合。
    * 迁入NULL融合。




## 安装


### 安装Python

该脚本是一个使用了P4Python API的Python脚本，所以你需要先安装P4Python。

* 获得Python：
    * 推荐使用[ActiveState ActivePython](http://www.activestate.com/activepython/)。
    * 目前脚本是在版本为 **2.5.2**  的Python上进行测试的。
* 获得P4Python:
    * 你可以从Perforce 网站[Related Software(相关软件)](http://www.perforce.com/perforce/loadsupp.html)下载最新的P4Python。
    * 你可以从Perforce 网站中获得[API documentation(API文档)](http://www.perforce.com/perforce/doc.current/manuals/p4script/p4script.pdf)。
    * 目前脚本是在版本为*2008.2* 的 Python上进行测试的。



###安装自定义工具

一旦安装了Python 和 P4Python:

* 下载python 脚本 [](P4AutoMerge.py.txt) ，并把它放置到您的Python路径下。
* 在P4V的 _Tools(工具)_ 菜单，选择_Manage custom tools(管理自定义工具)..._
* 选择 _New|Tool(新建|工具)...(随意地创建一个用于分组管理您的工具的文件夹)_
* 像以下图片这样设置选项。
    * 替换显示的字符串为您自己的分支名称。
    * 点击 _select(选择)..._ 按钮来获得关于P4V的自定义工具中可获得的选项更多详细资料。


![P4AutoMergeSetup.jpg](P4AutoMergeSetup.jpg)


* 在那里，你应该可以右击一个已提交的变更列表并选择您的工具。



### 安装通用的分支工具

您也可以设置P4V来为分支名称显示一个提示。这也是以几乎同样的方式设置的，但是要指定一个特殊的选项而不是分支名称：

* **`P4AutoMerge.py -p $p -u $u -c $c -b $D -m SAFE %C`**
* 在描述区域，输入以下文本： "Enter the branchspec you want to merge from (append -r to reverse it)(输入你要融合的分支说明(附加-r来反转它))"。


![P4AutoMergeSetupGeneral.jpg](P4AutoMergeSetupGeneral.jpg)



## 一次融合多个变更列表

从技术上来讲，脚本支持一次融合一系列的变更列表。然而，这是不推荐的，而且这样很难在自定义工具的图形界面使用。但是你可以使用命令行选项自己来控制它。


    
    用法： P4AutoMerge.py [options]
    
            描述: 支持从一个分支中自动融合一个变更列表的脚本。
    
    Options(选项):
      --version             显示程序版本并退出
      -h, --help            显示帮助信息并退出
      -p PORT, --port=PORT  要使用的P4端口。比如： p4-server:1666。
                                默认使用P4环境搜索获得P4PORT(P4端口)。
      -u USER, --user=USER  要使用的P4用户。使用p4环境搜索来获得P4USER(P4用户)
    
      -c CLIENT, --client=CLIENT
                            要使用的P4客户端。默认使用p4环境搜索来获得P4CLIENT (p4客户端)
    
      -r, --reverse         如果指定了该项，则翻转分支说明。默认为False. Default = False
      -b BRANCHSPEC, --branchspec=BRANCHSPEC
                            <Required> 要使用的分支说明。
      -m MERGETYPE, --mergetype=MERGETYPE
                            执行的融合类型，有效选项为SAFE和NULL
                            ， 默认为SAFE。
    



脚本权限没有额外的登陆界面，如果想成功地运行脚本，那么你必须已经在客户端登陆并被识别。

 




