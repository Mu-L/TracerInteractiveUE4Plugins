Availability: Licensee
Title:Perforce集成常见问题解答
Crumbs:%ROOT%, Engine, Programming, Programming/Basics, GettingStarted/DownloadingUnrealEngine/Perforce
Description:关于Perforce术语和使用详细信息的常见问题。

[TOC(start:2)]



## 概述

本文档提供了对虚幻引擎4所应用到的Perforce许多通用功能以及相关术语的讲解。

_[注意: 为了帮助简化融合的过程，创建了一个自动融合工具并且它能够被集成到P4V和P4Win中。它自动完成了许多冗长的步骤并且本文档也对其最佳应用做了描述。要获得更多的信息，请查看[Perforce自动融合](GettingStarted/DownloadingUnrealEngine/Perforce/AutoMerge)页面以获得更多信息。]_



## 常见问题解答


### 在Perforce中集成、融合及分支是什么意思？

它们都意味同一件事情，并且都通过使用  _Integrate_ 命令来完成。_Branch_  通常是指在一个新的位置创建一个新的文件的集成。_Merge_ 是两个先前存在的分支目录文件之间的集成。


### 当我们仅仅是拷贝一个文件并改变它时，为什么要执行所有这些复杂的步骤？

Perforce维持一个针对所有已经发生的改变和集成的数据库，该数据库是可以搜索的、图形化的。手动的融合将严重的切断了数据库的跟踪记录，使它不能跟踪代码历史、使分支难于维护、也使您和Perforce在进行一次正确的集成时变得更加困难。可能发生任何不堪设想的后果，从Perforce拒绝集成文件到为了一个简单的变更需要荒唐地执行复杂的解决方法都可能发生。

(#IntegrateSection)


### 怎样集成一个单独的变更列表(changelist)？

_注意： 在集成时，强烈推荐使用P4V，因为它的UI做了很多改进来可视化整个过程。任何事情最终在P4API函数调用时归结为相同的处理，所以P4V和P4Win都支持同样的功能集。_

在P4V中集成一个单独的变更列表(changelist)：


* 请确保您活动的workspace(工作区)包含着您要集成到的分支。
    * 没有必要在您的workspace中包含源分支。
* **右击** 您要集成的变更列表(changelist)并选择 _Integrate using submitted changeslist 'change#'(使用提交的变更列表'change#'来集成)_ ...。您将会看到一个和这个类似的对话框：


(#IntegrationShot)
![P4VIntegrate.jpg](P4VIntegrate.jpg)


* 在 _Choose integration method(选择集成方法)_ 的下面，选择 _Use branch specification(使用分支说明书)_ 并选择您要使用的分支。
* 如果您删除了或重新添加了一个文件： 
    * 点击 _Advanced options(高级选项)..._ 并通过点击三角形图标选择。
    * 在 _enable integrations around deleted revisions(启用关于已删除的修订版本的集成)_ ，选择适当的选项。
    * 一般情况下您想选择  _Delete target file when source is deleted(当源文件被删除时，删除目标文件)._ 选项。
    * 除非您明确知道您在做什么，否则不要选择其它任何选项。


![P4IntegrateAdvancedOptions.JPG](P4IntegrateAdvancedOptions.JPG)


* 经常使用预览按钮来检查错误。如果有错误，您将不能完成集成。
    * P4V现在支持集成错误的可视化检查。
    * 您将会以树的形式看到所有集成的文件，那些带有红色标记的文件是不能被集成的。
    * 您可以使用红色的箭头来重新查看每个错误。_Description(描述)_ 域中将会明确地解释为什么每个文件不能被集成。
    * 您也可以在经典的平面视图和新的树状视图间进行切换。
    * 如果您不能解决这些错误，请向其他人寻求帮助。


![P4VPreview.JPG](P4VPreview.JPG)


* 选择 _New(新建)_ 变更列表(changelist)来保证您没有将现有的变更和这个融合相混淆。
* 点击 _Finish_ 来创建新的变更列表(changelist)。
* 根据[以下的说明](#Resolve)来解决集成的文件的冲突问题。
* 在提交前测试所有东西。
* 请记住使用接下来要提到的[变更列表描述指南](#ChangeDesc)。


在P4Win集成一个单一的改变：

* 打开修订历史并 **右击** 您想融合的变更列表，然后选择_Integrate Using|Branchspec(集成 使用|分支说明)..._
* 从列表中选择分支说明。
* 如果您删除了或重新添加了一个文件： 
    * 选择 _Options...|Permit deletes/re-adds(选项...|允许删除/重新添加)_。
    * 根据需要选择 _deletes only(仅删除)_ , _re-adds only(仅重新添加)_ 或 _both(两者都)_ 单选按钮。
    * 除非您明确知道您在做什么，否则不要选择其它任何选项。
*  P4Win没有用于预览的可视化工具，所以您必须在输出窗口中阅读文本。
    * 如果您在此处遇到问题，请咨询其他人员。
* 选择 _New(新建)_ 变更列表(changelist)来保证您没有将现有的变更和这个融合相混淆。
* 点击_Finish(完成)_来创建一个新的变更列表。
* 根据[以下的说明](#Resolve)来解决集成的文件的冲突问题。
* 在提交前测试所有东西。
* 请记住使用接下来要提到的[变更列表描述指南](#ChangeDesc)。


(#Resolve)


### 解决文件冲突最快最安全的方法是什么？

每个被集成的文件在迁入前必须进行冲突解决。难解决的冲突有时需要向原作者寻求帮助[TOC(start:2)]。为了简化过程，Perforce有几个选项用来自动解决简单的融合问题来缩短该问题列表。P4V和P4Win都提供了这些选项。最安全的进行方式是按照以下顺序：
1. 1 _Safe automatic_ resolve(保存自动_冲突解决） - 如果文件自上次融合以来仅在一个分支上进行了变更，则自动解决变更。这通常是安全的，因为它只是复制改变的文件。
1. _Automatic_ resolve(自动_冲突解决) - 如果文件在两个分支上都有改变但没有冲突存在，则可以使用解决变更。
1. _Interactive_ resolve - 其它剩余的文件都是难于处理的，它们在两个分支上的改变相互冲突。
    * 为了解决这些问题，您可以使用一个融合工具，比如：
        * [Araxis Merge](http://www.araxis.com/), 或 
        * P4WinMerge.

![P4VResolve.jpg](P4VResolve.jpg)

注意：

* _Safe Automatic(安全自动)_ 冲突解决将会自动处理大部分文件。
* 当交互式地融合文件时一定要小心；如果必要，请寻求帮助。


剩下的文件便是在两个分支上都有更改的文件。

P4V将会显示它所发现的变更和冲突的总数，而且会给您一个工具集来协助您进行处理(打开、diff(差异)、历史、时间延迟(time lapse))

![P4VResolveIndividual.jpg](P4VResolveIndividual.jpg)

当您准备好后，点击 _Run Merge Tool(运行融合工具)_ 来运行您已注册的融合工具来真正地执行融合。推荐使用P4V's内置的融合工具，因为它提供了显示源、共同的祖先代码、目标和融合结果的4种内容的面板，并且每个该改变的源代码都有颜色标记。许多其它的融合工具只显示了3个面板(比如Araxis)，所以基础版本将在执行融合时被覆盖。要获得关于P4Merge使用的颜色/图标设计的更多信息，请查看P4Merge Help Viewer(在融合时，按下 _F1_ )。

![P4VMerge.jpg](P4VMerge.jpg)

当所有文件的冲突已经解决，您可以提交您的变更文件了。

(#ChangeDesc)


### 当完成集成并要提交时，应该怎么写迁入注释哪？

因为Perforce在技术上是根据它内部的数据库来实现跟踪集成的，这意味您的注释将会帮助其他人理解这个变更是来源于一个不同的分支的。

当迁入文件时:

* 要包含一句说明是您正在集成代码的语句，以及它来自哪个变更列表。最好您每集成一个单独的变更列表提交一次。在每次提交中混乱地一起集成多个变更列表，可能在以后解决融合问题时遇到困难。
* 为了使其他人更容易地理解，请重新概括您已经做的变更和修改。如果没有其它东西，可以仅仅从原始的变更列表中复制并粘贴即可。



### 如果我有很多变更需要集成， 那么我可以一次集成所有的变更吗？

请不要这样做。比较好的方法是对每个集成的变更列表进行单独的提交。然而一次集成多个变更是可以做到的，但是并不推荐那么做。那样会使融合的过程变得格外的困难，尤其是如果在同一个文件中有很多重叠的改变。同时，如果您在没有迁入文件的情况下，对该文件执行了多次的融合，那么在出现问题时，您不能取消一个单独的集成。


### 我在融合时，解决文件冲突问题如此的困难以至于不可能完成， 我应该手动的来解决该问题吗？

您应该继续执行集成来通知Perforce数据库变更已经被集成。您应该像正常一样来执行集成，但是在冲突解决时您要选择"accept yours(接受)"。这样将不会改变本地文件，但是将告诉Perforce这些文件已经被集成。

然后，在迁入之前，您应该_reopen for edit(重新打开来编辑)_适当的文件并在新的代码中做需要的变更。这样您创建了一个单一的变更列表来代表您代码中所集成的该变更。


### 不管是源分支还是目标分支中的某个文件，自从我感兴趣的变更列表被提交后已经做了很多的变更。融合这个变更可以吗？

一般来说是可以的，这应该可以正常的执行。即使文件自从源分支被变更后，已经被严重地改变(或者删除)，按照以上的说明，Perforce将仅集成您所感兴趣的精确的变更。当然，变更列表越旧，在目标分支中可能遇到越多的需要处理的融合冲突。


### 我应该集成一个文件(或一组文件)而不是一个变更列表吗？

除非您有一个非常合理的理由，否则不推荐您这么做。您应该总是通过选择一个单独的变更列表来执行集成，集成完成后，测试它并提交它。如果您直接集成文件，您将会融合源分支中的任何或者所有未集成的变更到那个文件中。这意味您可能会将不必要的变更或者依靠不存在的代码的变更引入到目标分支中！ 通过仅融合精确的需要的变更列表来避免该问题。


### 当我完成以后，我应该恢复我没有改变的内容吗？

不需要，您应该经常的迁入您从一个变更列表集成的所有文件。即使文件没有改变，迁入它们会更新Perforce数据库中的集成信息。

注意： Perforce数据库集成历史是基于每个文件的，而不是基于每个变更列表的。如果您更新了一个变更列表，但后来又恢复了一些文件，这将在分析数据库时更加的困难，因为一些变更列表会列出为仅是部分地集成。

(#NullMerge)


### 如果确定不应该集成某个变更列表, 我该怎么做？

这是所谓的_NULL Merge(空融合)_  。如果您完全确定您提交的一个变更将在其它的分支中永远用不到，那么通常使用空融合是有帮助的。要执行空融合，通过选择"accept yours（接受）"来集成文件并恢复它们。这将会创建一个正式的记录来说明某人已经检查了一个特定的变更，但是没有做任何事情。这将简化维护该分支的人员的处理过程，因为这个变更将不会被包含在集成到该分支的待定变更列表中。

这些操作是否必要，依赖于您的代码规则和如何管理集成的，所以您需要同代码管理人员进行核查，来确定对于您的变更是否需要执行这些操作。

当执行空融合时，您应该在提交描述中提及变更列表的编号以及它是一个空集成的事实，从而保证在以后分析集成记录时没有冲突。


### 我想以相反的方向来集成，而不是这个分支创建时设置来集成。我该怎么做？

应该创建Branchspecs(分支说明）来使变更的正常流程是默认的集成方向。当融合分支并经将分支去掉的时候便是在进行反向集成。

Perforce支持在集成中"reversing(反向)"一个分支说明：

* 在P4V中，您可以简单地点击在 _Select branch specification(选择分支说明)_ 部分的绿色的箭头。查看在[集成项](#IntegrateSection)中的[屏幕截图](#IntegrationShot)。
    * 在那里设置有文字提醒以便防止您忘记了。:)
* P4Win似乎可以自动的发现反向请求。
    * 仅使用同一个分支说明来集成变更列表并且它将自动决定是否应该反向映射。



### 我正在尝试集成一个变更，但是该变更包含了目标分支中不应该存在的文件。我该怎么做？

更新Branchspecs(分支说明)来排除这些集成文件。和Branchspecs(分支说明)的拥有者谈论并让他们取消对这些文件的映射。

一般当这种情况发生时，Perforce将会做这两件事情中的一件：
1. 提供一个警告，说明由于没有-d 或–dt标志从而不能执行集成。
1. 执行集成并尝试分支新文件。
	* 您可以添加-d标志来强制执行集成并在迁入之前恢复这些文件，然而由于以下两个原因，这样做是强烈的不鼓励的：
		1. 容易产生错误。当发现问题时修复分支说明将保证您或者其它您之后的任何人不会意外地地添加(重新添加)这些文件。
		1. 它不能和Perforce集成数据库进行很好的协同工作，因为Perforce将一直认为在那个变更列表中仍然有文件需要被集成。

比如，Delta-To-Main分支(Gears PC)有一个只有Delta需要的文件夹WarGame，并且WareGame已经从Main中移除。当您试图集成一个包含WarGame中的文件的变更时，Perforce将提出需要-d 或 –dt选项来集成"已删除的修订版本"。为了修复该问题，可以从 Delta-To-Main分支说明中移除WarGame，从而Perforce将不再尝试集成这些文件。

 




