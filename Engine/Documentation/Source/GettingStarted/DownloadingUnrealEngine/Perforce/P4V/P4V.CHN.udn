Availability: Licensee
Title:针对虚幻引擎4设置P4V
Crumbs:%ROOT%, Engine, Programming, Programming/Basics, GettingStarted/DownloadingUnrealEngine/Perforce
Description:使用虚幻引擎4来安装、设置并与Perforce P4V windows客户端进行版本同步的指南。

[TOC(start:2)]



## 概述

该文档说明了设置 P4V客户端来连接到虚幻引擎4仓库(depot)并获得一个引擎版本的步骤。

[REGION:note]
本文所使用的P4V版本是 _P4V/NTX86/2009.2/236331_ released _February 24, 2010_ 。如果使用不同的版本，那么步骤和图片可能有所差别。
[/REGION]

为了连接Perforce，您需要建立一个可靠的虚拟专用网络(VPN) [连接到Epic Games](GettingStarted/DownloadingUnrealEngine/VPNSetup)。

关于其他的通用技巧及帮助，请参照 [设置Perforce](GettingStarted/DownloadingUnrealEngine/Perforce/Setup)页面。


### 安装

1. 运行P4Vinst的可执行文件安装包。
1. 1在Perforce的 _Select Features（选择功能）_ 页面，默认情况下所有的功能都是被选择的。

	![install_features.jpg](install_features.jpg)(w:514 h:392)

	按下![install_next_button.jpg](install_next_button.jpg)按钮来继续。 

	如果您之前是用P4Win，会提示您SCC插件将会被替换。

	![install_plugin_warning.jpg](install_plugin_warning.jpg)(w:362 h:155)

1. 在 _Perforce Client Configuration（Perforce客户端配置）_ 页面输入以下信息： 

	* **Server Port (服务器端口)** - **`p4-licensee-proxy.epicgames.net:1667`** (通过US或东亚VPN可以访问)或 **`p4-licensee-proxy-asia.epicgames.net:1667`** （专供通过东亚VPN用户连接使用）。
	* **Username (用户名)**  -  该用户名在最初的UDN欢迎邮件提供，一般是您的团队名称。(**注意**: 这和您的UDN登陆信息不同。)

	![install_client_config.jpg](install_client_config.jpg)(w:514 h:392)

	按下![install_next_button.jpg](install_next_button.jpg)按钮来继续。 
1. 如果你准备好开始进行安装了。按下 ![install_start_button.jpg](install_start_button.jpg) 按钮开始进行安装。

	![install_complete.jpg](install_complete.jpg)(w:514 h:392)

	可能会提示您在安装期间关闭其它的软件。如果这不是一个选项，那么在您安装完成后需要重新启动计算机。


[REGION:note]
如果需要，你能够在以后重新配置IP地址，通过 _Settings(设置)_ 菜单。请使用名称连接到服务器，而不是使用解析的IP地址。如果服务器的电脑换了，那么IP地址可能会该改变；但是名称不会改变。
[/REGION]

### 配置-工作空间

[REGION:note]
对于熟悉P4Win的人，ClientSpecs在PV4中也被认为Workspaces(工作区)。
[/REGION]

1. 运行PV4。如果第一次启动，可能会提示您运行 _Connection Setup Wizard（连接设置向导）_ 。因为您在安装过程中已经设置了连接，所以你可以选择 _No（否）_ 。
1. _Open Connection（打开连接）_ 对话框将会打开。

![connect_dialog.jpg](connect_dialog.jpg)(w:512 h:265)

确认 _Server（服务器）_ 和 _User（用户）_ 文字域中的内容和要求的信息相匹配。
1. 如果获得一个客户端Workspace， 如果你先前使用的是P4Win或者是从新安装P4V，你可以使用 ![connect_browse_button.jpg](connect_browse_button.jpg)按钮来找到和您的用户名相关的Workspace。

	如果没有工作区存在，那么需要按下 ![connect_new_button.jpg](connect_new_button.jpg) 按钮来创建新的工作区。在打开的对话框中，输入要创建的工作区的名称，使用以下信息作为指南： 

	* **如果您是授权用户** _Client Name(客户端名称)_ : **UE4_Licensee_[TEAMNAME]** (或者以您的UDN用户名或团队名称结束)
	* **如果您是承包人** _Client Name(客户端名称)_ : **UE4_Contractor_[USERNAME]** (或者以您的UDN用户名或团队名称结束)

	![connect_workspace.jpg](connect_workspace.jpg)(w:219 h:131)

	按下 ![connect_ok_button.jpg](connect_ok_button.jpg) 按钮创建新的工作区。
1. 该工作区现在显示在 _Open Connection（打开连接）_ 对话框中。

	![connect_complete.jpg](connect_complete.jpg)(w:512 h:265)

	以后当您想打开P4V时可以再次选择打开这个窗口。

	![connect_startup.jpg](connect_startup.jpg)(w:140 h:26)

按下 ![connect_ok_button.jpg](connect_ok_button.jpg) 按钮来打开连接及P4V客户端。 
1. 可能会提示您的访问权已经过期了。请选择在以后不再查看该信息，并点击 ![connect_ok_button.jpg](connect_ok_button.jpg) 按钮即可 。

	如果提示您使用最近创建的workspace，拒绝该提议。您 **一定** 不想立刻替换很多G的数据内容。


Workspaces是基于每台电脑来创建的，因为它们要跟踪保存到那个电脑硬盘所选目录中存储的每个文件的准确的修订版本。因此，如果您需要重新同步到另一台PC，你将需要在这台PC上重复创建一个新的workspace的过程。

[REGION:note]
如果您是一个匿名用户，你应该创建一个命名为: UE4_Anonymous_#的workspace，‘#’和您的匿名的用户ID相匹配(比如：UE4_Anonymous_8)。另外，你将不想将任何真实的姓名输入到文字域中。并且你或许也不想使用一个可以识别的电脑名称。如果其它的用户搜索用户或者workspace列表，所有的这些文字域的内容都会被他们看到。
[/REGION]

#### 问题解决

选择"depot view"并使用"Entire Depot tree"进行过滤，将显示你可以访问的所有文件夹。可替换地，当创建/编辑一个workspace时，你可以使用"View"标签来可视化地显示你可以访问的所有文件。



## 版本和同步

通过标签和变更列表编号是识别文件修订版本的两个主要方法。从高层次来开，标签标识了构成某个特定引擎版本的所有修改，比如经过QA验证的版本，而变更列表编号标识了一组特定的修改。这两个改变间的真正区别在Perforce网站的[代码行和分支](http://www.perforce.com/perforce/doc.current/manuals/p4guide/06_codemgmt.html) 页面进行了详细的解释。要想同步到Epic的Perforce库，您需要知道以下内容：


* **Labels** - 要想更新到一个新的经过QA验证的版本，那么您应该同步到一个标签。
* **Changelists** - 要想同步到针对引擎某个特定方面的特定修改，那么您将需要同步到一个变更列表。



### P4V和库

P4V中的三个面板包含了您的工作区和Depot（库）树结构。在库树结构视图中，点击Depot节点来展开树并查看可用的目录。

![p4v_depot_tree.jpg](p4v_depot_tree.jpg)(w:374 h:307)


* _CodeDrop_ - 包含了Epic创建的各种游戏的代码包片段，可以用作为示例。
* _PhysX_ - 包含了针对物理中间件的通用文件；根据您的协议的不同，您也可以查看其他的目录和文件。
* _UnrealEngine3_ - 包含了用于编译及运行虚幻引擎3的任何内容。同时包含了ExampleGame和UDKGame示例。
* _UnrealMCP_ - 包含了UnrealMCP的源码文件，它是个SOA（面向服务的架构），主要用于提供具有高度可扩展性的可用资源集，从而提高玩家的在线体验。


要想获得更多信息, 请参照[目录布局](Engine/Basics/DirectoryStructure)页面。

在 _UnrealEngine3_ dir目录中有几个子目录: _Binaries_ 、 _Development_ 和 _Engine_; 及两个游戏目录: _ExampleGame_ 和 _UDKGame_ 。

![p4v_depot_tree_ue3.jpg](p4v_depot_tree_ue3.jpg)(w:374 h:307)

_ExampleGame_ 是Epic提供的最基础的游戏实现，如果您的游戏和 _虚幻竞技场_ 不是是非类似，那么这个游戏便是您创建您自己的游戏项目的很好的入手点。

_UDKGame_ 是Epic的当前虚幻引擎4应用示例，它基于 _Unreal Tournament 3(虚幻竞技场3)_ 。这提供了一个复杂的示例，展示了Epic使用引擎的过程。我们推荐使用 _UDKGame_ 作为示例，而不是扩展 _UDKGame_ 。非常欢迎您在您的游戏中使用 _UDKGame_ 中的C++或UnrealScript代码，但是您不能在您的游戏中发行任何Epic的内容(贴图、网格物体、关卡、声效等)。

对于 _UnrealEngine3_ 来说,Epic的大部分内容都位于特定游戏的目录中，所以如果您想要的仅是引擎源码，那么您可以简单地同步到 //depot/UnrealEngine3/Development 目录。您可以根据需要选中特定的目录，比如，要获得 _ExampleGame_ 的最新内容，而不更新 _UDKGame_ 内容。

![p4v_depot_tree_ue3_examplegame.jpg](p4v_depot_tree_ue3_examplegame.jpg)(w:374 h:307)

当获得了一个修订版本后，将会在日志窗口中显示大量的下载记录。当同步完成时，你所期望出现的是 _Sync completed with no warnings or errors（同步完成，没有警告或错误）_ 。


### 同步到一个QA版本

要想同步到一个经过QA验证的版本，请遵循以下步骤：

1. 在Depot树结构中， **右击** UnrealEngine3目录，然后从关联菜单中选择 _Get Revision（获得修订版本）..._ 。可替换地，您可以选择 _UnrealEngine3_ 目录，并从 _Actions( 动作)_ 菜单中选择 _Get Revision(获得修订版本)..._ 项。

	![p4v_depot_menu.jpg](p4v_depot_menu.jpg)(w:304 h:650)
1. _Get Revision(获得修订版本)_ 窗口将会打开。

	![p4v_get_revision.jpg](p4v_get_revision.jpg)(w:634 h:488)

	选择 _Specify revision using（指定的版本号）_ 单选按钮来启用组合框和文本域。

	![p4v_specify_revision.jpg](p4v_specify_revision.jpg)(w:513 h:63)
1. 从组合框中选择  _label(标签)_ 。

	![p4v_revision_label.jpg](p4v_revision_label.jpg)(w:100 h:103)

	按下![p4v_browse_button.jpg](p4v_browse_button.jpg)按钮来打开 _Select Label(选择标签)_ 窗口。

	![p4v_select_label.jpg](p4v_select_label.jpg)(w:800 h:526)
1. 选择您想同步到的标签。通常这是最新的经过QA验证的版本，由 _QA_APPROVED_BUILD_[Month]_[Year]_ 形式的标签指定。您可能需要向下滚动几次列表来获得所有要被下载的标签。

	![p4v_label_build.jpg](p4v_label_build.jpg)(w:800 h:526)

	按下 ![p4v_ok_button.jpg](p4v_ok_button.jpg) 按钮来选择标签并关闭窗口。
1. 按下 ![p4v_get_revision_button.jpg](p4v_get_revision_button.jpg) 来关闭 _Get Revision(获取修订版本)_ 窗口并开始同步。日志中开始显示同步过程。

	![p4v_sync_progress.jpg](p4v_sync_progress.jpg)(w:800 h:117)


## 使用源代码控制

几乎所有文件都可以集成到源码控制工具中。

可以通过常见命令来管理您工程中的文件的生命周期:

* 迁出
* 提交或迁入
* 恢复或回滚
* 修订版本 - 历史


除了直接在Perforce中使用源码控制外，您也可以使用编辑器工具。请参照[SCC集成](Engine/UI/SourceControl)页面获得如何在UnrealEd中管理各种内容包的信息。

 




