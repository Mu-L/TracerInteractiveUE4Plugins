Availability: Licensee
Title:Setting up P4V for Unreal Engine 4
Crumbs:%ROOT%, Engine, Programming, Programming/Basics, GettingStarted/DownloadingUnrealEngine/Perforce
Description:Guide to installing, setting up, and syncing builds with the Perforce P4V windows client for use with Unreal Engine 4.
version: 4.9

[TOC(start:2)]

This document covers the steps in setting up the P4V client to connect to the Unreal Engine 4 depot and get a build of the engine.

[REGION:note]
The version of P4V used in this document is P4V/NTX86/2009.2/236331 released February 24, 2010. If you're using a different version, the steps and images may differ.
[/REGION]

To connect to Perforce, you need to set up a secure Virtual Private Network (VPN) [Connection to Epic Games](GettingStarted/DownloadingUnrealEngine/VPNSetup).

For other general tips, see the [Setting up Perforce](GettingStarted/DownloadingUnrealEngine/Perforce/Setup) page.


### Installation

1. Run the P4Vinst executable installer. 
1. On the Perforce **Select Features** page, all features are selected by default. 

	![install_features.jpg](install_features.jpg)(w:514)

	Press the **Next > ** button to continue.

	If you previously used P4Win, you may be prompted that the SCC plugin will be replaced.

	![install_plugin_warning.jpg](install_plugin_warning.jpg)(w:362)

1. On the **Perforce Client Configuration** page, enter the information below and press the **Next >** button to continue.:

	* **Server Port** - _ssl:p4-licensee.epicgames.com:1667_
		
		[REGION:tip]
			The address above should automatically direct you to a regional proxy with the best latency based on your geographic location. If for some reason you need to connect to a specific regional proxy, you can connect to them using the addresses below:
			* **United States East (Virginia)**: _ssl:p4-licensee-east.us.epicgames.com:1667_
			* **United States West (Oregon)**: _ssl:p4-licensee-west.us.epicgames.com:1667_
			* **Asia Pacific Northeast (Tokyo)**: _ssl:p4-licensee-northeast.ap.epicgames.com:1667_
			* **Europe Central (Frankfurt)**: _ssl:p4-licensee-central.eu.epicgames.com:1667_
		[/REGION]

	* **Username** - Perforce username provided by Epic Games.
	[REGION:note]
	This is different from your UDN login information
	[/REGION]

1. You are ready to begin the installation. Press the **Start** button to begin.

	![install_complete.jpg](install_complete.jpg)(w:514)

	You may be prompted to close other programs during the installation. If that is not an option, you will have to reboot after installation.


[REGION:note]
You can later reconfigure the IP address, as needed, via the **Settings** menu. Please use the name to connect to the server, not the resolved IP address. The IP address may change if the server computer is changed; but the name will remain the same!
[/REGION]

### Configuration - Workspaces

[REGION:note]
For those that are familiar with P4Win, ClientSpecs are known as Workspaces in P4V.
[/REGION]

1. Run P4V. Upon first start, you may be prompted to run the **Connection Setup Wizard**. You can choose _No_ since the connection was already set up during installation.
1. The **Open Connection** dialog will open.

![connect_dialog.jpg](connect_dialog.jpg)(w:512)

Verify that the **Server** and **User** fields match up with the required information.
1. For a client Workspace, if you previously used P4Win or reinstalled P4V, you can press the **Browse...** button to find a Workspace associated with your user.

	If no workspaces exist, press the **New** button to create a new workspace. In the dialog that opens, enter the name for the workspace to create using the following information as a guide:

	* If yu are a licensee: **Client Name**: **UE4_Licensee_[TEAMNAME]** (or otherwise ending with your UDN username or team name)
	* If you are a contractor: **Client Name**: **UE4_Contractor_[USERNAME]** (or otherwise ending with your UDN username or team name)

	![connect_workspace.jpg](connect_workspace.jpg)(w:219)

	Press the **Ok** button to create the new workspace.
1. The workspace is now shown in the **Open Connection** dialog.

	![connect_complete.jpg](connect_complete.jpg)(w:512)

	You can choose to open the window again when you start up P4V in the future.

	![connect_startup.jpg](connect_startup.jpg)(w:140)

Press the **Ok** button to open the connection and the P4V client.
1. You may be prompted about your ticket expiring. Simply choose to not see the message again in the future, and press the **Ok** button.

	If you are prompted to populate your recently-created workspace, decline the offer. This will avoid receiving several gigabytes of data that you will have to replace shortly.


Workspaces are created on a per-machine basis, because they keep track of the exact revision of each file that has been stored on that machine's hard drive in the selected directory. Thus, if you ever need to start syncing from a different PC, you will need to repeat this process to create a new workspace on that machine.

[REGION:note]
If you are an anonymous user, you will want to create a workspace that is named: UE4_Anonymous_#  where the # matches your Anonymous userid (e.g. UE4_Anonymous_8). Additionally, you will not want to put any url names in any of the fields. And you may not want to have a machine name that is recognizable. All of those fields can be seen by other users if they search the users or workspace listings.
[/REGION]

#### Troubleshooting

Selecting Depot View with a filter of Entire Depot tree should show all folders that you have access to. Alternatively, when creating/editing a workspace, you can use the **View** tab to visually map any files that you have access to.



## Builds and Syncing

The two main ways sets of file revisions are identified are through labels and changelists. On a high level, a label identifies all the changes that make up a specific build of the engine, e.g. a QA-approved build, while a changelist identifies a specific set of changes. The actual differences between these two concepts is explained in much more detail on the [Codelines and Branching](http://www.perforce.com/perforce/doc.current/manuals/p4guide/06_codemgmt.html) page of the Perforce website. For the purposes of syncing to Epic's Perforce depot, here is what you need to know:


* **Labels** - To update to a new QA-approved build, you will sync to a label.
* **Changelists** - To update to a specific set of changes made to a specific aspect of the engine, you will sync to a changelist.



### P4V and the Depot

The tree pane in P4V contains your Workspace and the Depot Tree. In the Depot Tree view, click the Depot node to expand and see the available directories.

![p4v_depot_tree.jpg](p4v_depot_tree.jpg)(w:374)


* **CodeDrop** - Contains various snapshots of games created by Epic that can be used as examples.
* **PhysX** - Contains the common files for the physics middleware; depending on your agreement, you may also see additional directories and files.
* **UnrealEngine3** - Contains everything to build and run UnrealEngine3. Also includes the ExampleGame and UDKGame examples.
* **UnrealMCP** - Contains the source for UnrealMCP, which is a SOA (service-oriented architecture) that focuses on providing highly scalable and available set of services to enhance the online experience of players.


For more information, see the [directory layout](Engine/Basics/DirectoryStructure) page.

In the UnrealEngine3 directory are several subdirectories: Binaries, Development, and Engine; and two game directories: ExampleGame and UDKGame.

![p4v_depot_tree_ue3.jpg](p4v_depot_tree_ue3.jpg)(w:374)

ExampleGame is the most minimal game implementation offered by Epic, and can be a good place for getting started in creating your own game project if your game is not very similar to Unreal Tournament.  

UDKGame is Epic's current Unreal Engine 4 usage demo based off of Unreal Tournament 3. This provides a complex example showing exactly how Epic intends to use the engine. We recommend using UDKGame as an example, rather than extending from UDKGame. You are welcome to use any C++ or UnrealScript code in UDKGame for your game project, but you cannot ship any of Epic's content (textures, meshes, levels, sounds, etc.) in your game.

For UnrealEngine3, most of Epic's content is located in the game-specific directories, so if all you want is the engine source, you can simply sync to the //depot/UnrealEngine3/Development directory. You can highlight specific directories as desired, for example, to grab the latest content for ExampleGame without updating UDKGame content.

![p4v_depot_tree_ue3_examplegame.jpg](p4v_depot_tree_ue3_examplegame.jpg)(w:374)

When getting a revision, lots of downloading will progress in the log window. "Sync completed with no warnings or errors" is what you are looking for when it is done.


### Syncing to a QA Build

To sync to a QA-approved build, follow the step below:

1. In the Depot Tree, **Right-click** on the UnrealEngine3 directory and then choose **Get Revision...** from the context menu. Alternatively, you can select the UnrealEngine3 directory and choose **Get Revision...** from the **Actions** menu.

	![p4v_depot_menu.jpg](p4v_depot_menu.jpg)(w:304)
1. The **Get Revision** window will open.

	![p4v_get_revision.jpg](p4v_get_revision.jpg)(w:634)

	Select the **Specify revision using** radio button to enable the combobox and text field.

	![p4v_specify_revision.jpg](p4v_specify_revision.jpg)(w:513)
1. Select **Label** from the dropdown box.

	![p4v_revision_label.jpg](p4v_revision_label.jpg)(w:100)

	Press the **Browse...** button to open the **Select Label** window.

	![p4v_select_label.jpg](p4v_select_label.jpg)(w:800)
1. Select the label you want to sync to. Usually this is the latest QA-approved build, designated by a label in the form of _QA_APPROVED_BUILD_[Month]_[Year]_. You may need to scroll down in the list a few times for all the labels to be loaded.

	![p4v_label_build.jpg](p4v_label_build.jpg)(w:800)

	Press the **Ok** button to select the label and close the window.
1. Press the **Get Revision** button to close the **Get Revision** window and begin the sync. The **Log** should show the progress of the sync.

	![p4v_sync_progress.jpg](p4v_sync_progress.jpg)(w:800)


## Working with Source Control

Almost any file can be integrated into source control.

The lifecycle of the files in your project can be managed via common commands:

* Check out
* Submit, or check in
* Revert, or roll back
* Revisions - history


In addition to working with source control directly in Perforce, you can also use the editor tools. See [SCC Integration](Engine/UI/SourceControl) for information on how to manage content packages from within the Editor itself.

 




