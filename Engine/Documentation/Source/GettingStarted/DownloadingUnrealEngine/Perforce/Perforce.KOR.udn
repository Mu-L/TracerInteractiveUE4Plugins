INTSourceChangelist:3108692
Availability: Licensee
Title:언리얼 엔진에 퍼포스 사용하기
Crumbs:%ROOT%, Engine, Programming, Programming/Basics
Description:언리얼 엔진에 퍼포스 소스 콘트롤 사용 방법 안내서입니다.
version: 4.9

[TOC(start:2)]

언리얼 엔진은 라이선시가 엔진을 내려받기 위해 연결하는 퍼포스를 통해 제공됩니다. 언리얼 엔진은 정기적으로 업데이트되기 때문에, 프로젝트 작업을 하는 라이선시의 경우 개발 동안 한 번 이상 새 엔진 버전으로 업데이트해야 할 수가 있습니다. 엔진 빌드를 가급적 쉽게 동기화나 통합시키기 위해서는 처음서부터 퍼포스를 제대로 셋업해 주는 것이 중요합니다.

에픽의 정기 점검 시간은 **매달 둘째 넷째 일요일 오후 10시(일광절약시간제 적용시 9시) 부터 4시간동안** 계획되어 있습니다. 이 기간 도중엔 지원 창구, 특히 네트워크/서버 리소스 일부 또는 전부가 영향을 받을 수 있다는 점 유념해 주시기 바랍니다.



## 에픽의 디포에 연결하기

에픽의 공개 퍼포스 디포에 연결하는 첫 단계는, 에픽 게임스로 가상 사설 네트워크(VPN) 연결을 구성하는 것입니다. 여기에는 Cisco 의 VPN 클라이언트를 (수동으로든 웹-기반 자동화 과정을 통해서든) 설치한 다음 자신의 VPN/퍼포스 계정으로 로그인하는 과정이 들어갑니다. VPN 연결 과정에 대한 개요는 다음과 같습니다:

**웹 기반 연결**


1. 웹 브라우저 (추천하기로는 안정성때문에 IE)로 **[https://vpn.epicgames.com](https://vpn.epicgames.com)** 을 방문합니다.
1. 기술팀이 전해준 VPN 정보를 사용하여 로그인합니다.
1. 화면상의 지시대로 따릅니다.
1. VPN 클라이언트가 설치되고 연결됩니다.


**수동 연결**


1. Cisco AnyConnect VPN 클라이언트를 내려받습니다: [AnyConnect VPN Client 내려받기](http://www.cisco.com/cisco/software/navigator.html?mdfid=281268793&i=rm)
1. 클라이언트를 설치하고 실행합니다.
1. 연결할 주소를 **vpn.epicgames.com** 으로 설정합니다.
1. 기술팀이 전해준 VPN 정보를 사용하여 로그인합니다.
1. 연결됩니다.


에픽 게임스 사설 네트워크로 VPN 구성하고 연결하는 자세한 절차에 대해서는 [VPN 연결 셋업](GettingStarted/DownloadingUnrealEngine/VPNSetup) 페이지를 참고하시기 바랍니다.

VPN 연결이 이루어지고 나면 퍼포스 클라이언트를 사용하여 현재 위치에서 안전히 디포에 접근할 수 있게 됩니다. 클라이언트 설치와 환경설정도 제대로 해 줘야 연결됩니다. P4V 클라이언트를 설치하고 연결하는 절차는 개략적으로 다음과 같습니다:


1. 퍼포스 윈도우 클라이언트를 내려받습니다: [Perforce Downloads: The Essentials](http://www.perforce.com/downloads/complete_list)
1. 클라이언트를 설치하고 실행합니다.
1. **Connection Dialog** 의 **Server**, **User**, **Workspace** 정보를 알맞게 채워넣고 **OK** 를 클릭합니다.
1. 클라이언트가 열리고 에픽의 공개 퍼포스 디포에 연결됩니다.


에픽의 퍼포스 디포 연결을 위한 퍼포스 클라이언트 구성 절차는 [퍼포스 셋업](GettingStarted/DownloadingUnrealEngine/Perforce/Setup) 페이지를 참고하시기 바랍니다.



## 빌드나 리비전 내려받기

파일 리비전(개정판) 세트를 식별하는 방법은 크게 두 가지, 라벨(label)과 체인지리스트(changelist)를 통해서 입니다. 하이 레벨에서 라벨은 QA-승인 빌드처럼 특정 엔진 빌드를 이루는 모든 변경사항을 나타내는 반면, 체인지리스트는 특정 변경내용 세트만을 나타냅니다. 이 두 개념 사이의 실제적인 차이점은 퍼포스 웹사이트의 [Codelines and Branching](http://www.perforce.com/perforce/doc.current/manuals/p4guide/06_codemgmt.html) 페이지에 자세히 설명되어 있습니다. 에픽의 퍼포스 디포에 동기화하기 위한 목적이라면, 이 정도만 알아두셔도 됩니다:


* **Labels** 라벨 - 새로운 QA-승인 빌드로 업데이트하려면, 라벨로 동기화합니다.
* **Changelists** 체인지리스트 - 엔진의 일정한 면에 대한 변경내용 세트를 업데이트하려면, 체인지리스트로 동기화합니다.


언리얼 엔진을 시작하려면 퍼포스 디포에 라벨로 지정된 최신 QA 빌드로 동기화시키는 것이 좋습니다. 이 작업은 시간이 조금 걸리며, 특히나 처음인 경우 전체 엔진을 이루는 파일을 모두 내려받아야 하니 더욱 그러합니다. 그 다음 동기화부터는 새로 추가되거나 변경된 파일만 내려받으니 훨씬 빨라질 터입니다.

에픽의 퍼포스 디포에서 언리얼 엔진빌드나 리비전을 내려받는 절차에 대해서는 [퍼포스로 빌드 동기화하기](GettingStarted/DownloadingUnrealEngine/Perforce/Syncing) 페이지를 참고하시기 바랍니다.

다음 부분에서는 퍼포스 디포를 셋업하고 로컬에 빌드를 유지시켜 새로운 빌드로의 업데이트를 손쉽게 유지하는 방법에 대해 알아보겠습니다.



## 로컬 디포 유지하기

"자동-생성"된 것으로 간주되는 (.exe 나 .u 등의) 파일을 새로 추가할 때는, "마스크로 걸러낸 파일세트"(masked out fileset)에 이미 포함되지 않은 경우 클라이언트 스펙(client spec)을 업데이트하여 그 파일을 마스크로 걸러내라고 모든 프로그래머들에게 알립니다.

기본적으로 프로그래머는 만들려는 자동-생성 파일 처리를 위해 복잡한 클라리언트 스펙을 사용합니다. 콘텐츠 팀은 전문화된 매핑을 둘 필요 없습니다.

예: 새 패키지가 추가되었습니다. 그러면 Script 와 ScriptFinalRelease 둘 다에 .u 파일이 새로 생성됩니다. 클라이언트 스펙에는:


    
     -//depot/UnrealEngine3.../...Game/Script%%1/....u //localdepot/UnrealEngine3.../...Game/Script%%1/....u
    



이렇게 하면 스크립트 패키지를 새로 추가할 때마다 매번 클라이언트 스펙을 업데이트하지 않아도 됩니다. 게다가 다른 브랜치에서 작업할 때도 클라이언트 스펙 업데이트 걱정을 하지 않아도 됩니다.

위의 클라이언트 스펙 매핑과 비슷한 작업을 브랜치 스펙에도 해줄 수 있습니다. 이런 식으로 통합(integrate)할 때마다 알고 있는 자동-생성 파일은 통합시키지 않습니다. 새로이 추가된 것이 있을 때, 통합 시간에 거기에 무슨 작업을 할 지 결정할 수 있습니다.

비슷하게 콘텐츠 제작자는 빌드나 링크 작업에 필요한 소스, 툴, 외부 라이브러리 등이 필요치 않기에,  Development 디렉토리의 콘텐츠를 마스크로 걸러낼 수 있습니다.



## 통합, 병합, 브랜칭

게임 제작 도중 팀은 주기적으로 신기능과 버그 픽스가 포함된 새로운 빌드로 업데이트하기로 결정을 내릴 수 있습니다. 이 과정은 퍼포스 디포에서 빌드를 구하는 데 있어서는 초기 동기화 과정과 동일합니다. 그러나 엔진을 로컬에 유지시키고, 로컬에서 코드에 가한 추가나 변경사항에 손대지 않고 코드베이스로 새 빌드를 인테그레이트/머지(merge, 병합)하는 데 있어 어떤 영향을 끼치게 할 것인지에 대해서는 고려할 것이 많이 있습니다.

디포에 브랜치를 사용하면 통합과 병합 과정을 쉽게 만들어주며, 다음과 같습니다:


* **//depot/Epic** - 각 QA Build 버전, 불변
* **//depot/MergeTest** - 병합/테스트 영역
* **//depot/Devel** - 개발 트리


![Perforce_33.jpg](Perforce_33.jpg)(w:640 h:443)

엔진 버전을 새 QA 빌드로 업그레이드하는 과정은 개략적으로:


1. 에픽에서 QA-Approved Build 를 받습니다. 새 QA 빌드를 받기 좋은 방법은:
    * Epic 브랜치의 모든 것을 지웁니다.
    * 그 자리에 새 QA 빌드를 복사합니다.
    * P4V 의 "Reconcile Offline Work" (오프라인 작업 조정)을 사용, 에픽이 가한 변경사항을 나타내는 CL 을 만듭니다. 그것을 체크인 시킵니다. 이제 에픽 브랜치에 QA 빌드 사본은 있으되, 현재 통합 히스토리를 잃지는 않은 상태입니다. 이로써 병합 툴로 무엇이 바뀌었는지에 대한 정보를 훨씬 더 자세히 얻을 수 있으니, 충돌 횟수가 줄어들 것입니다.
1. MergeTest 브랜치를 테스트 영역으로 사용하여 그 에픽 브랜치를 주 개발 브랜치로 통합시킵니다.


그 작업방식에 대한 예제는 다음과 같습니다:

![Perforce_34.jpg](Perforce_34.jpg)(w:665 h:443)

업데이트를 자주 할 수록, 병합할 때 심각한 충돌 문제에 맞닥뜨릴 확률도 줄어듭니다. Araxis 같은 병합 프로그램을 사용하면 충돌 문제를 아주 쉽게 해결할 수 있습니다.

새 QA 빌드를 병합 준비하는 데 대한 팁입니다:


* "병합 기록"을 유지하세요. 저는 매일 병합 도중에 발생하는 쟁점 선택 사항이라든가 중요 결정 사항을 강조하여 시간선과 함께 기록합니다. 그러면 나중에 그 부분을 실행시킬 때 발생하는 문제 대처가 편리해 집니다.
* QA 에 철저한 테스팅 플랜을 세우고 해당 부서의 지원을 통해 일정기간 브랜치(가지)는 물론 트렁크(줄기)도 병합 테스트할 수 있는 시간을 확보합니다.
* 엔진과 함께 업그레이드해 줘야 하는 미들웨어도 기록합니다. 모든 미들웨어 버전이 제대로 됐는지 확인합니다.
* 가능하면 메인 트렁크 플랫폼 SDK 버전을 새로운 머지 브랜치 버전에 맞게 업그레이드해 줘야 편해지고 (콘솔), 펌웨어를 업데이트하세요.
* IT 팀에 퍼포스 공간을 훨씬 많이 사용해도 괜찮은지 확인합니다.
* 모든 타겟 플랫폼에 현재와 타겟 QA 빌드용 UDK 를 사용해서 퍼포먼스와 메모리 사용량이 괜찮은지 더 나은지를 확인합니다. 퍼포먼스가 더 안좋아 졌다면 왜 그런지 알아야 할 것입니다. 가끔 에픽은 한 플랫폼에서의 질적인 이점을 얻기 위해 다른 플랫폼의 퍼포먼스를 희생시키기도 합니다.
* 프로젝트에 어떠한 이점이 있을 것인지, '업그레이드를 하면 좋을 100 가지 이유' 쯤은 만들어 둬야 다른 부서를 이해시키고 지원과 원조를 받을 수 있을 것입니다.


통합, 병합, 브랜칭 관련 용어와 실전 사례에 대해서는 [퍼포스 통합](GettingStarted/DownloadingUnrealEngine/Perforce/Integration) 페이지를 참고하시기 바랍니다.

자동 병합 툴 스크립트는 [퍼포스 AutoMerge](GettingStarted/DownloadingUnrealEngine/Perforce/AutoMerge) 페이지를 참고하시기 바랍니다.

언리얼 엔진 빌드 병합관련 팁은 [흔한 병합 문제](GettingStarted/DownloadingUnrealEngine/Perforce/CommonMergeProblems) 페이지를 참고하시기 바랍니다.

 




