INTSourceChangelist:6038552
Availability: Public
Title: 更新到Epic的最新更改
Description: 介绍如何更新虚幻引擎源代码的分叉以获得最新修复程序和新功能。
Type: overview
Parent: GettingStarted/DownloadingUnrealEngine
Tags: GitHub
Order: 0
Related: GettingStarted/DownloadingUnrealEngine/ContributingToUnreal


[TOC (start:2 end:3)]

从源代码工作的最大好处之一是，您总是可以访问我们团队向虚幻引擎添加的最新改进和新功能。当我们修改源代码并发布新的官方版本时，我们会不断地更新[虚幻引擎GitHub元库](https://github.com/EpicGames)的各个分支。您可能想要定期获得这些更改：也许是每当我们发布一个新的官方版本时，也许是每个月甚至于每天。

本页面介绍两种不同的方法，您可以使用它们来更新您的分叉的一个分支，使其与虚幻引擎的主元库中的最新更改保持一致。  

## 选项 1：使用上游远程

在这种方法中，您将Epic Games虚幻引擎的原始元库作为新的远程元库添加到您的分叉的本地副本中。它通常被称为 *上游* 远程。您将更改从上游远程拉取出并放入您的本地分支。然后，您可以将这些更改推回到GitHub上您自己的分叉（通常称为 *原始* 远程）。

尽管这种方法起先可能看似比使用下文选项2中介绍的GitHub拉取请求更为棘手，但是我们推荐使用这种方法。它有以下几个优点：

*   一旦设置了上游远程，只要继续使用您的分叉的同一本地克隆，就永远不需要重新设置它。这使得您可以快速、轻松地根据您的项目需要频繁地获取新的更改。

*   每次使用GitHub拉取请求更新您的分叉时，都会在您的分支中创建一个新的提交，并在您的项目的历史记录中创建一个新的拉取请求。这通常是无害的，但最好避免这些不必要的条目。

下面的说明介绍了如何使用Git命令行工具添加新的远程并获取更改。如果使用可视化Git客户端，操作步骤应该大致相同。详情请参阅您的工具的文档。

[REGION:note]
如果使用[GitHub Desktop](https://desktop.github.com/)，当您复制您的分叉时，将自动为您创建上游远程。您只需要将来自上游分支的更改合并到您的本地分支中，然后将这些更改推送到原始元库。
[/REGION]

要设置上游远程，请执行以下操作：

1.  如果您还没有这样做，将您的分叉复制到计算机上。

1.  打开命令提示符，导航到包含您的元库的文件夹。

1.  将Epic Game的基础元库添加为一个新远程，名为“upstream”。
    
        > git remote add upstream https://github.com/EpicGames/UnrealEngine
    

要将来自上游远程的更改带到您的分叉中，请执行以下操作：

1.  签出要更新的分支。例如：
    
        > git checkout master
    

1.  将更改从上游远程拉取出并放入您的本地分支。
    
        > git fetch upstream
        > git merge upstream/master
    

1.  将更改推到您的原始远程。
    
        > git push origin master
    

## 选项 2：使用GitHub拉取请求

1.  在Web浏览器中，前往[github.com](http://www.github.com)上您的元库的主页。  
    这通常遵循“https://github.com/<username>/UnrealEngine”格式，其中 `<username>` 为您的GitHub用户名。

1.  从 **分支（Branch）** 控件中选择要更新的分支。  
    ![Selecting the master branch](updating-github-1-branches.png "Selecting the master branch")

1.  单击 **比较（Compare）** 链接。  
    ![Compare](updating-github-2-compare.png "Compare")

1.  通常，只要您还没有在您的分叉中对该分支进行更改，GitHub就会告诉您Epic Games元库已经拥有来自您的元库的所有提交。  
    单击用于 **切换基础** 的链接，该链接将反转比较，并显示在引擎元库中而不是在您的分叉中进行的提交。  
    ![Switching the base](updating-github-3-switching.png "Switching the base")

1.  快速查看一下更改列表。如果显示的日期与您期望的匹配，请单击 **创建拉取请求（Create Pull Request）**。  
    ![Comparing changes between branches](updating-github-4-create.png "Comparing changes between branches")

1.  输入一个简短的描述，说明您的拉取请求正在更新的分支。完成后，单击 **创建拉取请求（Create Pull Request）**。  
    ![Open a new pull request](updating-github-5-open.png "Open a new pull request")

1.  GitHub显示新的拉取请求的对话（Conversation）选项卡。在更改列表的底部，单击 **合并拉取请求（Merge Pull Request）**。  
    ![Merge pull request](updating-github-6-merge.png "Merge pull request")

1.  单击 **确认合并（Confirm Merge）**。  
    ![Confirm merge](updating-github-7-confirm.png "Confirm merge")

当合并完成时，您的分叉的分支在GitHub上将是最新的。现在，您可以使用Git命令行或您选择的可视化工具来迁出分支并将最新更改拉取到本地计算机。
