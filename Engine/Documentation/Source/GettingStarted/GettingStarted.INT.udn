Availability:Public
Title: Get Started with UE4
Description:Introductory information for developers starting out creating games with Unreal Engine.
Navigation:start
version: 4.9
parent:%ROOT%
order:1
tags:Getting Started
type:landing
topic-image:gettingstarted_topic.png
topic-icon:start_icon.png


## Starting Out

%Engine/QuickStart:topic%
%Engine/Content/QuickStart:topic%
%Programming/QuickStart:topic%
%GettingStarted/Terminology:topic%
[OBJECT:Topic]
	[PARAM:image]
		![](GettingStarted/FromUnity/image_0.png)
	[/PARAM]
	[PARAM:icon]
		![](start_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%GettingStarted/FromUnity:title%
	[/PARAM]
	[PARAM:description]
		%GettingStarted/FromUnity:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:GettingStarted/FromUnity]
	[/PARAM]
[/OBJECT]
%GettingStarted/SubEditors:topic%

[REGION:section]
	[REGION:normaltitle]
	Additional Information
	[/REGION]
	* [Required Hardware and Software](GettingStarted/RecommendedSpecifications "%GettingStarted/RecommendedSpecifications:description%")	
	* [Install the Engine](GettingStarted/Installation "%GettingStarted/Installation:description%")	
	* [](GettingStarted/DownloadingUnrealEngine "%GettingStarted/DownloadingUnrealEngine:description%")
	* [Release Notes](Support/Builds "%Support/Builds:description%")
[/REGION]

## Editor Basics

[INCLUDE:Shared/Glossary/P/#Glossary_project]

[INCLUDE:Engine/UI/LevelEditor#levels]

%Engine/QuickStart:topic%
%Engine/UI/LevelEditor:topic%
%Engine/UI/LevelEditor/Toolbar:topic%

[REGION:section]
[REGION:normaltitle]
Related Courses
[/REGION]
[OBJECT:CourseLink]
	[PARAMLITERAL:title]
	UE4 Editor Basics
	[/PARAMLITERAL]
	[PARAMLITERAL:courseid]
	editor_basics
	[/PARAMLITERAL]
	[PARAMLITERAL:imageid]
	3095
	[/PARAMLITERAL]
	[PARAMLITERAL:description]
	Walk you through the fundamentals of the Unreal Editor and its components.
	[/PARAMLITERAL]
	[PARAMLITERAL:video_count]
	14
	[/PARAMLITERAL]
	[PARAMLITERAL:skill_level]
	Getting Started
	[/PARAMLITERAL]
[/OBJECT]
[/REGION]

## Editor Viewports
	
[INCLUDE:Engine/UI/LevelEditor/Viewports#intro]

%Engine/UI/LevelEditor/Viewports/Basics:topic%
%Engine/UI/LevelEditor/Viewports/ViewportControls:topic%

## Editor Modes
	
[INCLUDE:Shared/Glossary/M#glossary_modes_panel]

%Engine/UI/LevelEditor/Modes:topic%

## Actors & Geometry
	
[INCLUDE:Engine/UI/LevelEditor#actors]

%Engine/Actors/Placement:topic%
%Engine/Actors/Brushes:topic%
%Engine/Actors/Transform:topic%


## Content Browser
	
[INCLUDE:Shared/Glossary/C/#Glossary_Content_Browser]

%Engine/Content/QuickStart:topic%
%Engine/Basics/AssetsAndPackages:topic%
%Engine/Content/Browser:topic%

## Lighting

Lighting your scenes is accomplished using Light Actors that act as light sources and contain properties to determine the characteristics of the light, such as:
		
* How bright the light is
* What color the light is
		
There are also different kinds of lights that emit light in different ways. For example, a standard light bulb emits light in all directions. In Unreal Engine, 
this is called a _point light_. In other circumstances, the light emitted is physically limited by making the back of the bulb opaque, such as with a flood light. 
This would be a _spot light_. Outdoor lighting from the sun - because it is located so far away - appears to come more from a direction instead of from a single 
location. To simulate this type of lighting, a _directional light_ is available. 

%Engine/Rendering/LightingAndShadows/QuickStart:topic%
%Engine/Rendering/LightingAndShadows/Basics:topic%

[REGION:section]
[REGION:normaltitle]
Related Courses
[/REGION]
[OBJECT:CourseLink]
	[PARAMLITERAL:courseid]
	Lighting_EssentialConcepts
	[/PARAMLITERAL]
	[PARAMLITERAL:imageid]
	3099
	[/PARAMLITERAL]
	[PARAMLITERAL:title]
	Lighting Essential Concepts
	[/PARAMLITERAL]
	[PARAMLITERAL:description]
	Learn about the different types of lights, their most important properties, and how to use them.
	[/PARAMLITERAL]
	[PARAMLITERAL:video_count]
	13
	[/PARAMLITERAL]
	[PARAMLITERAL:skill_level]
	Getting Started
	[/PARAMLITERAL]
	[PARAMLITERAL:engine_version]
	4.18
	[/PARAMLITERAL]
[/OBJECT]
[/REGION]

## Materials & Shading

[INCLUDE:Shared/Glossary/M/#Glossary_Material]

%Engine/Rendering/Materials/IntroductionToMaterials:topic%

[REGION:section]
[REGION:normaltitle]
Related Courses
[/REGION]
[OBJECT:CourseLink]
	[PARAMLITERAL:courseid]
	materials-essentials
	[/PARAMLITERAL]
	[PARAMLITERAL:imageid]
	3098
	[/PARAMLITERAL]
	[PARAMLITERAL:title]
	Materials Essential Concepts
	[/PARAMLITERAL]
	[PARAMLITERAL:description]
	Take a comprehensive look at creating and using materials in a production environment.
	[/PARAMLITERAL]
	[PARAMLITERAL:video_count]
	17
	[/PARAMLITERAL]
	[PARAMLITERAL:skill_level]
	Getting Started
	[/PARAMLITERAL]
[/OBJECT]
[/REGION]

## Blueprints Visual Scripting

[INCLUDE:Engine/Blueprints#intro]	

%Engine/Blueprints/GettingStarted:topic%

<!-- removing for now.
[REGION:section]
[REGION:normaltitle]
Related Courses
[/REGION]
[OBJECT:CourseLink]
	[PARAMLITERAL:courseid]
	blueprint-essential-concepts
	[/PARAMLITERAL]
	[PARAMLITERAL:imageid]
	7144
	[/PARAMLITERAL]
	[PARAMLITERAL:title]
	Blueprints Essential Concepts
	[/PARAMLITERAL]
	[PARAMLITERAL:description]
	Dive into what Blueprints are and what you can expect when working with them.
	[/PARAMLITERAL]
	[PARAMLITERAL:video_count]
	8
	[/PARAMLITERAL]
	[PARAMLITERAL:skill_level]
	Getting Started
	[/PARAMLITERAL]
[/OBJECT]
[/REGION]
-->

## Programming

Implementing gameplay and modifying the engine are essential aspects of any game project. Unreal Engine 
gives you the ability to implement gameplay through code or visually using Blueprints or even create a 
plugin that modifies or extends the engine and editor to add completely custom functionality for designers 
or artists to use.

%Programming:topic%
%Programming/Development/VisualStudioSetup:topic%
%Programming/QuickStart:topic%
%Programming/Basics:topic%
%Gameplay/Framework/QuickReference:topic%
	


## Playtest Your Game

Test and debug your levels and gameplay using Unreal Engine's built-in features. Get real-time feedback 
directly in the editor using Play In Editor mode, and even inspect and manipulate the objects in the 
game while it is running using Simulate In Editor mode. Make changes to gameplay code, recompile, and 
update the game during play using Hot Reload.

%Engine/UI/LevelEditor/InEditorTesting:topic%
