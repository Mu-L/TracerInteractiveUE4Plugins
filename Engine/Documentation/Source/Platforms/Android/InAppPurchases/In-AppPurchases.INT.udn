Title: Using In-App Purchases on Android
Description: Using in-app purchases to offer additional paid content for your Android game.
Crumbs:
Availability:Public
version:4.10
Parent:Platforms/Android
tags:Mobile
tags:Android
type:how-to
Related:Platforms/Mobile/InAppPurchases/

## Configuration

1. Set up your in-app purchase in Google Play:

    [REGION:note]
	Google Play requires the id to be all lowercase, and it's best to have the ID for iOS and Android match for ease of Blueprint setup.
	[/REGION]
	
	![image alt text](image_0.png)

1. Make a note of the ID you use, as well as if the item is consumable or non-consumable.

1. If you have a Blueprint project, you're set to go. If you have a code project and have not already set up your project to use online subsystems, add the following block to your project's Build.cs file: 

		if (Target.Platform == UnrealTargetPlatform.Android)
		{
			PrivateDependencyModuleNames.AddRange(new string[] { "Core", "CoreUObject", "Engine", "OnlineSubsystem" });
			DynamicallyLoadedModuleNames.Add("OnlineSubsystemGooglePlay");
		}

1. In **Project Settings > Platforms > Android**, find the Advanced APKPackaging section.

1. Add an element to ExtraPermissions called "com.android.vending.BILLING".
	
	![image alt text](image_2.png)

1. Edit [ProjectName]/Config/Android/AndroidEngine.ini:

		[OnlineSubsystem]
		DefaultPlatformService=GooglePlay

		[OnlineSubsystemGooglePlay.Store]
		bSupportsInAppPurchasing=True

[INCLUDE:Platforms/Mobile/InAppPurchases#usage_android]

## Testing

To test on Android, you need to upload the packaged APK to Google Play, as well as set up the correct testing profiles. You'll also need your custom key store. 

## Helpful Links

* [Administering In-app Billing (Creating products)](http://developer.android.com/google/play/billing/billing_admin.html)
* [Testing Android](http://developer.android.com/google/play/billing/billing_testing.html)
