INTSourceChangelist:3722186
Availability:Public
Crumbs: %ROOT%
Title:GoogleVR 最佳方法
Description:如何玩转 GoogleVR UE4 项目。
Type:Reference
Version:4.17
parent:Platforms/GoogleVR
Order:2
tags:VR
tags:Google VR
Related:Platforms/Mobile/Performance
Related:Engine/Performance
Related:Engine/Performance/StatCommands
Related:Platforms/Mobile/Textures
Related:Platforms/Mobile/Materials
Related:Engine/Rendering/Materials/MaterialProperties/BlendModes
Related:Engine/Rendering/Materials/CustomizedUVs

[TOC(start:2 end:3)]

开发虚拟现实（VR）项目时，必须执行特定操作，以确保用户获得上佳的 VR 体验。以下最佳方法指南包含所有内容，助您在 GoogleVR 上为用户呈现最佳的项目体验。


## GoogleVR 渲染选项
虚幻引擎结合 GoogleVR 能打造出引人入胜的 VR 体验。然而由于硬件限制，使用 GoogleVR 时虚幻引擎无法执行部分渲染功能。所受限制大多与 [移动设备](Platforms/Mobile/Performance) 的限制相似。
由于 GoogleVR 有特殊的渲染要求，必须额外考虑几点。以下部分将讲述这些要求，以及它们对 GoogleVR 项目产生的影响。

### 移动 HDR
GoogleVR 不支持移动 HDR，应将其关闭。 

### 后期处理
由于 GoogleVR 渲染要求较为苛刻，因此许多后期处理功能都无法使用。以下是 GoogelVR 支持的后期处理功能。

|后期处理 | 功能名称 | 描述 |
| -------- | ---------- |------|
| 自动曝光（Auto Exposure） | 曝光偏差（Exposure Bias） | 用于增强或减弱场景的明亮度。|

### 材质
GoogleVR 项目材质的创建和交互方式与其他项目十分相似。同样使用材质编辑器创建材质，也同样使用材质编辑器中的诸多材质节点。制作 GoogleVR 材质时须遵守一些注意事项/限制，以确保制作的材质与硬件兼容。

| 材质输入名称 | 描述 |
| -------- | ---------- |
| **Base Color** | 定义材质整体颜色的基础色彩。|
| **Roughness** | 定义材质整体的粗糙度/平滑度。|
| **Metallic** | 定义材质的金属感。|
| **Specular** | 定义反射的强度，或材质的光泽度。|
| **Normal** | 无需进行复杂建模即可形成表面细节。带法线贴图的表面凹凸不平，并非是纯平。|
| **Emissive** | 使材质部分发出辉光，形成光线发射的效果。|
| **Opacity** | 定义给定像素的半透明度，大小从 0.0 到 1.0。|
| **Opacity Mask** | 使单个像素变为完全不透明，或完全不可见。|

[REGION:note]
请注意，半透明和被遮罩的材质渲染开销较高，在智能手机之类的硬件上尤其如此。应尽量使用 [不透明材质](Engine/Rendering/Materials/MaterialProperties/BlendModes)，降低渲染开销。
[/region]

### 材质光照模型
由于硬件受限，GoogleVR 项目中仅可使用以下 **材质光照模型**。
| 光照模型名称 | 描述 |
| -------- | ---------- |
| **Default Lit** | 默认光照模型，最为常用。此光照模型利用直接和间接光照，以及镜面反射。|
| **Unlit** | 不照亮光照模型只输出自发光的颜色，适用于如火焰或发光物体等特效。|

[region:note]
不照亮光照模型的开销较低，应在 GoogleVR 项目中尽量多使用。
[/region]

### 材质混合模式

材质混合模式定义当前材质输出与背景上已绘制内容的混合方式。创建 GoogleVR 的内容时可使用以下材质混合模式。

| 混合模式 | 描述 |
| ---- | ----- |
| **Opaque** | 对实心物体而言，不透明材质的开销最低。但其不具有半透明度。意味着将不会出现过度绘制，每个材质像素的渲染时间均相同，具体取决于 **节点图表** 的复杂度。|
| **Masked** | 无需在材质的部分上绘制像素时可使用此模式。材质只在被遮罩的区域创建过度绘制。但材质绘制的每个像素只能是 100% 不透明，或 100% 透明。被遮罩的区域越大，出现的过度绘制越多。|
| **Translucent** | 这是开销最高的 **混合模式**。它与 Masked 和 Opaque 相似，但会无视实际是否透明，对性能产生额外影响。|
| **Additive** | Translucent 的替代品，开销更低。无需对像素进行分类即可直接添加到场景中。因此，Additive 材质只能使其覆盖的像素变亮。材质上的黑色像素对场景没有影响。||
| **Modulated** | Translucent 的替代品，开销比 Additive 更低，但它会将其颜色强度添加到场景中已有的颜色中。其颜色将被映射到 0.0 到 1.0 的范围中，Modulated 只能使场景变暗。这些材质上的白色像素对场景没有影响。|
[region:note]
使用 Modulate 混合模式时须禁用 **Separate Translucency**，否则材质无法正确编译。
  ![](T_Separate_Trans.png)
[/region]

### 移动设备专用材质设置
在 **Details 面板** 下的 **Main Material 节点** 上可找到一个名为 **Mobile** 的部分。此处的设置有助于减少移动设备上的材质渲染开销。
| 属性 | 描述 |
| -------- | ---------- |
| **Fully Rough** | 启用后将保存一些着色器 ALU 指令和一个采样器。它可在禁用反射的同时有效保持整体反射能量。|
| **Use Lightmap Directionality** | 禁用此属性后，来自灯光图的灯光将变为平面，但开销更低。|

### 自定义 UV
使用 [自定义 UV](Engine/Rendering/Materials/CustomizedUVs) 可在顶点着色器（而不是像素着色器）中执行特定的操作，避免出现附属纹理获取。执行简单操作时（如进行 UV 修改略微提升纹理效果），利用它可对至关重要的性能进行有效弥补。请尽量使用自定义 UV 进行 UV 修改，开发 GoogleVR 内容时尤其如此。

[region:note]
自定义 UV 当前只应用于部分组件类型，如静态网格体、骨架网格体、BSP、地形和网格体粒子。
[/region]

### 反射
GoogleVR 不支持屏幕空间反射（SSR），意味着只能生成来自关卡中 [反射获取 Actors](Resources/ContentExamples/Reflections/1_4/) 的反射。 
请注意，由于硬件受限，反射 Actors 生成的反射保真度不高。 

## GoogleVR 与内容设置
创建 GoogleVR 项目的美术资源时需要注意几点，以确保项目运行流畅。以下部分将讲述制作 GoogleVR 美术资源时需注意的要点：

### 资源硬性限制
由于移动设备存在特定的硬件限制，创建资源时必须遵守以下要求。如未严格遵守，可能导致项目无法正常使用。

* 由于移动硬件缺少 32 位索引支持，所有网格体类型可拥有最多 65,000 个顶点，不能超过此数字。
* 骨架网格体可最多拥有 75 块骨骼，不能超过此数字。

网格体注意事项
为 GoogleVR 项目创建网格体时须牢记下列信息，以确保创建的内容与 GoogleVR 兼容。 

* 在 3D 网格体上尽量使用 [材质 ID](Engine/Content/FBX/Materials)，节约绘制调用的次数。
* 尽量使用 [静态网格体 LODs](Engine/Content/FBX/StaticMeshes)。
* 注意 3D 网格体多边形数量，尽量将其保持为 [低多边形](https://en.wikipedia.org/wiki/Low_poly)。
* 为所有静态模型设置另一个 UV 集，使其使用 [灯光贴图](Engine/Content/Types/StaticMeshes/LightmapUnwrapping)。
* 尽量尝试使用 [替代 Sprites](Engine/Content/Tools/RenderToTextureTools/3) 替换远景的静态网格体，降低渲染开销。

纹理注意事项
为 GoogleVR 项目创建纹理时须牢记下列信息，确保创建的内容不会对项目整理性能产生不良影响。 

* X 轴或 Y 轴上的纹理尺寸均不可大于 2048 像素。
* 每根轴上的纹理大小必须为二的幂次方。举例而言，图像宽度可以为 128 或 256 像素，但不能为 129 像素。
* 虽然 GoogleVR 能够将最大 512 MB 的纹理加载到内存中，但不推荐单次加载超过 128 MB 的纹理。
* 尽量多使用正方形纹理（等宽高，如 1024x1024 像素），因其内存使用效率更高。
* 尽量尝试使用 [纹理图集](http://en.wikipedia.org/wiki/Texture_atlas)，减少内存中所需的纹理数量。
* [RGB 纹理遮罩/打包](Engine/Rendering/Materials/HowTo/Masking) 可有效减少内存中的单一纹理。
* 只能使用 **TC_Default** 和 **TC_NormalMap** 压缩设置。这是移动平台上唯一能使用的两个设置。

### 关卡注意事项
在 GoogleVR 项目中，从关卡榨取最大性能是注重平衡的一个操作，需要长时间调整方能达到最佳状态。以下建议能够助您快速找到可能导致性能问题的关卡区域：

* 必须确认关卡灯光已 [构建](Engine/Rendering/LightingAndShadows/Lightmass)，以便获得最佳性能。需要执行此操作时，编辑器将弹出“Lighting needs to be rebuilt”错误消息。
* 将关卡中所有灯光设为 [静态](Engine/Rendering/LightingAndShadows/LightMobility/StaticLights)，因为其他灯光选项的渲染开销较高。
* 检查关卡是否使用 [预计算可见性](Engine/Actors/Volumes)。如未使用，须将其添加至关卡，然后重新构建灯光，使其在关卡的 World Settings 中启用。 
* 整个场景的绘制调用数不可大于 100。在设备上可通过 [stat openglrhi](Engine/Performance/StatCommands) 命令查看，在电脑上可通过 ES2 预览器的 [stat d3d11rhi](Engine/Performance/StatCommands) 命令查看。
* 任意视角中关卡的总三角形数量不可大于 100,000。在设备上可通过 [stat openglrhi](Engine/Performance/StatCommands) 命令查看，在电脑上可通过 ES2 预览器的 [stat d3d11rhi](Engine/Performance/StatCommands) 命令查看。
* 在关卡中须谨慎使用渲染开销极高的半透明和透明遮罩材质。
* 经常对关卡执行 [性能分析](Engine/Performance)，以便及时发现性能问题。
