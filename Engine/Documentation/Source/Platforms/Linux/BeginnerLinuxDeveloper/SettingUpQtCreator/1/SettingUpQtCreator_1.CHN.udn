INTSourceChangelist:6093761
Availability: Docs
Title: 1 - 配置Qt Creator以构建UE4
Crumbs:%ROOT%
Description:学习如何配置您的集成开发环境（IDE），在调试和发布模式中构建虚幻引擎4（UE4）。
Version: 4.14
type:how to
parent:Platforms/Linux/BeginnerLinuxDeveloper/SettingUpQtCreator
order: 1
tags:Linux
SkillLevel:Beginner

[NAV]

尽管一部分开发者喜欢使用文本编辑器和命令行调试器来修改游戏源代码，但绝大多数开发者倾向于使用集成开发环境（IDE）来编辑、调试和编译代码。如果您从事游戏开发并希望设置IDE以在Linux环境中与虚幻引擎4（UE4）一起工作，本指南非常适合您。

尽管我们承认选择使用哪个IDE完全取决于个人偏好，但是我们还是对UE4进行了配置，使其可在Linux中与三款IDE交互，具体来说，即Qt Creator、KDevelop和Codelite。我们并不优先支持其中的任何一款，仅出于示例及便于学习的目的选择介绍如何配置Qt Creator以构建和运行UE4。学习完本指南之后，您将掌握如何配置IDE以构建和运行UE4。最后，您也将掌握如何设置IDE以构建和运行在虚幻编辑器中创建的新C++（CPP）项目。

[REGION:note]
开始之前，请确保您已按照[](Platforms/Linux/BeginnerLinuxDeveloper/SettingUpAnUnrealWorkflow)中的说明设置了工作流。另外，请确保已在计算机上安装了[Qt Creator](https://wiki.qt.io/Install_Qt_5_on_Ubuntu)。

[/REGION]

1. 	启动Qt Creator，打开 **Qt欢迎（Welcome）** 菜单。  

	[REGION:lightbox]
		[![](SetupIDE_Step1.png)(w:720)](SetupIDE_Step1.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

1. 	单击 **打开项目（Open Project）** 按钮以打开Qt项目文件浏览器。  

	[REGION:lightbox]
		[![](SetupIDE_Step2.png)(w:720)](SetupIDE_Step2.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

1. 	导航至您构建UE4的目录，选择UE4 Qt项目（**UE4.pro**）文件，然后单击 **打开（Open）** 按钮。

	[REGION:lightbox]
		[![](SetupIDE_Step3.png)(w:720)](SetupIDE_Step3.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

1. 	到目前为止，还未将Qt Creator配置为在调试和发布模式下构建UE4。在 **配置项目（Configure Project）** 菜单中单击 **配置项目（Configure Project）** 按钮。

	[REGION:lightbox]
		[![](SetupIDE_Step4.png)(w:720)](SetupIDE_Step4.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

1. 	现在，单击 **项目（Projects）** 按钮来进入项目模式，打开 **构建设置（Build Settings）** 菜单。

	[REGION:lightbox]
		[![](SetupIDE_Step5.png)(w:720)](SetupIDE_Step5.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

	[REGION:note]
	打开 **构建设置（Build Settings）** 菜单时，您会发现Qt Creator将 **编辑构建配置：（Edit build configuration:）** 预置为 **调试（Debug）** 模式。
	[region: lightbox]
	[![](SetupIDE_Step5_Note.png)(w:347)](SetupIDE_Step5_Note.png)
	[/region]
	[REGION:caption]
	单击查看大图。
	[/REGION]
	[/REGION]

1. 	在 **构建步骤（Build Steps）** 部分下面，单击位于 **详细信息（Details）** 下拉菜单旁边的 **X** 按钮，清除 **qmake** 构建步骤。

	[REGION:lightbox]
		[![](SetupIDE_Step6Alt.png)(w:720)](SetupIDE_Step6Alt.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

1. 	现在，取消选中 **Shadow build** 复选框。 

	[REGION:lightbox]
		[![](SetupIDE_Step7.png)(w:720)](SetupIDE_Step7.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

	[REGION:note]
	Shadow building使您能够在不同于Qt Creator的qmake实用程序的构建目录中构建项目。因为分发UE4时随附了自定义的Make文件，它使用 
	[](Programming/UnrealBuildSystem)，因此无需使用Qt Creator的qmake实用程序。
	[/REGION]

1. 	现在，单击 **详细信息（Details）** 下拉菜单来打开 **Make** 构建步骤的输入表单。

	![](SetupIDE_Step8.png)

1. 	在 **Make参数：（Make arguments:）** 文本字段中，输入`UE4Editor-Linux-Debug`。

	![](SetupIDE_Step9.png)

1. 	在 **清除步骤（Clean Steps）** 部分下面，单击 **详细信息（Details）** 下拉菜单来打开 **Make** 清除步骤的输入表单。

	![](SetupIDE_Step10.png)

1. 	在 **Make参数：（Make arguments:）** 文本字段中输入`UE4Editor-Linux-Debug ARGS="-clean"`，以替换`clean`。

	![](SetupIDE_Step11.png)

1. 	现在，单击 **编辑构建配置：（Edit build configuration:）** 下拉菜单并选择 **发布（Release）** 来打开发布模式的 **构建设置（Build Settings）**。

	[REGION:lightbox]
		[![](SetupIDE_Step12.png)(w:720)](SetupIDE_Step12.png)
	[/REGION]
	
	[REGION:caption]
		单击查看大图。
	[/REGION]

1. 	重复步骤6至11来编辑发布模式的构建配置。请确保按照下图所示进行设置：

	![](SetupIDE_Step13.png)

	[REGION:note]
	如果希望为项目设置额外的构建配置，请参阅Qt Creator[构建设置文档](http://doc.qt.io/qtcreator/creator-build-settings.html)，它们将为您介绍如何添加所需数量的构建配置。
	[/REGION]

## 最终结果

[REGION:lightbox]
	[![](QtBuildSettings_UE4.png)(w:720)](QtBuildSettings_UE4.png)
[/REGION]

[REGION:caption]
	单击查看大图。
[/REGION]

此时，您已将UE4配置为在调试和发布模式下构建。根据系统配置，您可能会留意到处于调试模式时，UE4运行速度较慢。有关 
可用构建配置的性能特性的更多信息，请通读我们的[](Programming/Development/BuildConfigurations)页面。如此一来，您就可以配置Qt Creator以运行UE4了。

[NAV]
