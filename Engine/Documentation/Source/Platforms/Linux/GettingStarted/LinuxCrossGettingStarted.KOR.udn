INTSourceChangelist:6603614
Availability: Public
Crumbs: 
Title: Linux용 크로스 컴파일
Description:Windows에서 Linux 플랫폼을 대상으로 하는 크로스 컴파일 툴체인 셋업 방법을 알아봅니다.
Type: overview
Version: 4.22
Parent: Platforms/Linux
Order: 1
Tags: Linux
topic-image: GettingStarted_Topic.png
Related: Engine/Basics/Projects/Packaging
Related: Platforms/Linux/AdvancedLinuxDeveloper/LinuxCrossCompileLegacy
Related: Programming/Basics/ConfigurationFiles
Related: Programming/Development/BuildConfigurations
Related: Programming/Development/CompilingProjects

**Cross-compiling** (크로스 컴파일) 덕에 Windows 에서 Linux 대상 게임을 개발할 수 있습니다. 현재 크로스 컴파일은 Windows 에만 지원되며, Mac 사용자는 [네이티브 컴파일](Platforms/Linux/NativeToolchain) 을 사용해야 합니다. 추가로 Linux-x86_64 플랫폼에 대한 라이브러리 및 툴체인을 지원, 테스트, 제공합니다.

[REGION:note]
언리얼 엔진 4.13 (이하) 버전으로 개발중인 경우, [](Platforms/Linux/AdvancedLinuxDeveloper/LinuxCrossCompileLegacy) 문서를 참고하세요.
[/REGION]

[INCLUDE:Platforms/Linux/AdvancedLinuxDeveloper/LinuxCrossCompileLegacy#Why_XC]

## 특정 플랫폼 대상

[REGION:note]
4.14 는 x86_64 플랫폼만 대상으로 삼을 수 있기에, 이 부분은 4.15 이상로 작업중인 개발자를 위한 것입니다.
[/REGION]

프로젝트가 특정 플랫폼을 대상으로 삼을 수 있도록 하려면, 프로젝트의 [기본 엔진 구성 파일](Programming/Basics/ConfigurationFiles) 을 편집해야 합니다. 그 방법은 해당 파일 위치로 (`[Project Directory]\Config`) 이동하여 `DefaultEngine.ini` 파일을 연 뒤 다음 줄을 추가합니다:

    [/Script/LinuxTargetPlatform.LinuxTargetSettings]
    TargetArchitecture=X86_64UnknownLinuxGnu

`TargetArchitecture` 을 다음 값 중 아무 것으로나 설정합니다:

*   X86_64UnknownLinuxGnu
*   ArmUnknownLinuxGnueabihf
*   AArch64UnknownLinuxGnueabi

## 문제 해결

현재 셋업 확인은 **cmd** 에서 `\%LINUX_MULTIARCH_ROOT%x86_64-unknown-linux-gnu\bin\clang++ -v` 를 실행하면 "clang version X.X.X ..." 처럼 표시될 것입니다 (아래 참고).  

![](env_var_clangsampleflush.png "env_var_clangsampleflush.png")