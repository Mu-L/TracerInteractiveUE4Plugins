Availability: Docs
Title: 4 - Deploying your Level
Crumbs:%ROOT%
Description:Learn how to deploy a level onto your Android device from UE4.
Version: 4.17
type:quick start
parent:Platforms/Linux/IntermediateLinuxDeveloper/AndroidOnLinux
order: 4
tags:Linux
SkillLevel:Intermediate
Checkpoint:AndroidOnLinuxQS
Contributor:yaakuro

[nav]

Deploying a level means that you're going to [Cook](Engine/Deployment/Cooking) and [Launch](Engine/Deployment/Launching) a level from UE4 onto your Android device. 
Because you're deploying a mobile application onto an Android device, there are a lot of details to consider, including (although, not limited to); your Linux computer's compilation environment, 
your Android device's instruction set, and your device's rendering capabilities. As such, you'll review some of the most common pre-deployment considerations before deploying the **ThirdPersonExampleMap** level onto 
your Android device. 

## Pre-deployment Considerations on Linux

Prior to deploying your application, refer to this list, which was written to help you avoid some common problems that might arise while you're deploying the game to your device.

* Although it may seem like an obvious consideration, please make sure that the Android device is properly connected to your computer.
* If you already haven't done so, verify that Android Debug Bridge (adb) lists your connected device(s). To learn more about adb, enter `adb --help` into the terminal. You can also refer to the [Android Debug Bridge User Guide](https://developer.android.com/studio/command-line/adb.html) to learn more about adb and how to set up the program on your computer. 
* In order to properly build, cook, package, and deploy your game to Android, you'll need to have JDK 8 installed, with your `JAVA_HOME` environment variable set to the correct version of the JDK. To verify that `JAVA_HOME` is set properly, enter `echo $JAVA_HOME` into the terminal. If you don't see the correct JDK version, [download JDK 8](http://www.oracle.com/technetwork/java/javase/downloads/index.html), and install it on your Linux computer, making sure to set the `JAVA_HOME` environment variable to the newly installed JDK. You can set the `JAVA_HOME` environment variable in the [Android SDK Project Settings](https://developer.android.com/studio/command-line/variables.html).
* Make sure that you're building for the appropriate ARM architecture, because if you don't, your project won't deploy properly. After verifying the instruction set that'll work on your device, you can select the appropriate ARM architecture support from inside the Editor by navigating to **Edit > Project Settings... > Android > Build**, and selecting either **Support arm7** or **Support arm64**. 
* Currently, we don't provide **Vulkan** rendering support from UE4 on Linux. 
* Different Android devices uniquely support a variety of texture formats. If you don't know which texture formats are supported by your Android device, try setting your target texture to the Ericsson Texture Compression 1 (ETC 1) compression scheme, which should be supported by most Android devices. To learn more about supporting multiple textures, check out Android's documentation on [Creating Multiple APKs for Different GL Textures](https://developer.android.com/training/multiple-apks/texture.html). 

#### Reviewing Available Texture Formats

If you're interested in reading more about currently supported textures, the following chart provides a quick summary of the most commonly supported textures on Android devices:

[INCLUDE:Platforms/Mobile/Android/Reference#androidformats]

## Deploying your Level

Now that you've read through some of the most important considerations for deploying games to Android devices, you're ready to begin the deployment process.

1.	First, make sure that the **ThirdPersonExampleMap** is open.

	[REGION:lightbox]
		[![](LinuxAndroid_Step26.png)(w:900)](LinuxAndroid_Step26.png)
	[/REGION]
	
	[REGION:caption]
		Click for full image.
	[/REGION]

1.	To open the **Devices** menu, click the arrow next to the **Launch** icon located in the **Main Toolbar**.

	[REGION:lightbox]
		[![](LinuxAndroid_Step27.png)(w:900)](LinuxAndroid_Step27.png)
	[/REGION]
	
	[REGION:caption]
		Click for full image.
	[/REGION]

1.	With the **Devices** menu open, select your Android Device.

	[REGION:lightbox]
		[![](LinuxAndroid_Step28.png)(w:900)](LinuxAndroid_Step28.png)
	[/REGION]
	
	[REGION:caption]
		Click for full image.
	[/REGION]

1.	At this point, your Unreal Engine will deploy the level to your Android device. 

	[OBJECT:EmbeddedVideo]
		[PARAMLITERAL:width]
		640
		[/PARAMLITERAL]
		[PARAMLITERAL:height]
		360
		[/PARAMLITERAL]
		[PARAMLITERAL:videoid]
		afagQeEvf4Q
		[/PARAMLITERAL]
	[/OBJECT]

	[REGION:note]
	As you can see in the video, UE4 updates the progress of your application's deployment process in the Editor's lower right corner.
	[/REGION]

1.	When UE4 finishes cooking and launching your project, the level should be running on your device. You'll also be able to see an Unreal Engine icon, which should be accessible from your Android Applications Drawer.

	![](LinuxAndroid_Step29.png)

## Determining Supported Texture Formats

If you're still wondering which texture formats are supported by your Android device, try out the following step:

1.	While the game is running on your device, tap the screen with four (4) fingers.

	![](LinuxAndroid_Step30.png)(w:900)

	[REGION:caption]
		A dialog should appear, displaying the texture formats that are supported by your Android device.
	[/REGION]

## End Result

Congratulations! You should now have the Third Person Example Map running on your Android device.

[nav]