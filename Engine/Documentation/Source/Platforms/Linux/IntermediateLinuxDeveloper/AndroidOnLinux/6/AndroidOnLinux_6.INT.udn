Availability: Docs
Title: 6 - On Your Own!
Crumbs:%ROOT%
Description:Do some exercises on your own.
Version: 4.17
type:quick start
parent:Platforms/Linux/IntermediateLinuxDeveloper/AndroidOnLinux
order: 6
tags:Linux
SkillLevel:Intermediate 
Checkpoint:AndroidOnLinuxQS
Contributor:yaakuro

[nav]

Developing mobile games requires a high degree of attention, especially when it comes to device compatibility, mobile performance, and space limitations. 
Applying best practices while you're designing mobile games will help you effectively refine your mobile game development skills. 
After designing mobile content using the best practices you've just learned, learn how to preview and deploy your mobile game using an alternative deployment method. 
Finally, at the end of this page, we've added a couple of exercises to help you practice your newly acquired mobile development skills.

##Learning Some Best Practices

Now that you know how to create, package, and deploy a template mobile UE4 project for your Android device; it's a good time to consider device compatibility, mobile performance, and APK best practices that could impact your ability to create mobile games from UE4 on Linux. 

####Android Device Compatibility

* [](Platforms/Mobile/Android\DeviceCompatibility) 
* [](Platforms\DeviceProfiles)

####Mobile Performance

* [](Platforms\Mobile\Performance)

####Reducing APK Package Sizes

There are times when you'll need to limit the size of your mobile game due to limitations imposed by targeted hardware or software platforms. If you encounter a situation where you need to reduce the size of your mobile game, you may need to reduce the size of your **Android Application Package** (APK), which is a custom file format that the Android operating system uses to package mobile applications for distribution. Check out the [Reducing APK Package Size Reference Page](Platforms/Mobile/Android/ReducingAPKSize), where you'll learn ways to reduce the size of your packaged game.

##Designing Mobile Content

If you want to harness what you've learned about mobile game development with UE4 on Linux, you'll want to design game content that'll take advantage of your device's available rendering capabilities. Go ahead and read the following reference information:

* [](Platforms\Mobile\Meshes) 
* [](Platforms\Mobile\Lighting) 
* [](Platforms\Mobile\Materials) 
* [](Platforms\Mobile\PostProcessEffects) 
* [](Platforms\Mobile\Textures)

##Previewing your Mobile Game

Prior to deploying your mobile game to an Android device, you might want to preview your game inside of the Editor. Read through our [](Platforms\Mobile\Previewer) Overview Page to learn how to preview your mobile game inside of the Editor.

##Deploying Over a Wireless Network

At this point, you've learned some best practices for designing mobile game content, you've previewed your mobile game with the Editor, and you're ready to deploy your game onto an Android device over a wireless network. Please read through our [Gear VR Debugging Reference Page](Platforms/VR/GearVR/Debugging) to learn more about deploying a UE4 project to an Android device over a wireless network.

##Doing Some Exercises On Your Own
 
If you want to continue testing your mobile game development skills, try out a couple of exercises on your own:

* Create a new mobile project using something other than the Third Person template, subsequently trying to get your newly created project running on your Android device. 
* Try packaging your project using different Android Texture formats, documenting which ones will work for your specific device.

[nav]