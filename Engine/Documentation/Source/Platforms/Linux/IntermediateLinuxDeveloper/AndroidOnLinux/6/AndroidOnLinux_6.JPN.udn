INTSourceChangelist:3736300
Availability:Public
Title:6 - 応用編
Crumbs:%ROOT%
Description:実際に練習してみましょう。
Version:4.17
type:quick start
parent:Platforms/Linux/IntermediateLinuxDeveloper/AndroidOnLinux
order:6
tags:Linux
SkillLevel:Intermediate 
Checkpoint:AndroidOnLinuxQS
Contributor:yaakuro

[nav]

モバイル ゲームの開発には、相当な注意力を要します。デバイス互換性、モバイルのパフォーマンス、スペース制限については特にそうです。 
モバイル ゲームの開発中にベスト プラクティスを実施すると、モバイル ゲーム開発スキルを効率的にアップすることができます。 
習得したベスト プラクティスを使ってモバイル コンテンツを作成したら、別のデプロイ メソッドでモバイル ゲームをプレビューおよびデプロイする方法を学びましょう。 
このページの最後にある実践問題で、習得したモバイル開発の新しいスキルの腕試しができます。

## ベスト プラクティス

ここまでのステップで、Andoird デバイス用のテンプレート モバイル UE4 プロジェクトの作成、パッケージ化、およびデプロイ方法を学習しました。次は、Linux でUE4 を使用したモバイル ゲームの作成に大きな影響を与えるデバイスの互換性、モバイル パフォーマンス、APK ベスト プラクティスについて考えてみましょう。 

####Android デバイスの互換性

* [](Platforms/Mobile/Android\DeviceCompatibility) 
* [](Platforms\DeviceProfiles)

####モバイル パフォーマンス

* [](Platforms\Mobile\Performance)

####APK パッケージ サイズの縮小

ターゲット ハードウェア / ソフトウェア プラットフォームの制約のため、モバイル ゲーム サイズの制限が必要な場合があります。モバイル ゲーム サイズを縮小するために、モバイル アプリケーションのパッケージ化に Android OS が使用するカスタム仕様ファイル形式である **Android Application Package** (APK) のサイズ縮小が必要な場合があります。パッケージ済みゲームのサイズ縮小方法については、[APK パッケージ サイズの縮小方法](Platforms/Mobile/Android/ReducingAPKSize) を参照してください。

## モバイル コンテンツを作成する

Linux で UE4 を使ってモバイル ゲームを開発する方法を学びました。実践として、デバイス使えるレンダリング機能を使ってゲーム コンテンツを作成すると良いと思います。以下のリファレンスを参照してください。

* [](Platforms\Mobile\Meshes) 
* [](Platforms\Mobile\Lighting) 
* [](Platforms\Mobile\Materials) 
* [](Platforms\Mobile\PostProcessEffects) 
* [](Platforms\Mobile\Textures)

##モバイル ゲームをプレビューする

モバイル ゲームを Android デバイスにデプロイする前に、エディタ内でゲームをプレビューした方がいいかもしれません。[](Platforms\Mobile\Previewer) の概要ページに、エディタ内でモバイル ゲームをプレビューする方法が説明されています。

##ワイヤレス ネットワークでデプロイする

モバイル ゲーム コンテンツを作成し、エディタでモバイル ゲームをプレビューするベスト プラクティスを学習しました。それではゲームを Android デバイスまたはワイヤレス ネットワークにデプロイしてみましょう。ワイヤレス ネットワークで Android デバイスに UE4 プロジェクトをデプロイする方法については、[Gear VR Debugging リファレンス ページ](Platforms/VR/GearVR/Debugging) を参照してください。

##実践問題
 
モバイル ゲーム開発スキルを試したい方は、次の練習問題をやってみましょう。

* Third Person テンプレート以外を使って新規のモバイル プロジェクトを作成します。次に、そのプロジェクトを Android デバイスで実行してみます。 
* 異なる Android テクスチャ形式を使ってプロジェクトをパッケージ化し、特定のデバイスで動く形式を文書化します。

[nav]