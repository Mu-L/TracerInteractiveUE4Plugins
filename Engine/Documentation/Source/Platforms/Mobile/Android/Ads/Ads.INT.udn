Title: Using Ad Mob In-Game Ads on Android
Description:Using the AdMob in-game advertisement system on Android.
Crumbs:
Availability:Public
version:4.10
Parent:Platforms/Mobile/Android
tags:Mobile
tags:Android
tags:ads
type:how-to
skilllevel:Intermediate


![](Platforms/Mobile/Ads/AdMob.png)(w:240)

## Configuration

To configure your project to use the AdMob in-game advertisement system on Android:

1. In the **Edit** menu in **Unreal Editor**, select **Project Setings** to view the configuration options for your project.

1. On the left, Select the **Platforms: Android** tab. 

1. In the **Google Play Services** section, check the **Enable Google Play Support** option.

1. Enter the App ID for your game in the **Games App ID** field.

1. Add an element to the **Ad Mob Ad Unit IDs** array for each AdMob ID you want to associate and enter the ID in the text box.

1. Enter your Google Play License Key in the **Google Play License Key** field.

	![image alt text](image_0.png)

	All of these values are available in the Google Play Developer Console for your App and Game Services, or in the Google Ad Mob interface.

1. Finally, you'll need to add **com.android.vending.BILLING** to the **Extra Permissions** array in the **Advanced APKPackaging** section of the **Android** settings:

	![](extraPermissions.png)

### C++ Projects

If you project is a C++ project you will also need to add the appropriate modules to your Target.cs file, for example:

		...
		if (Target.Platform == UnrealTargetPlatform.Android)
		{
		    ModuleNames.Add("OnlineSubsystemGooglePlay");
            ModuleNames.Add("OnlineSubsystem");
            ModuleNames.Add("AndroidAdvertising");
		}

Look at the Unreal Match 3 Target.cs file, `Match3\Source\Match3.Target.cs`, to see how this fits into the entire file.


[INCLUDE:Platforms/Mobile/Ads#usage]
