Availability: Public
Title: Setting Up Your Android Device For Development
Description: Going over how to set your Android devices up for UE4 development.
Type:how-to
Version: 4.19
Parent: Platforms/Mobile/Android
Tags: mobile
Tags: Android
Tags: StartingOut
Tags: PreRec
topic-image: Android_QS_Editor_TopicImage.png
SkillLevel: Beginner

In the following section we will go over all you need to know to set up your Android device so that it can be used to run your Unreal Engine project.

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    windows
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    active_button_content
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_0]
    [/PARAM]
[/OBJECT]

<!--
[EXCERPT:excerpt_0]

## Steps

1.  First, connect your Android device to your development PC via USB.

1.  Once plugged into your PC, your device driver software should automatically install, but if not, visit [Android's OEM USB Drivers](http://developer.android.com/tools/extras/oem-usb.html) page to find more driver installation links and additional information.

1.  Open the **Settings** Application on your Android device.

1.  Tap **Developer Options** to open the Developer Options menu.

    [REGION:tip]
    If you do not see this item, you need to enable Developer Options on your device. For more about developer options, visit [Android's Using Hardware Devices](http://developer.android.com/tools/device.html) page.
    [/REGION]

1.  Scroll down and select **About Phone**. Depending on your Android device, you may have an About Device, About Tablet, or About Shield option instead.

    [REGION:note]
    This may be in a **More** section on newer Android versions.
    [/REGION]

1.  Tap the **Build Number** 7 times to activate developer mode.

    [REGION:lightbox]
    [![](Enable_Dev_Mode.png)(w:200)](Enable_Dev_Mode.png)
    [/REGION]

1.  After the first few taps, you will see a message stating "You are now # steps away from becoming a developer".

1.  Once developer mode has been activated, you will get a success message displayed on the screen similar to the one below.

    ![](Dev_Mode_Active.png)

1.  Navigate back to the Settings menu and select **Developer Options** which should now available.

    [REGION:lightbox]
    [![](Dev_Options_Enabled.png)(w:200)](Dev_Options_Enabled.png)
    [/REGION]

1.  In the Developer Options menu, enable **USB debugging** by tapping it.

    [REGION:lightbox]
    [![](Enable_USB_Debugging.png)(w:200)](Enable_USB_Debugging.png)
    [/REGION]

1.  When prompted, tap the **OK** button.

    [![](Enable_USB_Debugging_Warning.png)(w:200)](Enable_USB_Debugging_Warning.png)

1.  Disconnect your Android device from USB and then immediately plug it back in. After the device is recognized by the PC, the following message will appear on your Android device asking you if you want to allow this PC to talk to your device. A message box will ask what you want the USB connection to do. Tap the **checkmark box** that says **Always allow this computer** and then tap the **OK** button.

    [![](PC_RSA_Fingerprint.png)(w:200)](PC_RSA_Fingerprint.png)

[/EXCERPT:excerpt_0]
-->

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    windows
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    active_button_content
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_1]
    [/PARAM]
[/OBJECT]

<!--
[EXCERPT:excerpt_1]

## End Result

To verify that everything has been setup correctly and that your Android device is ready for UE4 development, you can do the following:

1.  First, open a **Windows Command Prompt** by pressing the **Windows + R** keys to open up the **Run** command dialogue box.

1.  Inside of the **Open** input, type **cmd **and the press the **OK** button to open the Windows Command Prompt.

    ![](Windows_Run_Command.png)

1.  Inside of the Windows Command Prompt, input **adb devices** and then press the **Enter** key to display all connected Android devices.

    ![](ADB_Devices.png)

If you do not see your device after you input the adb devices command you can try the following items:

*   If the device is listed but shows **Unauthorized** next to the name, that indicates that you did not accept your development PC's computer's RSA key fingerprint. 

*   If your device does not show up despite it being plugged in and setup, input the following commands in the following order into the Windows Command Prompt to restart the **Android Debug Bridge** or (ADB) service: 

    [REGION:simpletable]
    | Property Name | Description |
    | --- | --- |
    | **ADB kill - server** | This will stop the ADB service. |
    | **ADB start - server** | This will start the ADB service. |
    [/REGION]

*   In some cases, a correctly configured Android device might not show up if it is connected as a **Media Device (MTP)**. If this happens, try connecting as **Camera (PTP)** by selecting the Camera (PTP) option in your Use USB to options.

When completed you will now have an Android-based smartphone that is ready for your UE4 project to be deployed to and run on.

[/EXCERPT:excerpt_1]
-->

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    mac
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_2]
    [/PARAM]
[/OBJECT]

<!--
[EXCERPT:excerpt_2]

## Steps

1.  Connect your Android device to your Mac via USB.

1.  Once plugged into your PC, your device driver software should automatically install, but if not, visit [Android's OEM USB Drivers](http://developer.android.com/tools/extras/oem-usb.html) page to find more driver installation links and additional information.

1.  Open the **Settings** Application on your Android device.

1.  Tap Developer Options to open the Developer Options menu.

    [REGION:tip]
    If you do not see this item, you need to enable Developer Options on your device. For more about developer options, visit [Android's Using Hardware Devices](http://developer.android.com/tools/device.html) page.
    [/REGION]

1.  Scroll down and select About Phone. Depending on your Android device, you may have an About Device, About Tablet, or About Shield option instead.

    [REGION:note]
    This may be in a More section on newer Android versions.
    [/REGION]

1.  Tap the Build Number 7 times to activate developer mode.

    [REGION:lightbox]
    [![](Enable_Dev_Mode.png)(w:200)](Enable_Dev_Mode.png)
    [/REGION]

1.  After the first few presses, you will see a message stating You are now # steps away from becoming a developer.

1.  Once developer mode has been activated you will get a success message displayed on the screen similar to the one below.

    ![](Dev_Mode_Active.png)

1.  Navigate back to the Settings menu and select Developer Options which should now available.

    [REGION:lightbox]
    [![](Dev_Options_Enabled.png)(w:200)](Dev_Options_Enabled.png)
    [/REGION]

1.  In the Developer Options menu, enable USB debugging by tapping on it with your finger.

    [REGION:lightbox]
    [![](Enable_USB_Debugging.png)(w:200)](Enable_USB_Debugging.png)
    [/REGION]

1.  When prompted press the OK button to enable USB debugging.

    [![](Enable_USB_Debugging_Warning.png)(w:200)](Enable_USB_Debugging_Warning.png)

1.  Disconnect your Android device from USB and then immediately plug it back in. After the device is recognized by the PC the following message will appear on your Android device asking you if you want to allow this PC to talk to your device. A message box will ask what you'd like to use the USB connection to do. Press the checkmark box that says Always allow this computerand the press the OK button.

    [![](PC_RSA_Fingerprint.png)(w:200)](PC_RSA_Fingerprint.png)
[/EXCERPT:excerpt_2]
-->

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    mac
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_3]
    [/PARAM]
[/OBJECT]

<!--
[EXCERPT:excerpt_3]

## End Result

*   To verify that your device is setup properly, open the Terminal app from /Applications/Utilities.

    ![](MAC_Terminal_Activate.png)

Type ADB devices in the command prompt and you should see all devices that are connected to your Mac.

    ![](MAC_Checking_ADB_Devices.png)

If you do not see your device after you input the adb devices command you can try the following items:

*   If the device is listed but shows **Unauthorized** next to the name, that indicates that you did not accept your development PC's computer's RSA key fingerprint. 

*   If your device does not show up despite it being plugged in and setup, input the following commands in the following order into the Windows Command Prompt to restart the **Android Debug Bridge** or (ADB) service:

    [REGION:simpletable]
    | Property Name | Description |
    | --- | --- |
    | **ADB kill - server** | This will stop the ADB service. |
    | **ADB start - server** | This will start the ADB service. |
    [/REGION]

*   In some cases, a correctly configured Android device might not show up if it is connected as a **Media Device (MTP)**. If this happens, try connecting as **Camera (PTP)** by selecting the Camera (PTP) option in your Use USB to options.

When completed you will now have an Android-based smartphone that is ready for your UE4 project to be deployed to and run on.

[/EXCERPT:excerpt_3]
-->

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    linux
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_4]
    [/PARAM]
[/OBJECT]

<!--
[EXCERPT:excerpt_4]

## Steps

1.  Connect the Android device to your Linux computer with a USB cable.

1.  Open the Settings application on your Android device.

    [![](LinuxAndroid_Step17.png)](LinuxAndroid_Step17.png)

1.  Tap Developer Options to open the Developer Options menu.

    [![](LinuxAndroid_Step18.png)](LinuxAndroid_Step18.png)

    [REGION:note]
    If you don't see this item, you'll need to enable Developer Options on your device. To enable Developer Options, open the Settings application, scroll to the bottom and select About phone. After selecting About phone scroll to the bottom and tap Build number seven (7) times. For additional instructions on how to enable Developer Options on Android devices, visit Android's User Guide.
    [/REGION]

## Enabling USB Debugging

1.  From the Developer Options menu, enable USB debugging.

    [![](LinuxAndroid_Step19.png)](LinuxAndroid_Step19.png)

1.  A window should appear, confirming your selection to enable USB debugging. After reading the prompt, go ahead and tap the OK button.

    [![](LinuxAndroid_Step20.png)](LinuxAndroid_Step20.png)

1.  USB debugging is now enabled.

    ![](LinuxAndroid_Step20Note.png)

1.  Now, disconnect the Android device from its USB cable, plugging it back in after a few seconds. If you're connecting a device running Android 4.2.2 or higher, the following dialog will appear, asking whether you should accept an RSA key that allows debugging through your Linux computer. Go ahead and select the checkbox next to Always allow from this computer before tapping the OK button.

    [![](LinuxAndroid_Step21.png)](LinuxAndroid_Step21.png)

[/EXCERPT:excerpt_4]
-->

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    linux
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_5]
    [/PARAM]
[/OBJECT]

<!--
[EXCERPT:excerpt_5]

## End Result

If you do not see your device after you input the adb devices command you can try the following items:

*   If the device is listed but shows **Unauthorized** next to the name, that indicates that you did not accept your development PC's computer's RSA key fingerprint. 

*   If your device does not show up despite it being plugged in and setup, input the following commands in the following order into the Windows Command Prompt to restart the **Android Debug Bridge** or (ADB) service:

    [REGION:simpletable]
    | Property Name | Description |
    | --- | --- |
    | **ADB kill - server** | This will stop the ADB service. |
    | **ADB start - server** | This will start the ADB service. |
    [/REGION]

*   In some cases, a correctly configured Android device might not show up if it is connected as a **Media Device (MTP)**. If this happens, try connecting as **Camera (PTP)** by selecting the Camera (PTP) option in your Use USB to options.

*   When completed you will now have an Android-based smartphone that is ready for your UE4 project to be deployed to and run on.

[/EXCERPT:excerpt_5]
-->
