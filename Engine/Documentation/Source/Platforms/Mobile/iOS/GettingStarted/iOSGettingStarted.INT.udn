Availability: Public
Title: Advanced iOS PC/Mac Workflow
Description: Setting up for development for the iOS platform.
Type: how-to
Version: 4.10
Parent: Platforms/Mobile/iOS
Tags: mobile
Tags: iOS
Tags: Guides
topic-image: iOS_QS_Editor_TopicImage.png
SkillLevel: Advanced
Related: Platforms/Mobile/iOS/Windows
prereq: Platforms/Mobile/iOS/QuickStart

## Devices / SDK

UE4 supports the following iOS devices and OS versions:

Minimum Supported iOS Devices:  

*   IPhone 5s 
*   IPad Air 

Minimum Supported OS:

*   iOS 9.0 or above.

To check the compatibility of your device with engine features, please see the [iOS Device Compatibility](Platforms/Mobile/iOS/DeviceCompatibility) page.

## Supported Configurations

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    windows
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    active_button_content
    [/PARAMLITERAL]
    [PARAM:content]
    

See the [Recommended Specifications](GettingStarted/RecommendedSpecifications) page for detailed information about Windows system requirements.

    [/PARAM]
[/OBJECT]

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    mac
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    

See the [Recommended Specifications](GettingStarted/RecommendedSpecifications) page for detailed information about Mac system requirements. Note that to deploy to iOS 7.1, you will need to install XCode 5.1. XCode is [available as a free download](https://itunes.apple.com/us/app/xcode/id497799835) on the App Store.

    [/PARAM]
[/OBJECT]

## Getting Started as an Apple iOS Developer

You will need to sign up for the [Apple iOS Developer Program](https://developer.apple.com/programs/ios/).

*   **Individual** - If you are working on your own, or will be the only one on a small them that needs Admin access to the iOS account
*   **Company** - If you are a small team with Company / This allows you to add people to your team, and grant them different kinds of access

When you create your Apple developer account, you will have to do the following (using Apple's instructions):

*   Create a certificate.
*   Create an App ID (it is fine to use * for the user specified portion).
*   Create a provisioning profile.
*   Add your devices.
*   Add all of your devices to the provisioning profile.

For more information, please see the following pages on Apple's site:

*   [App Distribution Guide](https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40012582-CH1-SW1)
*   [Maintaining Identifiers, Devices, and Profiles](https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingProfiles/MaintainingProfiles.html#//apple_ref/doc/uid/TP40012582-CH30-SW1)
*   [Launching Your App on Device](https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/LaunchingYourApponDevices/LaunchingYourApponDevices.html#//apple_ref/doc/uid/TP40012582-CH27-SW4)

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    windows
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    active_button_content
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_0]
    [/PARAM]
[/OBJECT]
<!--
[EXCERPT:excerpt_0]

To get your certificate on Windows, you will need to use iPhone Packager, located in `Engine\Binaries\DotNET\IOS`.

There are two tabs in iPhone Packager:

*   New User
*   Already a registered iOS developer

The New User tab contains tools for developers who have not developed iOS applications previously.

Here, you can:

*   Open the Generate Certificate Request Window. The Generate Certificate Request window generates a key pair for signing your iOS applications and a certificate request that is used to generate a certificate on Apple's Developer website.
*   Import a provisioning profile downloaded from Apple's Developer website.
*   Import a development certificate and key pair downloaded from Apple's Developer website.

[REGION:warning]
There is an option to open the Edit Info.plist window, but this is an old option that is no longer needed. Eventually, the functionality of iPhone Packager is going to be integrated into Unreal Editor.
[/REGION]

The Already a Registered iOS Developer tab contains tools for developers who have previously developed iOS applications, either using Unreal or through other methods, and already have a development certificate and provisioning profile.

Here, you can:

*   Import a provisioning profile downloaded from Apple's Developer website.
*   Import a development certificate and key pair previously downloaded from Apple's Developer website or a .p12 file exported from Keychain Access.

When installing your certificate, the default options in the wizard should work for most cases.

[/EXCERPT:excerpt_0]
-->

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    mac
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_1]
    [/PARAM]
[/OBJECT]
<!--
[EXCERPT:excerpt_1]

Now you will need to install the certificate on your Mac, as explained on the web site. You will also need to install that certificate on all the Macs in your studio that will be used to sign applications. There are two ways to do this:

* With Keychain Access application:
    * Select the login keychain.
    * Select My Certificates in the Category section.
    * Select the new certificate (it will start with "iPhone Developer").
    * Right-click on it, and select Export.
    * Follow the prompts (empty password is fine if you store it securely).
    * Give out the .p12 to others.
    * They can then double-click it, or drag the .p12 in to Keychain Access, to install the certificate in their login keychain.
* With Xcode:
    * Go to Organizer.
    * Go to Developer Profile on the bottom left.
    * Select Export Developer Profile.
    * Follow the prompts (including entering password - use something you can share with your team).
    * Give out the profile file to others.
    * They can then Import Developer Profile in their Xcode's organizer.
	
Next, download the `.mobileprovision` from the Apple site. It will download a file called &lt;ProfileName&gt;.mobileprovision. You should place your `.mobileprovision` file in one of the following locations:
* `[GameDir]/Build/IOS/[GameName].mobileprovision`
* `Engine/Build/IOS/UE4Game.mobileprovision`

[/EXCERPT:excerpt_1]
-->

In the end, the important thing is that everyone has the same "iPhone Developer:" certificate in their login Keychain.

You can share a wildcard mobileprovision file across all your games (until a game needs a non-wildcard profile as explained by Apple). Remember to update the file(s) whenever you add more devices.

## Deploying to iOS Devices

You can use the **Launch** button within Unreal Editor to quickly begin testing your current level on iOS devices. You can also use the **File > Package** command to cook and package your game for testing on iOS devices. For more information, see the [Launching to Devices](Engine/Deployment/Launching) page.