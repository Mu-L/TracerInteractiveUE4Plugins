INTSourceChangelist:6573839
Availability: Public
Title: 고급 iOS PC/Mac 작업방식
Description:iOS 플랫폼용 개발을 위한 셋업하기 입니다.
Type: how-to
Version: 4.10
Parent: Platforms/Mobile/iOS
Tags: mobile
Tags: iOS
Tags: Guides
topic-image: iOS_QS_Editor_TopicImage.png
SkillLevel: Advanced
Related: Platforms/Mobile/iOS/Windows
prereq: Platforms/Mobile/iOS/QuickStart

## 디바이스 / SDK

UE4 에서 지원하는 iOS 디바이스 및 OS 버전은 다음과 같습니다.

지원하는 iOS 디바이스 최소:

*   IPhone 5s 
*   IPad Air 

지원하는 OS 최소:

*   iOS 9.0 or 이상.

특정 엔진 기능과의 디바이스 호환성을 확인하려면 [](Platforms/Mobile/iOS/DeviceCompatibility) 문서를 참고해 주시기 바랍니다.

## 지원되는 환경설정

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    windows
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    active_button_content
    [/PARAMLITERAL]
    [PARAM:content]
    

Windows 시스템 사양 관련 상세 정보는 [](GettingStarted/RecommendedSpecifications) 문서를 참고하세요.

    [/PARAM]
[/OBJECT]

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    mac
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    

Mac 시스템 요구사양 관련 상세 정보는 [](GettingStarted/RecommendedSpecifications) 문서를 확인하세요. 참고로 iOS 7.1 에 디플로이하려는 경우, XCode 5.1 을 설치해 줘야 합니다. XCode 는 App Store 에서 [무료로 다운로드 가능](https://itunes.apple.com/us/app/xcode/id497799835) 합니다.

    [/PARAM]
[/OBJECT]

## Apple iOS 개발자로 시작하기

[Apple iOS Developer Program](https://developer.apple.com/programs/ios/) 에 가입해야 합니다.

*    **개인** - 혼자 작업하는 경우, 아니면 한 명만 iOS 계정 Admin 접근이 필요한 소규모 팀의 경우입니다.
*    **회사** - 회사의 소규모 팀인 경우, 이 옵션으로 팀에 사람을 추가한 뒤 다양한 접근권한을 부여할 수 있습니다.

애플 개발자 계정을 만들 때, (Apple 지침에 따라) 다음과 같은 작업을 해 줘야 합니다:

* Certificate 생성
* App ID 생성 (사용자 지정 부분에 대해서는 *를 사용해도 됩니다)
* Provisioning 프로파일 생성
* 디바이스 추가
* Provisioning 프로파일에 모든 디바이스 추가

자세한 정보는 Apple 사이트의 다음 문서를 참고해 주시기 바랍니다:

*   [App Distribution Guide](https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40012582-CH1-SW1)
*   [Maintaining Identifiers, Devices, and Profiles](https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingProfiles/MaintainingProfiles.html#//apple_ref/doc/uid/TP40012582-CH30-SW1)
*   [Launching Your App on Device](https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/LaunchingYourApponDevices/LaunchingYourApponDevices.html#//apple_ref/doc/uid/TP40012582-CH27-SW4)

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    windows
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    active_button_content
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_0]
    [/PARAM]
[/OBJECT]
<!--
[EXCERPT:excerpt_0]

Windows에서 Certificate 를 구하기 위해선, `Engine\Binaries\DotNET\IOS` 에 위치한 iPhone Packager 를 사용해야 합니다.

iPhone Packager 에는 탭이 둘 있습니다:

* New User, 신규 사용자
* Already a registered iOS developer, 이미 등록된 iOS 개발자

New User 탭에는 기존에 iOS 어플리케이션을 개발한 적이 없는 개발자를 위한 툴이 들어있습니다.

여기서 할 수 있는 작업은:

* Certificate 요청 생성 창을 엽니다. Certificate 요청 생성 창은 iOS 어플리케이션 Signing 에 필요한 키 짝, Apple 의 Developer 웹사이트에서 Certificate 생성에 사용되는 Certificate 요청을 생성합니다.
* Apple 의 Developer 웹사이트에서 다운로드한 Provisioning 프로파일을 임포트합니다.
* Apple 의 Developer 웹사이트에서 다운로드한 개발 Certificate 와 키 짝을 임포트합니다.

[REGION:warning]
Info.plist 창을 여는 옵션이 있지만, 오래된 옵션이라 더이상 필요치 않습니다. 결국 iPhone Packager 의 기능은 언리얼 에디터에 통합될 예정입니다.
[/REGION]

Already a Registered iOS Developer 탭에는 언리얼로든 다른 무엇으로든 기존에 iOS 어플리케이션을 개발한 경험이 있는 개발자를 위한 것으로, 이미 개발 Certificate 와 Provisioning 프로파일이 있습니다.

여기서 할 수 있는 작업은:

* Apple 의 Developer 웹사이트에서 다운로드한 Provisioning 프로파일을 임포트합니다.
* Apple 의 Developer 웹사이트에서 기존에 다운로드한 개발 Certificate 와 키 짝, 또는 Keychain Access 에서 익스포트한 .p12 파일을 임포트합니다.

Certificate 설치시, 마법사의 기본 옵션으로 대부분의 경우 통할 것입니다.

[/EXCERPT:excerpt_0]
-->

[OBJECT:ToggleButtonContent]
    [PARAMLITERAL:category]
    OS
    [/PARAMLITERAL]
    [PARAMLITERAL:id]
    mac
    [/PARAMLITERAL]
    [PARAMLITERAL:active]
    [/PARAMLITERAL]
    [PARAM:content]
    [INCLUDE:#excerpt_1]
    [/PARAM]
[/OBJECT]
<!--
[EXCERPT:excerpt_1]

이제 웹에서 설명한 대로 Mac에다 Certificate 를 설치해야 합니다. 회사 내 어플리케이션 Signing 에 사용할 모든 Mac에다가도 Certificate 를 설치해 줘야 합니다. 두 가지 방법이 있습니다:

* Keychain Access 어플리케이션 방법
    * 로그인 키체인을 선택합니다.
    * Category 부분에서 My Certificates 를 선택합니다.
    * 새로운 Certificate 를 선택합니다. ("iPhone Developer"로 시작됩니다.)
    * 그 위에 우클릭하고 Export 를 선택합니다.
    * 지시를 따릅니다. (보안만 확실하다면 암호가 없어도 괜찮습니다.)
    * .p12 를 다른이에게 배부합니다.
    * 받은 이는 .p12 를 더블클릭하거나 Keychain Access 로 끌어놓으면, 자신의 로그인 키체인에 Certificate 가 설치됩니다.
* Xcode 방법
    * Organizer 로 이동합니다.
    * 좌하단의 Developer Profile 로 이동합니다.
    * Export Developer Profile 를 선택합니다.
    * 지시를 따릅니다. (패스워드 입력 등은 팀원과 공유할 수 있는 것으로 사용하면 됩니다)
    * 프로파일 파일을 다른이에게 배부합니다.
    * 받은 이는 자기 Xcode 의 Organizer 에서 Import Developer Profile 을 선택하면 됩니다.
	
다음으로 애플 사이트에서 `.mobileprovision` 을 다운받습니다. 그러면 &lt;ProfileName&gt;.mobileprovision 이라는 파일을 다운받게 됩니다. .mobileprovision 파일은 다음 중 한 곳에 넣어야 합니다:
* `[GameDir]/Build/IOS/[GameName].mobileprovision`
* `Engine/Build/IOS/UE4Game.mobileprovision`

[/EXCERPT:excerpt_1]
-->

마지막으로 중요한 점, 모두가 같은 "iPhone Developer:" Certificate 를 자신의 키체인에 갖고 있어야 합니다.

(게임에 와일드카드가 아닌 별도의 프로파일이 필요하다는 애플의 설명이 있기 전까지는) 모든 게임에 대해 와일드카드 mobileprovision 파일을 공유할 수 있습니다. 디바이스를 추가할 때마다 파일 업데이트가 필요하다는 점 기억해 주시기 바랍니다.

## iOS 디바이스에 디플로이하기

언리얼 에디터의 **실행** 버튼을 사용하여 iOS 디바이스에서 현재 레벨 테스트를 빠르게 시작할 수 있습니다. **파일 > 패키지** 명령을 사용하여 iOS 디바이스에서의 테스트용 게임을 쿠킹 및 패키징할 수도 있습니다. 자세한 정보는, [](Engine/Deployment/Launching) 문서를 참고하세요.