INTSourceChangelist:3810467
Availability:Public
Crumbs: %ROOT%
Title:Samsung Gear VR のデバッグ方法
Description:Gear VR ヘッドセット用アプリケーションのデバッグ方法
Type:Overview
SkillLevel:Advanced
Version:4.17
Parent:Platforms/VR/GearVR
Order:3
tags:VR
tags:Gear VR
Related:Platforms/Mobile/Performance
Related:Engine/Performance
Related:Engine/Performance/StatCommands
Related:Platforms/Mobile/Textures
Related:Platforms/Mobile/Materials
Related:Engine/Rendering/Materials/MaterialProperties/BlendModes
Related:Engine/Rendering/Materials/CustomizedUVs
prereq:Platforms\VR\GearVR\Prerequisites

[TOC(start:2 end:3)]

パフォーマンス問題を引き起こす、またはプロジェクトにダメージを与えうるエラー発生の探知には、ターゲット デバイス上でのプロジェクトのデバッグ処理能力が必須です。 
以下のセクションでは、 Gear VR プロジェクトのデバッグ支援に使用可能なツールおよびその使い方を説明します。

### Gear VR Developer モードを有効にする
Gear VR Headset を使わずに Gear VR プロジェクトを表示できれば、アンリアルのコンソールなどへ早く簡単なアクセスが可能となり、問題のデバッグ時間の大幅な短縮が実現できます。 
次のセクションでは、Gear VR Headset を使わずに Gear VR プロジェクトを表示する設定方法について説明します。 

[region:note]
この設定を行う前に、デバイス認証がされているスマートフォンに何か Gear VR アプリケーションがインストールされていることを確認しておく必要があります。 
好きなアプリケーションをダウンロードまたはコンパイルすることができます。
[/region]

1. まず、Samsung Galaxy スマートフォンで **[Settings (設定)]** > **[Apps]** > **[Application Manager]** > **[Gear VR Service]** を開きます。
    
    [REGION:lightbox]
    [![](T_GearVR_Dev_Mode_01.png)(w:600)](T_GearVR_Dev_Mode_01.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. 次に、**Storage** 上の **[Manage Storage]** をタップします。
  
    [REGION:lightbox]
    [![](T_GearVR_Dev_Mode_02.png)(w:500)](T_GearVR_Dev_Mode_02.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. 次に **[VR Service Version (VR サービス版)]** を **6** 回タップします。

    [REGION:lightbox]
    [![](T_GearVR_Dev_Mode_03.png)(w:300)](T_GearVR_Dev_Mode_03.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. スキャン処理が始まります。完了すると画面上に **Developer Mode** への切り替えが表示されます。

    [REGION:lightbox]
    [![](T_GearVR_Dev_Mode_04.png)(w:300)](T_GearVR_Dev_Mode_04.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. Gear VR プロジェクトの起動できる状態になりました。Gear VR Headset がなくても表示されています。

    [region:tip]
    VR Developer モードは、有効にした途端にスマートフォンの充電が一気に減るのでご注意ください。これは、Gear VR Headset を使用しない時は画面を無効にするために設定をオーバーライドしているからです。
    [/region]

### Gear VR Developer モードを無効にする

何らかの理由で VR Developer モードを無効にする必要がある場合は、 **Developer Mode** スライダーを **[On]** から **[Off]** にスライドすると VR Developer モードが無効になります。

[OBJECT:ComparisonSlider]
	[PARAM:before]
	![Developer Mode Disabled](Dev_Mode_Disable.png)
	[/PARAM]
	[PARAM:after]
	![Developer Mode Enabled](Dev_Mode_Enable.png)
	[/PARAM]
[/OBJECT]


### UE4 コンソールを有効にする
UE4 コンソールは、UE4 で現在表示されているデータを検索したり、時にはデータに影響を与えることが可能な非常にパワフルなツールです。 
モバイル デバイス上で UE4 コンソールにアクセスする場合は、PC からアクセスする方法と若干異なります。以下が手順です。

[region:tip]
PC とアンリアルではコンソールに使用できるすべてのコンソール コマンドがリストされますが、 **DumpConsoleCommands** をコンソールに入力すると使用できるコンソール コマンドの一覧を出すことができます。
[/region]

1. まず最初に、スマートフォンの Gear VR Developer モードが有効になっていることを確認してください。有効にすると、Gear VR Headset を使用せずにプロジェクトを起動して見ることができます。Gear VR Headset を使用している場合は、スマートフォンの画面に触らずに済みます。
    
    [REGION:lightbox]
    [![](T_GearVR_Dev_Mode_04.png)(w:300)](T_GearVR_Dev_Mode_04.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. 次にプロジェクトのアイコンをタップして Gear VR プロジェクトを開始します。プロジェクトが開始すると、スマートフォン上はこのようになります。
    
    [REGION:lightbox]
    [![](T_App_On_Phone.png)(w:500)](T_App_On_Phone.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. Gear VR プロジェクトが起動している間に、スマートフォンの画面を **4 本** の指で 1 回タップして、アンリアル エンジン コンソールを開きます。正しく操作できていれば、スマートフォン上はこのようになります。 

    [REGION:lightbox]
    [![](T_GearR_Open_Console.png)(w:500)](T_GearR_Open_Console.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. 入力ボックスで使いたいコンソール コマンドを入力し、 **[Ok]** ボタンを押します。この例では、 **Stat Memory** コマンドを使ってプロジェクトのメモリ使用量を確認します。 

    [REGION:lightbox]
    [![](T_GearR_Input_Command.png)(w:500)](T_GearR_Input_Command.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. **[Ok]** ボタンが押されると、プロジェクトにはメモリ使用量 (および用途) が表示されます。

    [REGION:lightbox]
    [![](T_GearR_Displaying_Memory.png)(w:500)](T_GearR_Displaying_Memory.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. デバッグ処理中、あるいはデバッグ情報の画面をクリアしたい場合は、**「Stat None」** と入力するとデバッグ情報画面をすべてクリアすることができます。

    [region:tip]
    Gear VR Headset を使ったコンソール デバッグには、Bluetooth キーボードを使うのがベストな選択肢です。この方法だと、ヘッドセットからスマートフォンを取り外さずにコンソールを使用できます。
    [/region]

### Gear VR のデバッグ ログを表示する
3D プロジェクトを開発する場合も、デバッグ ログを表示できることは非常に重要です。 
デバッグ ログには生きた情報がふくまれるので、プロジェクトが動作しない原因の調査が可能な上、修正方法を提案できるケースもあります。 
スマートフォンからデバッグ ログを出す方法を次のセクションで見ていきましょう。

[region:note]
Android の公式文書に [Logcat](http://developer.android.com/tools/help/logcat.html) を使った様々な操作の詳細が記載されています。ご確認ください。
[/region]

1. まず最初に、デバッグ情報を取得したいアプリケーションが入っているスマートフォンが USB で PC に接続されていることを確認してください。

1. 次に、**Windows Key + R** を押して Windows Command Shell を開いてから、**Run** ダイアログ ボックスに **「CMD」** を入力します。 
     
     ![](T_Open_CMD_Prompt.png)(w:500)

1. **[Enter]** キーを押して Windows コマンドライン ウィンドウを開始します。
    
    [REGION:lightbox]
    [![](T_Windows_CMD.png)(w:500)](T_Windows_CMD.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. コマンドライン ウィンドウに **「ADB Devices」** と入力したら、**[Enter]** キーを押して PC に付随しているディスプレイ デバイスを表示させます。
    
    [REGION:lightbox]
    [![](T_Windows_ADB_Devices.png)(w:500)](T_Windows_ADB_Devices.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

    [region:tip]
    **ADB Devices** にデバイスが何も表示されない場合は、[Gear VR Prerequisites](Platforms\VR\GearVR\Prerequisites) のセットアップ セクションを見直してから、再度この手順を行ってください。 
    [/region]

1. 最新のデバッグ情報が取得できるようにログ キャッシュをクリアします。

        adb logcat -c

    [REGION:lightbox]
    [![](T_ADB_Clear_Log.png)(w:500)](T_ADB_Clear_Log.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. ログから古いデータがクリアされたので、スマートフォン上でアプリケーションを起動し、以下のコマンドを入力してログ情報を取得します。
    
        adb logcat -s UE4 OVR VrApi VrLib VRSVC HmdInfo >logoutput.txt

    [REGION:lightbox]
    [![](T_ADB_Get_Log.png)(w:500)](T_ADB_Get_Log.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

	[region:note]
	ログがライブで出力されているか確認するために、**>logoutput.txt** の部分を省略すると、すべてのログ更新がコマンドライン ウィンドウで行われます。
	[/region]

1. キーボードの **CTRL + C** を押してログをキャプチャします。完了すると、ログファイルに **「logoutput.txt」** とファイル名が付いて、Windows の **「Users」** フォルダに保存されます。

    [REGION:lightbox]
    [![](T_ADB_Log_Location.png)(w:500)](T_ADB_Log_Location.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

    [region:note]
    コマンドライン ウィンドウが開いて ADB logcat コマンドが実行されている間は、データはログファイルにが出力され続けます。**CTRL + C** を押せば、ログファイルへのデータの書き込みが停止します。
    [/region] 

1. **UE4**、**OVR**、**VrApi**、**VrLib**、**VRSVC**、**HmdInfo** を logcat コマンドへ追加すると、ログファイルに含まれる情報が作成されます。 
    作成されたログファイルでこれらの単語を検索すると、それぞれの単語に関連するデバッグ情報がすべて表示されます。  
    次の画像サンプルを見てもらうと分かります。上記で使用した条件 (OVR、UE4、Vrapi、VrApi) が各それぞれの関連情報と共にログに表示されています。
    
    [REGION:lightbox]
    [![](T_ADB_Log_Info.png)(w:500)](T_ADB_Log_Info.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

何らかの理由で Gear VR プロジェクトが起動しない場合、logcat コマンドを使うとエラーの場所と原因を正確に表示してくれるので非常に便利です。 
また、問題の詳細も表示されるので、これを [UE4 Forum](https://forums.unrealengine.com/)や [Answer Hub](https://answers.unrealengine.com/index.html) に投稿して相談することもできます。

### ワイヤレスでデプロイ＆デバッグを行う

Gear VR Headset は USB ポートのみを使用しているので、Gear VR Headset 内にある間は、デバッグ情報を取得したりスマートフォンにデプロイすることはできません。 
ただし、スマートフォンを Wi-Fi で接続してデバッグ情報を開発 PC に送れば、この問題を回避できます。 
Wifi で接続すればプロジェクトのデプロイも可能ですが、USB ケーブルを使った場合に比べると格段に遅くなります。 
次のセクションでは、デバッグ情報を Wi-Fi で送信しデプロイできるようにスマートフォンを設定するために必要なことを説明します。

[region:note]
この操作を行うためには、開発 PC と Galaxy Note 4 は同じネットワーク上に存在している必要があります。
[/region]

1. 次に、**Windows Key + R** を押して Windows Command Shell を開いてから、**Run** ダイアログ ボックスに **「CMD」** を入力します。
    キーボードの **Enter** キーを押すか、マウスで **[OK]** ボタンをクリックします。 

    ![](T_Open_CMD_Prompt.png)
   
1. **[OK]** ボタンが切り替わると、以下のような [Windows Command Line] ウィンドウが表示されます。
    
    [REGION:lightbox]
    [![](T_Windows_CMD.png)(w:500)](T_Windows_CMD.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. 以下のコマンドを入力して、スマートフォンの IP アドレスを確認し、必ず書き留めておいてください。使用する IP アドレスは、**inet** の後の部分になります。
    
        adb shell ip -f inet addr show wlan0
    
    [REGION:lightbox]
    [![](T_ADB_Phone_IP.png)(w:500)](T_ADB_Phone_IP.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. 次に、以下のコマンドを入力してネットワーク接続を **TCP** に変更し、リッスンすることになるポートを設定します。

        adb tcpip 5555
    
    [REGION:lightbox]
    [![](T_ADB_Set_Port.png)(w:500)](T_ADB_Set_Port.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]

1. ポートの設定が完了したら、以下のコマンドを入力して Enter Key を押して、スマートフォンを接続します。
    
        adb connect 000.000.000.000 - デバイスの IP アドレスに変更してください。
        
1. **「connected to (接続済み)」** というメッセージと自分のデバイスの IP アドレスが表示されているはずです。
    
	[REGION:lightbox]
	[![](T_ADB_Connected.png)(w:500)](T_ADB_Connected.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. Wi-Fi 接続を確認するには、**adb devices** をコマンドライン ウィンドウに入力して [Enter] キーを押します。**[List of devices attached]** には上記で使用した IP アドレスだけがアタッチされたデバイスになっていることが分かります。

    [REGION:lightbox]
    [![](T_ADB_Attached_IP.png)(w:500)](T_ADB_Attached_IP.png)
    [/REGION]
    
    [REGION:caption]
    クリックしてフルサイズで表示
    [/REGION]


スマートフォンと PC がネットワークで接続されたので、スマートフォンからデバッグ情報を取得したり、USB ケーブルを使わずにスマートフォンにプロジェクトをデプロイすることができるようになります。 
ただし、ネットワーク経由で PC からスマートフォンへデプロイすると、USB ケーブルを使うよりも遅くなります。ご注意ください。

### デプロイ＆デバッグを再びワイヤー接続で行う

デバッグとデプロイを再び USB ケーブルで行うには、以下のコマンドをコマンド ウィンドウに入力します。
 
     ADB USB

[REGION:lightbox]
[![](T_ADB_Detached.png)(w:500)](T_ADB_Detached.png)
[/REGION]
    
[REGION:caption]
クリックしてフルサイズで表示
[/REGION]













