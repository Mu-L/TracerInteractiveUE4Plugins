Availability: Public
Title: Google VR and Daydream Devices
Description: Which Google VR features are specific to Daydream devices.
Type: overview
Version: 4.17
Parent: Platforms/VR/GoogleVR
Tags: Daydream
Tags: Google VR
topic-image: GoogleVR_Topic_Image.png
Order: 2


[TOC]

[REGION:note]
Google has a provided a very detailed document that goes over everything you need to know to get the most out of Daydream. You can find the documents by going to the [Official Google Daydream Unreal](https://developers.google.com/vr/unreal/) help site.
[/REGION]

While Google VR can work for almost any Android based device, there are certain features that will only work with Daydream devices. In the following section, we will take a look at these features and what you have to do to use them in your projects.

## Downloading Google Daydream for Unreal Engine

Google Daydream now comes with the Unreal Engine binary that you can download from the Epic Games launcher. It is also available in the Unreal Engine source that you download and compile from Github.

*   [Epic Games Launcher](https://www.epicgames.com/unrealtournament/download)

*   [Epic Games Github](https://github.com/EpicGames)

## Android NDK 12b

To access the full functionality of Daydream, you will need to make sure that your Android Works NDK version has been updated to version 12b. For more information about installing Android Works, check out the link below.

*   [Setting up Android Works](Platforms/Mobile/Android/GettingStarted/1)

Once downloaded and installed, you will need to make sure that your Unreal Engine projects use the new NDK files by going to the **Android SDK** \> **SDKConfig** section and setting the SDK API level to **matchndk** and the NDK API Level to **android-24**.

[REGION:lightbox]
[![](GDaydream_New_NDK_00.png)(w:502)](GDaydream_New_NDK_00.png)
[/REGION]
[REGION:caption]
Click for full image.
[/REGION]

## Using Scanline Racing

**Scanline Racing** is a feature specific to Daydream devices that when enabled helps to reduce latency in your VR project. To enable Scanline Racing in your Google VR project for Daydream devices you will need to do the following.

1.  Open up your **Project Settings** and go to **Platforms** \> **Android**. Under the **APKPackaging** section, set the following:

    *   Minimum SDK Version: **24**
    
    *   Target SDK Version: **24**
    
    [REGION:lightbox]
    [![](GDaydream_Arm64_Support_00.png)(w:502)](GDaydream_Arm64_Support_00.png)
    [/REGION]
    [REGION:caption]
    Click for full image.
    [/REGION]

1.  Under the **Build** section change the following:

    *   Support armv7(aka armeabi-v7a): **Disabled**
    
    *   Support arm64 (aka arm64-v8a): **Enabled**
    
    [REGION:lightbox]
    [![](GDaydream_Build_Support.png)(w:502)](GDaydream_Build_Support.png)
    [/REGION]
    [REGION:caption]
    Click for full image.
    [/REGION]
    [REGION:note]
    Enabling this will add significant time to your first cook as the arm64 libraries need to be compiled.
    [/REGION]

1.  Then under the **Advanced APKPackaging** section and enable the following options.

    *   Configure GoogleVR Deployment Mode: **Daydream**
    
    *   Configure GoogleVR for sustained-performance mode (scanline racing): **Enabled**
    
    [REGION:lightbox]
    [![](GDaydream_Scanline_Racing_Support_00.png)(w:502)](GDaydream_Scanline_Racing_Support_00.png)
    [/REGION]
    [REGION:caption]
    Click for full image.
    [/REGION]

The next time you cook your Unreal Engine project and deploy it to your Daydream device, low-latency rendering will be enabled.

## Daydream Motion Controllers

One of the unique features of Daydream devices is their support of Motion Controllers. To see how you setup Motion Controllers for Daydream devices, check out the following How-To:

*   [Google Daydream Motion Controllers](Platforms/VR/GoogleVR/HowTo/MotionController)

## Training Streams

These Training Streams help to provide some additional resources on setting up your Motion Controllers and creating interactions in VR using Motion Controllers.

[OBJECT:VideoSeriesLink]
[PARAMLITERAL:title]
Live Training - Setting Up VR Motion Controllers
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
6ALnsdQnkVQ
[/PARAMLITERAL]
[PARAMLITERAL:playlist]
PLZlv_N0_O1gY7G589Z3I5-Dz7AdFSIWaG
[/PARAMLITERAL]
[PARAMLITERAL:duration]
1:05:05
[/PARAMLITERAL]
[PARAMLITERAL:active]
[/PARAMLITERAL]
[PARAMLITERAL:linktype]
block
[/PARAMLITERAL]
[PARAMLITERAL:thumbnail]
https://i.ytimg.com/vi/6ALnsdQnkVQ/maxresdefault.jpg
[/PARAMLITERAL]
[/OBJECT]

[OBJECT:VideoSeriesLink]
[PARAMLITERAL:title]
01 - Blueprint Creating Interactions in VR with Motion Controllers
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
eRNtgFo6iU0
[/PARAMLITERAL]
[PARAMLITERAL:playlist]
PLZlv_N0_O1gY7G589Z3I5-Dz7AdFSIWaG
[/PARAMLITERAL]
[PARAMLITERAL:duration]
59:50
[/PARAMLITERAL]
[PARAMLITERAL:active]
[/PARAMLITERAL]
[PARAMLITERAL:linktype]
block
[/PARAMLITERAL]
[PARAMLITERAL:thumbnail]
https://i.ytimg.com/vi/eRNtgFo6iU0/maxresdefault.jpg
[/PARAMLITERAL]
[/OBJECT]

[OBJECT:VideoSeriesLink]
[PARAMLITERAL:title]
02 - Blueprint Creating Interactions in VR with Motion Controllers
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
utOahIZgKgc
[/PARAMLITERAL]
[PARAMLITERAL:playlist]
PLZlv_N0_O1gY7G589Z3I5-Dz7AdFSIWaG
[/PARAMLITERAL]
[PARAMLITERAL:duration]
57:44
[/PARAMLITERAL]
[PARAMLITERAL:active]
[/PARAMLITERAL]
[PARAMLITERAL:linktype]
block
[/PARAMLITERAL]
[PARAMLITERAL:thumbnail]
https://i.ytimg.com/vi/utOahIZgKgc/maxresdefault.jpg
[/PARAMLITERAL]
[/OBJECT]

[OBJECT:VideoSeriesLink]
[PARAMLITERAL:title]
03 - Blueprint Creating Interactions in VR with Motion Controllers
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
fcmRGkpWefY
[/PARAMLITERAL]
[PARAMLITERAL:playlist]
PLZlv_N0_O1gY7G589Z3I5-Dz7AdFSIWaG
[/PARAMLITERAL]
[PARAMLITERAL:duration]
48:20
[/PARAMLITERAL]
[PARAMLITERAL:active]
[/PARAMLITERAL]
[PARAMLITERAL:linktype]
block
[/PARAMLITERAL]
[PARAMLITERAL:thumbnail]
https://i.ytimg.com/vi/fcmRGkpWefY/maxresdefault.jpg
[/PARAMLITERAL]
[/OBJECT]
