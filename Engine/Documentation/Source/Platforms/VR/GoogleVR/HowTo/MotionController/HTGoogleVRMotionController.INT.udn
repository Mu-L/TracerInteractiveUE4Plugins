Availability:Public
Crumbs:%ROOT%, Platforms
Title:Set Up Motion Controller for Google Daydream VR
Description: Setting up Google Daydream VR motion controller to work with Unreal Engine.
Type:how-to
SkillLevel:Beginner
Version:4.17
Parent:Platforms/VR/GoogleVR/HowTo
Order:2
Tags:Basics
Tags:VR
topic-image:Platforms\VR\GoogleVR\HowTo\HT_GoogleVR_Camera_Setup_Topic_Image.png
prereq:Platforms\VR\GoogleVR\QuickStart
prereq:Platforms\VR\GoogleVR\HowTo\CameraSetup

The Google Daydream Motion Controller allows you to interact with your Unreal Engine project like never before by enabling users to pick up and interact with objects like they would in the real world.  In the following How-To, we will take a look at how you can set up your Unreal Engine projects to work with the Google Daydream Motion Controller.

[region:note]
This How-To will utilize the Pawn the that was created in the [Set Up Cameras for GoogleVR How-To](Platforms\VR\GoogleVR\HowTo\CameraSetup). If you have not completed this How-To it is highly suggested you do before continuing.
[/region]

[region:note]
Motion Controllers will work only with devices that support the Google Daydream SDK.  
[/region]

## Steps

Below you will find information about how to add the ability for your player Pawn to use the Google Daydream Motion Controller.

1. Once the Editor has loaded, from the **Main Toolbar**, open the **Edit** tab and select the **Plugins** menu item. 

    ![](EditPlugins.png)

1. In the **Plugins** menu, make sure that the **Google VR Motion Controller** plugin is enabled.

    ![](GoogleVRMotionControllerPlugin.png)

1. Open up the player pawn you want to add Motion Controller support to. In this example, our pawn is called **GoogleVR_Pawn_MotionController**. Then in the **Components** tab, click on the **Add Component** button and search for **GoogleVRMotionController**.

    ![](HTGoogleVR_MC_00.png)

1. Drag the newly added **GoogleVRMotionController** on top of the existing **VRCameraRoot** so that it is a child component like the **VRCamera**.

    ![](HTGoogleVR_MC_01.png)

    [region:note]
    By default, the GoogleVR Motion Controller Component's **Location** should be set to (0, 0, 0) when added to your Pawn. If for some reason this is not the case, make sure to set the location to (0, 0, 0).
    [/region]

1. Set the **Motion Source** property of the **MotionControllerComponent** inside of the **GoogleVRMotionControllerComponent** to **AnyHand**.

    [region:note]
    Prior to Unreal 4.21.0, 3DOF controller support with Daydream apps was automatic. Beginning in 4.21.0 Unreal added support for Daydream 6DOF dual controllers. Application developers must now set **Motion Source** to **AnyHand**.
    [/region]
	
	[REGION:lightbox]
    [![](GoogleVRMotionControllerAnyHand.png)(w:660)](GoogleVRMotionControllerAnyHand.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

1. Compile and save the Blueprint and then drag the **GoogleVR_Pawn_MotionController** Pawn from the Content Browser to the Level.

    [REGION:lightbox]
    [![](HTGoogleVR_MC_03.png)(w:660)](HTGoogleVR_MC_03.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

1. Select the newly added Player Pawn and in the **Details** panel, make sure to set the **Auto Possess Player** to **Player 0** so that we will use this Pawn when the Level is running.

    ![](HTGoogleVR_MC_02.png)

1. Finally, press the **Launch** button to deploy and run this Level on your Google Daydream-enabled smartphone.

    ![](Platforms\VR\GearVR\HowTo\MotionController\HTGearVR_MC_04.png)

## End Result

When your project launches, put your phone in your GoogleVR headset and pick up your GoogleVR Daydream Motion Controller. Now when you move the Motion Controller around in the real world, you should see that movement replicated in your Unreal Engine project like in the following video.

[OBJECT:EmbeddedVideo]
    [PARAMLITERAL:videoid]
    7728npwW1fQ
    [/PARAMLITERAL]
    [PARAMLITERAL:width]
    100
    [/PARAMLITERAL]
    [PARAMLITERAL:height]
    56.25
    [/PARAMLITERAL]
    [PARAMLITERAL:units]
    %
    [/PARAMLITERAL]
    [PARAMLITERAL:type]
    simple
    [/PARAMLITERAL]
[/OBJECT]

[region:note]
If the GoogleVR Motion Controller mesh seems to be in the wrong location, hold the Motion Controller out in front of you and then press and hold the **Home** button to re-calibrate the Motion Controller position.
[/region]

## Unreal Engine Project Downloads

Below, you will find a link to where you can download the Unreal Engine project that was used to create this example.

* [**GoogleVR Motion Controller Example Project**](https://epicgames.box.com/s/ya3fk0zs57ur49npm21ligcgxcve1g6j)


