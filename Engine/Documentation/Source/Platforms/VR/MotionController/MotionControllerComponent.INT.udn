Availability: Public
Crumbs: %ROOT%
Title: Motion Controller Component Setup
Description: Information on how to setup Motion Controllers for VR interaction.
Type: Overview
SkillLevel:Beginner
Version:4.17
parent:Platforms/VR
Order: 2
Tags: VR

[TOC(start:2)]

No matter which Virtual Reality platform you are developing for, adding support for Motion Controllers can add a level of immersion and interaction that is just not possible to achieve with a controller or mouse and keyboard. In the following How - To we will take a look at how to add Motion Controller support to the VR Platforms that support it. 

## Supported Platforms 

The Motion Controller component that is found in the Components tab will work on the following VR platforms.

* Oculus VR
* Steam VR
* Gear VR
* Playstation VR

If you do not see the platform you are developing for listed above, make sure to check that platform's documentation for how to go about setting use of Motion Controllers. 

## Motion Controller Setup

In the following section we will take a look at how to add and setup the components that are needed for Motion Controllers to work.

[region:note]
This How - To has been written assuming that you have setup your Pawn to work with the VR Head Mounted Display (HMD) that you are developing for. If you are not sure how to do this, check please check out the getting [started guide](Platforms/VR) for the VR Head Mounted Display (HMD) you are developing for. 
[/region]

1. First, inside the  **Content Browser** locate and open up your **Player Pawn** Blueprint.

    [REGION:lightbox]
    [![](Open_VR_Pawn.png)(w:427)](Open_VR_Pawn.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

1.  In the **Components** section click on the **Add Component** button to expose the components that can be added to this Blueprint. 

    [REGION:lightbox]
    [![](Find_Components.png)(w:435)](Find_Components.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

1. Input **Motion** in the search box and then click on the **Motion Controller** component to add it to the components list, giving it a name of **MC_Left**..

	![](Add_MC_Component.png)

1. Select the newly added Motion Controller component and over in the **Details** panel under the **Motion Controller** section make sure the **Hand** is set to **Left**.

    [REGION:lightbox]
    [![](Setting_Up_Components.png)(w:787)](Setting_Up_Components.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

1. Next, select the **Motion Controller Component** in the **Components panel** and click the **Add Component** button and then search for and add a **Static Mesh Component**, calling it **SM_Left**. 

	![](Add_SM_To_MC.png)

	[region:note]
	Make sure that the Static Mesh Component is a child of the Motion Controller Component otherwise the Static Mesh will not follow along when the Motion Controller is moved.
	[/region]

1. Now, in the Details panel of the Static Mesh Component under the **Static Mesh** section input a Static Mesh to represent what the Motion Controllers will look like. For this example we are using a simple box, but feel free to use any Static Mesh you have available.

    [REGION:lightbox]
    [![](SM_MC_Static_Mesh.png)(w:787)](SM_MC_Static_Mesh.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

1. Now, duplicate the entire Left hand Motion Controller setup and re-place the word **Left** with **Right**. Also make sure to change the which hand this Motion Controller is used for by going to the Motion Controller component and then changing **Hand** from Left to **Right**.

    [REGION:lightbox]
    [![](Finshed_MC_Setup.png)(w:787)](Finshed_MC_Setup.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

1. Compile and save your Pawn Blueprint, make sure it is placed in your test level and then launch your project. When you put on your HMD and pick up your Motion Controlers you should be able to now do what is shown in the following video.

	[OBJECT:EmbeddedVideo]
		[PARAMLITERAL:videoid]
		CD6-Mje1y6g
		[/PARAMLITERAL]
		[PARAMLITERAL:width]
		100
		[/PARAMLITERAL]
		[PARAMLITERAL:height]
		56.25
		[/PARAMLITERAL]
		[PARAMLITERAL:units]
		%
		[/PARAMLITERAL]
		[PARAMLITERAL:type]
		simple
		[/PARAMLITERAL]
	[/OBJECT]


## Working with Motion Controllers

The Motion Controller-specific input controls are available in the Palette panel in the Blueprint Editor.

[region:tip]
If you search inside of the Blueprint Editor **Palette** using **MotionController** as the search term you will see all the available buttons and controls the Motion Controllers have available.
[/region]

![](Working_With_MC.png)

Make sure to note that there are seperate inputs for both the Left and Right Motion Controllers. The captial **L** or **R** next to the name of the input node signfies if this is for the left or right Motion Controller.

![](MC_Left_Right.png)

[COMMENT:none]

## Using Motion Controllers

In the following section, we will set the Motion Controllers up so that when you press the trigger button on the **Right-Handed** Motion Controller, a Blueprint containing a Static Mesh is spawned into the world, while pressing the trigger button on the **Left-Handed** Motion Controller will remove the mesh from the world. 

1. In the Content Browser, create a new Blueprint named **BP_Sphere** and open it up by double-clicking on it.  

1. Navigate to the **Viewport** tab and add a new **Static Mesh Component**.

    ![](Add_SM_Component.png)

1. Move the Static Mesh Component on top of the **Default Screen Root** and set the Static Mesh used to the **ArcadeEditorSphere** and compile and save your Blueprint.

    [OBJECT:EmbeddedVideo]
        [PARAMLITERAL:width]
        640
        [/PARAMLITERAL]
        [PARAMLITERAL:height]
        360
        [/PARAMLITERAL]
        [PARAMLITERAL:videoid]
        PszzV_I0xso
        [/PARAMLITERAL]
    [/OBJECT]

    [region:note]
    If you can not find the **ArcadeEditorSphere** make sure that you have the **Engine Content** folder enabled by going to **View Options** and then clicking on the **Engine Content** folder to enable it showing up in the Content Browser.
    [/region]

1. Close the BP_Sphere Blueprint and open up your **Pawn** Blueprint.

1. In the my Blueprint panel, navigate to the **Event Graph** tab and create a new **Actor** variable with the name **Objects** with its **Variable Type** to array.
    
    ![](Create_New_Var.png)

1. This Blueprint is going to allow us to add and remove a specified object from the world when the trigger button on the Motion Controllers is pressed. To do this, inside of the Event Graph add and connect the following Blueprint nodes together. When completed you should have something that looks like the following image.

    [REGION:lightbox]
    [![](Add_Objects_Setup.png)(w:459)](Add_Objects_Setup.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

    [region:note]
        The **Spawn Offset** was added to ensure that the objects could be seen while being placed in this example. The offset is not required and can be omitted by connecting the **Return Value** from the **GetActorTransform** node to the **Spawn Transform** input on the **SpawnActor** node.
        [REGION:lightbox]
        [![](Add_Objects_Setup_Alt.png)(w:367)](Add_Objects_Setup_Alt.png)
        [/REGION]
        [REGION:caption]
        Click for full image.
        [/REGION]    
    [/region]

1. Select the **Spawn Actor** node and assign the **BP_Sphere** Blueprint that was created in step one to the Class input.

    ![](Setting_SpawnActor_Up.png)

1. This section of the Blueprint will allow us to remove the objects that were placed in the world. To add this functionality, add and connect the following Blueprint nodes together. When completed you should have something that looks like the following image.

    [REGION:lightbox]
    [![](Remove_Objects_Setup.png)(w:459)](Remove_Objects_Setup.png)
    [/REGION]

    [REGION:caption]
    Click for full image.
    [/REGION]

    [region:note]
    The keyboard input keys were placed in the graph for quick testing. You do not have to include those inputs for this to work with Motion Controllers.
    [/region]

1. **Compile** and **Save** the changes to your Pawn Blueprint and then press the **Play** button. 
    Once the level has started, try adding objects to the world by pressing the **K** key on the keyboard or by pressing the Right Trigger on the Right Handed Motion Controller. 
    To remove objects from the world, press the **T** key on the keyboard or press the **Left** trigger on the Left Handed Motion Controller which you can see demonstrated in the video below.

    [OBJECT:EmbeddedVideo]
        [PARAMLITERAL:width]
        640
        [/PARAMLITERAL]
        [PARAMLITERAL:height]
        360
        [/PARAMLITERAL]
        [PARAMLITERAL:videoid]
        VXUowSUKT9I
        [/PARAMLITERAL]
    [/OBJECT]

[/COMMENT]

## Training Streams

[REGION:topics third]
[OBJECT:TopicCompactVideo]
    [PARAMLITERAL:title]
    Setting Up Motion Controllers
    [/PARAMLITERAL]
    [PARAMLITERAL:videoid]
    6ALnsdQnkVQ
    [/PARAMLITERAL]
[/OBJECT]
[OBJECT:TopicCompactVideo]
    [PARAMLITERAL:title]
    Creating Interactions in VR With Motion Controllers Part 1
    [/PARAMLITERAL]
    [PARAMLITERAL:videoid]
    eRNtgFo6iU0
    [/PARAMLITERAL]
[/OBJECT]
[OBJECT:TopicCompactVideo]
    [PARAMLITERAL:title]
        Creating Interactions in VR With Motion Controllers Part 2
    [/PARAMLITERAL]
    [PARAMLITERAL:videoid]
    utOahIZgKgc
    [/PARAMLITERAL]
[/OBJECT]
[/REGION]
