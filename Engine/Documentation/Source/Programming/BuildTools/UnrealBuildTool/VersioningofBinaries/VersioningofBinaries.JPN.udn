INTSourceChangelist:6142688
Availability: Public
Title: バイナリのバージョン管理
Description: Unreal Engine の BuildID システムのリファレンス。古いDLLから発生する潜在的なエラーを排除します。 
Type: reference
Version: 4.22
Parent: Programming/BuildTools/UnrealBuildTool
Tags: Versioning
Order: 5
Related: Programming/UnrealArchitecture/VersioningAssetsAndPackages


[TOC (start:2 end:3)]

Unreal Engine 4 は、**ビルド ID** システムを介して古い「DLL」から発生する潜在的なエラーを排除します。 このシステムにより、エンジンは実行可能ファイル自体と同時にコンパイルされた「DLL」のみをロードするため、クラッシュやライブラリのリンクの失敗だけでなく、古いバイナリから発生する可能性のある追跡困難なバグも防止できます。 通常、ビルド ID はコンパイル時に自動的に生成され、エンジンがビルドされるたびに新しい一意の値が生成されますが、手動で指定した値で上書きすることも可能です。

### 自動生成されたビルド ID

ビルド時に、少なくとも 1 つのコンパイル済み「DLL」を含むすべての出力ディレクトリは、「UE4Editor.modules」などの「.modules」拡張子を持つ「JSON」ファイルを受け取ります。 このファイルには、ディレクトリ内の各モジュールとそのモジュールに関連付けられた「DLL」、ビルド自体の GUID が一覧表示されます。 エンジンがコンパイルされるたびに新しい GUID が生成されるため、エンジンは実行可能ファイルと同じセッションでコンパイルされていない「DLL」をただちに認識して、無視します。 ソース管理を使用してバイナリ ビルドを管理する場合は、ビルド ID が一致するように、実行可能ファイル、すべての「DLL」、それらに関連付けられた「.modules」ファイルをまとめてチェック インする必要があります。

### 手動指定したビルド ID

ビルド ID を特定の値に強制することもできます。 「Build/Build.version」ファイルに「BuildId」行を追加することでこれが可能ですが、互換性のないモジュールの使用を防ぐチェックが行われなくなるのでお勧めできません。 手動で強制したビルド ID を複数のプロジェクト間で共有される可能性があるプラグインと一緒に使用する場合は、古いコードの実行が特に簡単です。
