INTSourceChangelist:6495804
Availability: Public
Title: 部署引擎
Description: 学习如何为一个团队部署UE4。
Type: reference
Version: 4.20
Parent: Programming
Order: 7
Related: Programming/BuildTools/AutomationTool/BuildGraph
tags:deployment


[TOC]

[REGION:note]
我们希望此处介绍的部署方法涵盖大多数用例，但部署方法可能会因团队的工作流程、硬件质量和数量以及本指南所涉范围之外的因素而异。
[/REGION]

在每个项目开始时，团队需要决定如何将虚幻引擎4（UE4）部署到为其游戏做出贡献的开发人员和创意人员当中。你可以 **使用安装的构建版**、**将二进制文件提交到Perforce** 或使用 **UnrealGameSync (UGS)** 来部署引擎。 

每种方法的优点和缺点如下。

## 使用安装的构建版

**优点**  

*   引擎以预编译形式分发，因此编译时间很快。

*   使用从Epic Games启动程序下载的现成二进制文件很容易上手。 

*   应用补丁和升级很容易。

**缺点**

*   如果引擎发生任何更改，需将自定义构建版推送到团队。

*   无法从Epic启动程序下载自定义许可协议所涵盖的游戏机平台。

*   如果在不使用启动程序的情况下单独分发引擎，则必须自行决定如何分发和安装引擎。 

*   并非所有构建选项都可用（已安装构建版不支持完全调试配置、客户端/服务器/程序目标或可能希望在项目中启用的其他引擎自定义）。

*   默认情况下，目标平台可用的调试信息是有限的。

要了解有关使用此部署方法的更多信息，请参阅此 [参考](Programming/Deployment/UsinganInstalledBuild) 指南。

## 将二进制文件提交到Perforce

**优点**

*   只需要一个工具（Perforce）就可同步内容和编辑器。

*   质量保证（QA）部门可在将构建版推送给内容创建者之前对其进行审核。

**缺点**

*   每次更改二进制文件时，Perforce会产生很高的流量，从而导致同步时间变慢。即使不需要更改二进制文件的开发人员执行同步操作时也会较慢。

*   开发人员容易出错，因为本地构建的二进制文件和从Perforce同步的二进制文件不匹配。

*   程序员和内容创建者对更改进行QA签核会严重影响迭代次数。

有关更多信息，请参阅此 [参考](Programming/Deployment/SubmitBinariestoPerforce)。

## UnrealGameSync (UGS)

**优点**

*   内容创建者和程序员之间可快速迭代。

*   美工师可以从存储在其他分支上的zip文件同步预编译的二进制文件，而不会干扰开发流。

*   程序员只是同步源代码并自动更新本地版本数据，因此可正确地管理要修改内容的版本。

*   小型团队的美工师可以使用类似于程序员的工作流，而无需使用Visual Studio。

*   提供大量有用的协作功能和实用程序，包括构建系统状态和警报、对提交的更改进行评论、安排本地夜间构建、定制构建过程、有选择地同步Perforce流送等。

*   在Epic中广泛使用，更新和改进较为频繁。

**缺点**

*   需要执行基础结构设置才能使所有功能正常工作（例如，用于构建元数据的数据库、用于预编译二进制文件的构建系统集成等）。

*   开发人员提交的更改不经过QA人员的审核，不良更改可能会破坏数据（这在实践中对Epic的团队而言并不是问题）。
*   仅支持Windows。

要了解UGS，请参阅本 [概述](Programming/Deployment/UnrealGameSync) 指南。

## 从Epic开发流同步

如果项目需要使用Epic中的最新代码，你可以直接从Epic的任何流中同步代码。

[REGION:note]
要了解有关从流中进行同步的更多信息，请参阅 [Perforce与虚幻引擎的配合使用](GettingStarted/DownloadingUnrealEngine/Perforce)。
[/REGION]
