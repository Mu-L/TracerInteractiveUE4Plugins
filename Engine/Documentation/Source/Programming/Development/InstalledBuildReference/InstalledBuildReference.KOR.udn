INTSourceChangelist:6495804
Availability: Docs
Title: Installed Build 레퍼런스
Crumbs: %ROOT%, Programming, Programming/Development
Description:Installed Build 프로세스 설명 및 Installed Build 스크립트 작성법에 대한 개요입니다.
version: 4.13
parent:Programming/Development
type:Reference
related:Programming/BuildTools/AutomationTool/BuildGraph
related:Programming/UnrealBuildSystem
related:Programming/Development/BuildConfigurations
tags:Programming
tags: BuildGraph

[TOC (start:1 end:5)]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Programming/Development/InstalledBuildReference%](installedbuild_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/reference_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Programming/Development/InstalledBuildReference:title%
	[/PARAM]
	[PARAM:description]
		%Programming/Development/InstalledBuildReference:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Programming/Development/InstalledBuildReference]
	[/PARAM]
[/OBJECT]
[/VAR]

다양한 하드웨어 종류와 운영체제에 맞는 효과적인 빌드 솔루션을 제공하는 것은 개발자의 영원한 숙제입니다.
**Installed Build** 는 팀원의 빠른 엔진 구성 및 사용을 위해 재배포시킬 수 있는 전체 기능이 포함된 엔진 빌드입니다.
기술적인 관점에서 보면 Installed Build 에는 언리얼 에디터를 미리 컴파일한 바이너리와, development 및 
shipping 환경설정 내 각 대상 플랫폼에 대한 스태틱 라이브러리가 포함됩니다.

Installed Build 프로세스는 언리얼 엔진 4 (UE4) Installed Build 버전을 만드는 데 필요한 패키지와 툴을 자동 빌드합니다. 요약하면 
Installed Build 제작은 기본 대상 플랫폼 구성, 툴과 에디터를 포함한 UE4 컴파일, 테스트 실행, 
대상 플랫폼에 UE4 Installed Build 버전 디플로이 등의 프로세스로 이루어집니다.

## Installed Build 제작

Installed Builds 는 [](Programming/BuildTools/AutomationTool/BuildGraph) 스크립트 시스템에 Installed Build 스크립트를 사용해서 만들 수 있습니다. 스크립트 위치는 
`[UE4Root]/Engine/Build/InstalledBuild.xml` 입니다.

**Installed Build 생성 방법:**

1.	다음 명령에서 `[PLATFORM]` 부분을 Win64 또는 Mac 으로 대체하고 **AutomationTool** 을 호출하여 Installed Build Script 를 실행시킵니다. 빌드 환경설정은 [Installed Build 스크립트 옵션](#bookmark1) 으로도 가능합니다.

		BuildGraph -target="Make Installed Build [PLATFORM]" -script=Engine/Build/InstalledEngineBuild.xml -clean

1.	언리얼 엔진 디렉터리의 `LocalBuilds/Engine/` 폴더로 이동하여 생성된 Installed Build 를 확인합니다. 퍼블리싱 디렉터리를 다른 곳으로 지정했다면, 그 곳으로 이동합니다.

## Installed Build 스크립트 옵션

(#bookmark1)

`InstalledEngineBuild.xml` 스크립트는 모든 기본 옵션과 플랫폼이 켜진 Installed Build 를 만듭니다. 하지만 지정 옵션 세트를 통한 환경설정으로 
어느 플랫폼을 포함시킬지, 빌드 퍼블리싱은 어디로 할지 등을 지정할 수 있습니다. 빌드 프로세스 커스터마이징을 위한 옵션 목록은 
(빌드되는 노드 목록을 포함해서) 스크립트에 `-listonly` 옵션을 붙이는 것으로 확인할 수 있습니다.

가능한 옵션은 다음과 같습니다:


| 옵션 | 기본 | 설명 |
| ------ | ------- | ----------- |
| `-set:HostPlatformOnly=[true/false]` | false | 다른 플랫폼을 일일이 끄지 않아도 되도록 호스트 플랫폼에 대해서만 Installed Build 를 만드는 헬퍼 옵션입니다. |
| `-set:WithWin64=[true/false]` | true | Win64 대상 플랫폼을 포함합니다. |
| `-set:WithWin32=[true/false]` | true | Win32 대상 플랫폼을 포함합니다. |
| `-set:WithMac=[true/false]` | true |  Mac 대상 플랫폼을 포함합니다. |
| `-set:WithAndroid=[true/false]` | true | Android 대상 플랫폼을 포함합니다. |
| `-set:WithIOS=[true/false]` | true | iOS 대상 플랫폼을 포함합니다. [REGION:note]이 옵션을 켜려면 원격 빌드 구성된 Mac이 필요합니다.[/REGION] |
| `-set:WithTVOS=[true/false]` | true | tvOS 대상 플랫폼을 포함합니다. [REGION:note]이 옵션을 켜려면 원격 빌드 구성된 Mac이 필요합니다.[/REGION] |
| `-set:WithLinux=[true/false]` | true | Linux 대상 플랫폼을 포함합니다. |
| `-set:WithLumin=[true/false]` | true | Lumin 대상 플랫폼을 포함합니다. |
| `-set:WithHTML5=[true/false]` | true | HTML5 대상 플랫폼을 포함합니다. |
| `-set:WithPS4=[true/false]` | false | PS4 대상 플랫폼을 포함합니다. [REGION:note]이 옵션을 켜려면 PS4 SDK 가 필요합니다.[/REGION] |
| `-set:WithXboxOne=[true/false]` | false | XboxOne 대상 플랫폼을 포함합니다. [REGION:note]이 옵션을 켜려면 Xbox One SDK 가 필요합니다.[/REGION] |
| `-set:WithDDC=[true/false]` | true | 엔진 콘텐츠와 템플릿에 대한 독립형 파생 데이터 캐시(DDC)를 빌드합니다. [REGION:note]엔진과 템플릿 콘텐츠에 대한 독립형 [파생 데이터 캐시(DDC)](Engine/Basics/DerivedDataCache) 를 빌드하는 작업은 빌드의 매우 느린 부분중 하나가 될 수 있습니다. 독립형 DDC 가 필요치 않은 경우, 명령줄에 `-set:WithDDC=false` 를 붙여 이 단계를 건너뛸 수 있습니다.[/REGION] |
| `-set:WithFullDebugInfo=[true/false]` | false | 바이너리 에디터와 패키징된 어플리케이션 빌드에 대한 전체 디버그 정보를 생성합니다. |
| `-set:SignExecutables=[true/false]` | false | 빌드 프로세스의 일부분으로 실행파일 사이닝을 위한 머신을 구성해야 하는 경우 생성된 실행파일에 사이닝을 합니다. |
| `-set:AnalyticsTypeOverride=[ID]` | N/A | 전송할 애널리틱 이벤트 식별자입니다. |
| `-set:GameConfigurations=[Configurations]` | Development;Shipping | 패키징된 어플리케이션에 대한 구성을 지정합니다. |


### 부가 파일 포함

(각 모듈의 `build.cs` 파일에 설정된) RuntimeDependencies 은 자동 취합되어 Installed Build 에 포함시킬 파일을 결정합니다.
하지만 이런 식으로 포함시킬 수 없는 필수 파일이 몇 있는데, `[UE4Root]/Engine/Build/InstalledEngineFilters.xml` 에 정의됩니다. 
`InstalledEngineFilters` XML 파일에도 빌드에서 제외시켜야 하는 파일 패턴이 나열되어 있어, 어떤 파일 유형을 
벗겨내거나 사이닝할지 결정하고, 최종적으로 어떤 프로젝트에 대해 DDC 를 빌드할 것인지 결정합니다. Installed Build 에 포함시킬 파일이 더 있는 경우, `InstalledEngineFilters` XML 파일에서 
시작하면 좋습니다.