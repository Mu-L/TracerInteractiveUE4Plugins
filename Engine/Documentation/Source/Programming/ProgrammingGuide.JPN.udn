Availability:Public
Title:プログラミング ガイド
Crumbs: %ROOT%
Description:プログラミングに関する情報をみてみましょう
version:4.18
parent:%ROOT%
order:4
type:landing
topic-icon:%ROOT%/prog_icon.png
Topic-image:ProgrammingGuide_topic.png

UE4 には、開発のスピードを上げるために使用できるプログラミング用のツールセットが 2 種類あります。新しいゲームプレイ クラス、Slate および Canvas のユーザー インターフェース エレメント、編集機能は 
C++ で書くことができ、Visual Studio または Xcode でのコンパイル後に変更はすべてアンリアル エンジンに反映されます。ブループリント ビジュアル スクリプティング システムは、関数ブロックとプロパティ リファレンスをまとめて接続することで、
クラスをエディタ内で作成できるようにするパワフルなツールです。 

C++ クラスはブループリント クラスの基底として使用できます。そのため、プログラマーが基本的なゲームプレイ クラスを設定し、後でレベル デザイナがサブクラス化し繰り返し使用することができます。  

## はじめよう

%Programming/QuickStart:role%
%Programming/Introduction:role%

## 開発設定

[DIR(output:"role" parent:"Programming/Development" org:"hierarchy")]

## アンリアル エンジンのアーキテクチャ

開発言語が C++ でもブループリントでも、あるいはその両方でも、基盤となるアンリアルのアーキテクチャは一緒です。

[DIR(output:"role" parent:"Programming/UnrealArchitecture/Reference" org:"hierarchy" end:"1")]

## ゲームプレイ アーキテクチャ

[DIR(output:"role" parent:"Programming/UnrealArchitecture" org:"hierarchy" end:"1")]

## ゲームプレイ ガイド

[DIR(output:"fancy" parent:"Programming/Tutorials" org:"hierarchy" end:"1" skilllevel:"Beginner")]
[DIR(output:"fancy" parent:"Programming/Tutorials" org:"hierarchy" end:"1" skilllevel:"Intermediate")]
[DIR(output:"fancy" parent:"Programming/Tutorials" org:"hierarchy" end:"1" skilllevel:"Advanced")]

## アンリアル エンジン C++ API のリファレンス

[OBJECT:Role]
	[PARAM:icon]
	![](%ROOT%/ue4_icon.png)
	[/PARAM]
	[PARAM:title]
		アンリアル エンジン C++ API のリファレンス
	[/PARAM]
	[PARAM:description]
	アンリアル エンジン C++ ソースコードの API プログラミングのリファレンス
	[/PARAM]
	[PARAM:path]
		[RELATIVE:API]
	[/PARAM]
[/OBJECT]

## システムガイド

%Programming/Animation/AnimNodes:role%
%Programming/Automation:role%
%Engine/Blueprints/TechnicalGuide:role%
%Programming/Online:role%
%Programming/Online/Steam:role%
%Programming/Rendering:role%
%Programming/Slate:role%
%Programming/UnrealBuildSystem:role%


## アセット処理リファレンス ガイド

[REGION:buttonlist]
%Programming/Assets/AsyncLoading:role%
%Programming/Assets/Registry:role%
[/REGION]