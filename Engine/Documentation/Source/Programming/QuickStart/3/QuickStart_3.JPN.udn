INTSourceChangelist:2725396
Availability:Public
Title:3 - C++ コードの記述とコンパイル
Crumbs:%ROOT%, Programming, Programming/QuickStart
Description:アンリアル エンジンで C++ クラスを記述しコンパイルする
SkillLevel:Beginner
Version:4.9

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[前のステップ](Programming\QuickStart\2 "%Programming\QuickStart\2:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[クイックスタート ホーム](Programming\QuickStart)
	[/PARAM]
	[PARAM:next]
		[次のステップ](Programming\QuickStart\4 "%Programming\QuickStart\4:title%")
	[/PARAM]
[/OBJECT]
[/VAR]



1. **Visual Studio** では、**[Solution Explorer]** ペインを使って、新規に作成した C++ ファイルを検索します。このサンプルでは、ファイル名を「FloatingActor.cpp」と「FloatingActor.h」にして、「QuickStart」プロジェクトに保存します。

	[![](SolutionExplorer_Files.png)](SolutionExplorer_Files.png)

	[REGION:note] コードを記述していきます。このチュートリアルで使用するすべてのコードは、ページの説明を完了した時点の現在のステートで、ページの下に表示されます。[/REGION]

1. FloatingActor.h に対して、ファイルの終わりの右中括弧とセミコロンの直前に、以下のコードを追加します。

		float RunningTime;

1. FloatingActor.cpp へ切り替えて、以下のコードを **AFloatingActor::Tick** の右中括弧の直前に追加します。

		FVector NewLocation = GetActorLocation();
		float DeltaHeight = (FMath::Sin(RunningTime + DeltaTime) - FMath::Sin(RunningTime));
		NewLocation.Z += DeltaHeight * 20.0f;       //Scale our height by a factor of 20
		RunningTime += DeltaTime;
		SetActorLocation(NewLocation);

	[REGION:note] 記述したこのコードにより、時間経過に伴う移動の追跡のために作成した _RunningTime_ 変数を使って、**FloatingActors** が現れたり消えたりします。 [/REGION] 

%Globals:OSSelect%

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		*	コーディングが終わったので、**Solution Browser** のプロジェクトを右クリックして **Build** コマンドを選択するか、 **アンリアル エディタ** の**[Compile]** ボタンをクリックします。正常にコンパイルされたら、 **アンリアル エディタ** が自動的に変更をロードします。

			[![](CompileFromVS.png)](CompileFromVS.png)

			_** Visual Studio** から実行する。_

			[![](CompileFromEditor.png)](CompileFromEditor.png)

			_**アンリアル エディタ** からコンパイルする。_
	[/PARAM]
[/OBJECT]

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		[REGION:tip]
		Xcode でビルド時は、コンパイル対象はゲームプロジェクトのみで、エディタはコンパイルしません。
		[/REGION]
		* コーディングが終わったので、XCode のデバッグ コンフィギュレーションを使ってプロジェクトをコンパイルすることができます。**[Product] > [Build]** オプションをクリックします。

		![](ProjectBuild_mac.png)

			_XCode のデバッグ コンフィギュレーションを使ってコンパイルする。_

		* XCode のデバッグ コンフィギュレーションを使ってプロジェクトをコンパイルすることができます。**[Product] > [Build For] > [Profiling]** の順にオプションをクリックします。

			![](ProjectBuildProfile_mac.png)

			_XCode の開発コンフィギュレーションを使ってコンパイルする。_

			[![](CompileFromEditor.png)](CompileFromEditor.png)

			_**アンリアル エディタ** からコンパイルする。_

		[REGION:note]
		バイナリ エディタを実行する場合、**Uncooked** コンフィギュレーションでプロジェクトをリビルドした場合、-game フラグを付け加えることが重要です。**Debug** コンフィギュレーションでプロジェクトをリビルドした場合は、-debug フラグを付けることが重要です。
		[/REGION]
	[/PARAM]
[/OBJECT]

コードに基づいて **アンリアル エディタ** でオブジェクトを作成する用意ができました。参考までに、このページで使用したコードはすべて以下に含まれています。

[OBJECT:Section]
    [PARAMLITERAL:id]
    code
    [/PARAMLITERAL]
    [PARAM:heading]
    Finished Code
    [/PARAM]
    [PARAM:content]
		**FloatingActor.h**
			// Copyright 1998-2018 Epic Games, Inc.All Rights Reserved.

			#pragma once

			#include "GameFramework/Actor.h"
			#include "FloatingActor.generated.h"

			UCLASS()
			class QUICKSTART_API AFloatingActor : public AActor
			{
				GENERATED_BODY()

			public:
				// Sets default values for this actor's properties
				AFloatingActor();

				// Called when the game starts or when spawned
				virtual void BeginPlay() override;

				// Called every frame
				virtual void Tick( float DeltaSeconds ) override;

				float RunningTime;

			};

		**FloatingActor.cpp**
			// Copyright 1998-2018 Epic Games, Inc.All Rights Reserved.

			#include "QuickStart.h"
			#include "FloatingActor.h"

			// Sets default values
			AFloatingActor::AFloatingActor()
			{
 				// Set this actor to call Tick() every frame.You can turn this off to improve performance if you don't need it.
				PrimaryActorTick.bCanEverTick = true;

			}

			// Called when the game starts or when spawned
			void AFloatingActor::BeginPlay()
			{
				Super::BeginPlay();

			}

			// Called every frame
			void AFloatingActor::Tick( float DeltaTime )
			{
				Super::Tick( DeltaTime );

				FVector NewLocation = GetActorLocation();
				float DeltaHeight = (FMath::Sin(RunningTime + DeltaTime) - FMath::Sin(RunningTime));
				NewLocation.Z += DeltaHeight * 20.0f;       //Scale our height by a factor of 20
				RunningTime += DeltaTime;
				SetActorLocation(NewLocation);
			}

    [/PARAM]
[/OBJECT]


