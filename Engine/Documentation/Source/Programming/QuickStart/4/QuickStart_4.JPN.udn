INTSourceChangelist:2725415
Availability:Public
Title:4 - コードをテストする
Crumbs:%ROOT%, Programming, Programming/QuickStart
Description:テスト オブジェクトをレベルに作成する
SkillLevel:Beginner
Version:4.9

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[前のステップ](Programming\QuickStart\3 "%Programming\QuickStart\3:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[クイックスタートのホーム](Programming)
	[/PARAM]
	[PARAM:next]
		[次のステップ](Programming\QuickStart\5 "%Programming\QuickStart\5:title%")
	[/PARAM]
[/OBJECT]
[/VAR]



1. **アンリアル エディタ** の **コンテンツ ブラウザ** から「C++ Classes」という名前のフォルダを展開します。そのフォルダ内の「QuickStart」フォルダの中に、**Actor** クラスの **FloatingActor** が入っています。

	[![](ClassInContentBrowser.png)](ClassInContentBrowser.png)

1. **FloatingActor** クラスを直接 **[レベル エディタ]** ウィンドウへドラッグすると、ワールド内に **MyActor** のインスタンスを作成することができます。**レベル エディタ** と **ワールド アウトライナー** で「FloatingActor1」と名前が付いています。それを選択します。**コンポーネント** やその他のプロパティが **[Details (詳細)] パネル** で見えるようになります。

	[![](WorldOutliner.png)](WorldOutliner.png)

1. **FloatingActor** をゲーム内で見えるようにする必要があります。選択したまま、 **[Details (詳細)] パネル** の **[Add Component (コンポーネントを追加)]** をクリックし、 **[Cone]** を選んで簡単な形を与えます。

	[![](AddStaticMesh.png)](AddStaticMesh.png)

1. カスタマイズした **アクタ** の準備ができたので、どこか目立つ場所に移動させましょう。マウスの左ボタンで選択してドラッグしてワールド内を移動させたり、または手動で移動させることができます。手動で移動させるには、**レベル エディタ** または **ワールド アウトライナー** で対象を選択して、**[Details (詳細)] パネル** で [FloatingActor1 (Instance)] を選択します。FloatingActor1 の **[Transform (トランスフォーム)]** の **[Location (位置)]** フィールドを直接編集できるようになります。X を -200 に、そして Z を 200 に設定してみましょう。この設定により、"FloatingActor1" はシーンの中のテーブルの右側に配置されます。

	[![](SetActorLocation.png)](SetActorLocation.png)

1. **[Play (再生)]** ボタンを押して、コーンの浮き沈みを見てみましょう。

	[![](MovingCone.png)](MovingCone.png)

[OBJECT:Section]
    [PARAMLITERAL:id]
    code
    [/PARAMLITERAL]
    [PARAM:heading]
    完成コード
    [/PARAM]
    [PARAM:content]
		**FloatingActor.h**
			// Copyright 1998-2018 Epic Games, Inc.All Rights Reserved.

			#pragma once

			#include "GameFramework/Actor.h"
			#include "FloatingActor.generated.h"

			UCLASS()
			class QUICKSTART_API AFloatingActor : public AActor
			{
				GENERATED_BODY()

			public:
				// Sets default values for this actor's properties
				AFloatingActor();

				// Called when the game starts or when spawned
				virtual void BeginPlay() override;

				// Called every frame
				virtual void Tick( float DeltaSeconds ) override;

				float RunningTime;
			};

		**FloatingActor.cpp**
			// Copyright 1998-2018 Epic Games, Inc.All Rights Reserved.

			#include "QuickStart.h"
			#include "FloatingActor.h"

			// Sets default values
			AFloatingActor::AFloatingActor()
			{
 				// Set this actor to call Tick() every frame.You can turn this off to improve performance if you don't need it.
				PrimaryActorTick.bCanEverTick = true;

			}

			// Called when the game starts or when spawned
			void AFloatingActor::BeginPlay()
			{
				Super::BeginPlay();

			}

			// Called every frame
			void AFloatingActor::Tick( float DeltaTime )
			{
				Super::Tick( DeltaTime );

				FVector NewLocation = GetActorLocation();
				float DeltaHeight = (FMath::Sin(RunningTime + DeltaTime) - FMath::Sin(RunningTime));
				NewLocation.Z += DeltaHeight * 20.0f;       //Scale our height by a factor of 20
				RunningTime += DeltaTime;
				SetActorLocation(NewLocation);
			}

    [/PARAM]
[/OBJECT]


