Availability: docs
Title:1. Place Cameras in the World
Crumbs:%ROOT%, Programming, Programming/Tutorials, Programming/Tutorials/AutoCamera
Description:Setting up a world with multiple cameras
version: 4.9

## No longer needed as page has been combined.

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[](Programming\Tutorials\AutoCamera)
	[/PARAM]
	[PARAM:next]
		[Next Step](Programming\Tutorials\AutoCamera\2 "%Programming\Tutorials\AutoCamera\2:title%")
	[/PARAM]
[/OBJECT]
[/VAR]



[REGION:tip]If you are new to **Unreal Engine 4** (UE4), you might want to read our [%Programming\QuickStart:title% tutorial](Programming\QuickStart) first. For this tutorial, we will assume you are familiar with creating a project, adding C++ code to it, compiling your code, and adding **Components** to **Actors** in UE4[/REGION]

1. We will begin by creating a new Basic Code project, with starter content, named "HowTo_AutoCamera". The first thing we'll need to do is create two cameras in our world. Since there are multiple ways to set up cameras, we'll go with the two most common ways here. For our first camera, go to the **Modes** tab in the **Placement Browser** and click **Place**, or press **Shift+1**. In the **All Classes** section, you'll find a **Camera** actor. Drag this into the **Level Editor** and position it so that it has a good view of our scene.

	![](PlaceCameraActor.png)

	When this is done, the **Level Editor** window will have a picture-in-picture view of what our new **Camera Actor** can see as long as we have the **Camera Actor** selected.

	![](CameraOnePlacement.png)

1. For our second camera, we'll use a method that goes a little more in-depth and gives us a little more control. Start by clicking on **Basic** in the **Mode** tab in the **Placement Browser** and dragging a **Cube** into the **Level Editor** window.

	![](PlaceCube.png)

	[REGION:note]We can use almost any actor class for this step. The MyActor class we created in the QuickStart tutorial might be interesting to substitute for the Cube.[/REGION]

1. When our **Cube** actor is placed, add a **CameraComponent** by clicking the **+ Add Component** button in the **Details** panel for the **Cube**. You can now set the position and rotation of that **CameraComponent** to give us a different view of the scene than the **CameraActor** we placed earlier.

	![](CameraTwoPlacement.png)

1. We should customize our **CameraComponent** by turning on **Constrain Aspect Ratio** so that it matches the setting on our **CameraActor**. This will make transitions between camera views smoother, but it is not required.

	![](CameraAspect.png)


----

With our world set up, we're now ready to create the class that will control our camera view.


