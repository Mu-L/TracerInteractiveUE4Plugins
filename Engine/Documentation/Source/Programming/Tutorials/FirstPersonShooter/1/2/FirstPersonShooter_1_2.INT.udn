Availability: Public
Title: 1.2 - Opening the Project in Visual Studio
Crumbs: %ROOT%, Programming, Programming/Tutorials, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/1
Description: Learn how to open your C++ project in Visual Studio.
SkillLevel: Beginner
Version: 4.15

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Step](Programming/Tutorials/FirstPersonShooter/1/1)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Section Home](Programming/Tutorials/FirstPersonShooter/1)
	[/PARAM]
	[PARAM:next]
		[Next Step](Programming/Tutorials/FirstPersonShooter/1/3)
	[/PARAM]
[/OBJECT]
[/VAR]



When we setup our **Basic Code** project in the previous step, Unreal Engine created a **Game Mode** for us. Game Modes define a game's rules and win conditions. Our Game Mode also sets default classes that will be used for some basic gameplay framework types, including Pawn, PlayerController, and HUD. During this step, we're going to use the Editor to open our solution in Visual Studio so that we can view our project's Game Mode class. 

1.	In the File menu, select **Open Visual Studio** to open your C++ code in Visual Studio.

	![](FileMenu_OpenVS.png)

1.	After Visual Studio opens up your C++ code, you should be able to see the **CPP** and **header** files inside of Visual Studio's **Solution Explorer**.

	![](VS_SolutionExplorer.png)

1.	By now, you should have the following code inside of `FPSProjectGameMode.cpp`.

		#include "FPSProject.h"
		#include "FPSProjectGameMode.h"

1.	Also, you should have the following code inside of `FPSProjectGameMode.h`.

		#pragma once
		
		#include "GameFramework/GameModeBase.h"
		#include "FPSProjectGameMode.generated.h"
		
		/**
		 * 
		 */
		UCLASS()
		class FPSPROJECT_API AFPSProjectGameMode : public AGameModeBase
		{
			GENERATED_BODY()
		};

1.	Now that you've opened your C++ project in Visual Studio, you're ready to start adding code to the project. 
		
