INTSourceChangelist:3782314
Availability:Public
Title:1.4 - 编译项目
Crumbs: %ROOT%, Programming, Programming/Tutorials, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/1
Description:学习如何编译首个 C++ 类。
SkillLevel:Beginner
Version: 4.15

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Step](Programming/Tutorials/FirstPersonShooter/1/3)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Section Home](Programming/Tutorials/FirstPersonShooter/1)
	[/PARAM]
	[PARAM:next]
		[Next Step](Programming/Tutorials/FirstPersonShooter/1/5)
	[/PARAM]
[/OBJECT]
[/VAR]



现在即可编译项目，使代码修改反映到游戏中。 

1.	返回编辑器，点击 **Compile** 按钮编译代码。

	![](CompileProject.png)

	_因为您已将项目作为 C++ 项目开发，所以可直接从虚幻编辑器中编译 CPP 代码。_

1.	直接点击 **Play** 按钮即可进入 Play in Editor（PIE）模式。

	![](PIE_DefaultGameMode.png)

	您可能会存在疑问：PIE 模式中日志消息为什么没显示在屏幕上？不显示日志消息的原因是编辑器在开发的现阶段 
	仍在使用默认 `Game Mode`。 

1.	按下 Esc 键或点击关卡编辑器中的 **Stop** 按钮即可退出 PIE 模式。

## 将 CPP Game Mode 类扩展为蓝图

现在即可将 CPP Game Mode 类扩展为蓝图。在 [](Gameplay/ClassCreation/CodeAndBlueprints) 参考页面中可了解 C++ 类扩展为蓝图的更多内容。

1.	首先在 Content 文件夹中创建一个 Blueprints 文件夹。

	![](BlueprintsFolder.png)

1.	右键单击 `FPSProjectGameMode` 类打开 **C++ Class Actions** 菜单。

	![](CPPClassActionsMenu.png)

1.	点击 **Create Blueprint class based on FPSProjectGameMode** 打开 **Add Blueprint Class** 对话菜单。

	![](CreateDerivedBPClass.png)

1.	将新蓝图类命名为“BP_FPSProjectGameMode”，选择蓝图文件夹，然后点击 **Create Blueprint Class** 按钮。

	![](AddBPClass.png)

1.	现在，Blueprints 文件夹中便拥有了一个新建的 `BP_FPSProjectGameMode` 蓝图类。

	![](AddedBPClass.png)

1.	关闭蓝图编辑器之前将 `BP_FPSProjectGameMode` 蓝图保存。


