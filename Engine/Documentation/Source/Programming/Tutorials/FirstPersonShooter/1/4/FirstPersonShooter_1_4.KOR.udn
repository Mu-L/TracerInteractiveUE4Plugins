INTSourceChangelist:3782314
Availability: Public
Title: 1.4 - 프로젝트 컴파일
Crumbs: %ROOT%, Programming, Programming/Tutorials, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/1
Description: 첫 C++ 클래스 컴파일 방법을 배워봅니다.
SkillLevel: Beginner
Version: 4.15

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[이전 단계](Programming/Tutorials/FirstPersonShooter/1/3)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[섹션 홈](Programming/Tutorials/FirstPersonShooter/1)
	[/PARAM]
	[PARAM:next]
		[다음 단계](Programming/Tutorials/FirstPersonShooter/1/5)
	[/PARAM]
[/OBJECT]
[/VAR]



이번 단계에서는 프로젝트를 컴파일하여 코드 변경사항을 게임내에 반영시키도록 하겠습니다.

1.	에디터로 돌아가, **컴파일** 버튼을 클릭하여 코드를 컴파일합니다.

	![](CompileProject.png)

	_프로젝트를 C++ 프로젝트로 개발 시작했기 때문에, C++ 코드를 언리얼 에디터에서 바로 컴파일할 수 있을 것입니다._

1.	**플레이** 버튼을 클릭하여 에디터에서 플레이 (PIE) 모드로 들어갑니다.

	![](PIE_DefaultGameMode.png)

	PIE 모드에서는 화면에 로그 메시지가 표시되지 않는지 의아할 것입니다. 로그 메시지가 보이지 않는 이유는 에디터가 현재 개발 단계에서는 
	`FPSProjectGameMode` 가 아닌 기본 `Game Mode` 를 사용하고 있기 때문입니다.

1.	다음 단계로 넘어가기 전 `FPSProjectGameMode` 를 이 프로젝트의 기본 게임 모드로 설정하고, Esc 키를 누르거나 레벨 에디터의 **중지** 버튼을 클릭하여 PIE 모드를 빠져나갑니다.

## CPP Game Mode 클래스를 블루프린트로 확장

이제 CPP Game Mode 클래스를 블루프린트로 확장시킬 때입니다. C++ 클래스를 블루프린트로 확장시키는 방법 관련 자세한 정보는 [](Gameplay/ClassCreation/CodeAndBlueprints) 문서를
참고하세요.

1.	먼저 Content 폴더 안에 Blueprints 폴더를 만듭니다.

	![](BlueprintsFolder.png)

1.	`FPSProjectGameMode` 클래스를 우클릭하여 **C++ Class Actions** 메뉴를 엽니다.

	![](CPPClassActionsMenu.png)

1.	**FPSProjectGameMode 기반 블루프린트 클래스 생성** 옵션을 클릭하여 **블루프린트 클래스 추가** 대화창을 엽니다.

	![](CreateDerivedBPClass.png)

1.	새 블루프린트 클래스 이름을 BP_FPSProjectGameMode 로 짓고 Blueprints 폴더를 선택한 뒤 **블루프린트 클래스 생성** 버튼을 클릭합니다.

	![](AddBPClass.png)

1.	이제 새로 생성된 `BP_FPSProjectGameMode` 블루프린트 클래스가 Blueprints 폴더 안에 위치한 것을 확인할 수 있을 것입니다.

	![](AddedBPClass.png)

1.	반드시 `BP_FPSProjectGameMode` 블루프린트를 저장하고 블루프린트 에디터를 닫으세요.

