INTSourceChangelist:3782314
Availability:Public
Title:2.4 - 实现鼠标摄像机控制
Crumbs: %ROOT%, Programming, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/2
Description:学习如何实现第一人称射击游戏角色的鼠标摄像机控制。
SkillLevel:Beginner
Version: 4.15

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Step](Programming/Tutorials/FirstPersonShooter/2/3)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Section Home](Programming/Tutorials/FirstPersonShooter/2)
	[/PARAM]
	[PARAM:next]
		[Next Step](Programming/Tutorials/FirstPersonShooter/2/5)
	[/PARAM]
[/OBJECT]
[/VAR]



在这步中，我们将实现鼠标控制角色四处查看的功能。

(#TurnAxisMapping)
## 转动轴映射

1.	在 **Edit** 菜单中点击 **Project Settings**。

1.	在 **Project Settings** 标签左侧的 **Engine** 标题下点击 **Input**。

1.	在 **Bindings** 下点击 **Axis Mappings** 旁的加号。

1.	点击 **Axis Mappings** 左侧的箭头。

1.	在出现的文本框中输入“Turn”，然后点击文本框左侧的箭头展开轴绑定选项。

1.	在下拉菜单中，从 **Mouse** 下拉列表中选择 **Mouse X**。

1.	输入设置应与下图相似：

	![](TurnAxisMapping_MouseX.png)

(#Look-upAxisMapping)
## 仰视轴映射

1.	在 **Bindings** 下点击 **Axis Mappings** 旁的加号。

1.	在出现的文本框中输入“LookUp”，然后点击文本框左侧的箭头展开轴绑定选项。

1.	在下拉菜单中，从 **Mouse** 下拉列表中选择 **Mouse Y**。

1.	在 **Mouse Y** 旁边的 **Scale** 框中输入“-1.0”。

1.	输入设置应与下图相似：

	![](TurnAxisMapping_MouseY.png)

1.	关闭 **Project Settings** 菜单。

(#ImplementingInputHandling)
## 实现输入处理

现在即可添加代码，处理转动和仰视的鼠标输入。`Character` 基类定义两个必要函数：

*	`AddControllerYawInput`
*	`AddControllerPitchInput`

[REGION:note]
如需执行更多处理（如添加灵敏度或轴翻转的支持），可在将输入值传递到函数前通过自定义函数对其进行调整；然而在此情形下，需要将输入直接绑定到 `AddControllerYawInput` 和 `AddControllerPitchInput` 函数。
[/REGION]

1.	将以下代码行添加到 `FPSCharacter.cpp` 中的 `SetupPlayerInputComponent`。
		// 设置“查看”绑定。
		PlayerInputComponent->BindAxis("Turn", this, &AFPSCharacter::AddControllerYawInput);
		PlayerInputComponent->BindAxis("LookUp", this, &AFPSCharacter::AddControllerPitchInput);

1.	`SetupPlayerInputComponent` 应与以下代码相似：

		// 调用后将功能绑定到输入
		void AFPSCharacter::SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent)
		{
			Super::SetupPlayerInputComponent(PlayerInputComponent);
		
			// 设置“移动”绑定。
			PlayerInputComponent->BindAxis("MoveForward", this, &AFPSCharacter::MoveForward);
			PlayerInputComponent->BindAxis("MoveRight", this, &AFPSCharacter::MoveRight);
			// 设置“查看”绑定。
			PlayerInputComponent->BindAxis("Turn", this, &AFPSCharacter::AddControllerYawInput);
			PlayerInputComponent->BindAxis("LookUp", this, &AFPSCharacter::AddControllerPitchInput);
		}

(#TestingMouseCameraControl)
## 测试鼠标摄像机控制

1.	在 Visual Studio 中保存 `FPSCharacter` 实现文件。

1.	在 **Solution Explorer** 中找到 **FPSProject**。

1.	右键单击 **FPSProject** 并选择 **Build** 编译项目。

	![](BuildProject.png)

1.	构建完成后，在虚幻编辑器中打开 **FPSProject**。

1.	点击关卡编辑器工具栏中的 **Play** 按钮。现在即可使用鼠标控制摄像机。

1.	按下 Esc 键或点击关卡编辑器中的 **Stop** 按钮即可退出 Play in Editor（PIE）模式。


