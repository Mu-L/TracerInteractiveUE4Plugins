INTSourceChangelist:3782314
Availability:Public
Title:4.2 - Event Graph のセットアップ
Crumbs: %ROOT%, Programming, Programming/Tutorials, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/4
Description:FPS キャラクターの Event Graph をセットアップする方法を学びます。
SkillLevel:Beginner
Version:4.15

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[前のステップ](Programming/Tutorials/FirstPersonShooter/4/1)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[セクション ホーム](Programming/Tutorials/FirstPersonShooter/4)
	[/PARAM]
	[PARAM:next]
		[次のステップ](Programming/Tutorials/FirstPersonShooter/4/3)
	[/PARAM]
[/OBJECT]
[/VAR]



このステップでは、アニメーションの Event Graph を編集してアニメーション遷移の変数がゲーム実行中に適切に発行されるようにします。

## ステート変数を更新する

1.	**[My Blueprint]** タブの **EventGraph** をダブルクリックしてイベントグラフを開きます。

	![](OpenEventGraph.png)

1.	グラフを右クリックして **コンテキスト メニュー** を表示します。

1.	**コンテキスト メニュー** の検索欄に「Update」と入力して、ノードを追加するために **[Event Blueprint Update Animation]** をクリックします。

	[REGION:note]
	**Event Blueprint Update Animation** ノードは、アニメーションが更新されるたびにステート変数を更新し、ゲームステートと常に同期されるようにします。  
	![](EventBlueprintUpdateAnimationNode.png)
	[/REGION]

1.	グラフを右クリックして **コンテキスト メニュー** を表示します。

1.	**コンテキスト メニュー** の検索欄に「Owner」と入力して、ノードを追加するために **[Try Get Pawn Owner]** をクリックします。

	![](TryGetPawnOwnerBP_Node.png)

1.	出力ピンからドラッグして、**コンテキスト メニュー** から **Cast to Character** を選択します。

	![](CastToCharacterContextMenu.png)

1.	**Event Blueprint Update Animation** の出力実行ピンを **Cast to Character** の入力実行ピンに接続します。

	![](ConnectedCastToCharacterNode.png)

1.	**As Character** 出力ピンからドラッグして **Get Character Movement** を選択します。

	![](GetCharacterMovementNode.png)

1.	**Character Movement** 出力ピンからドラッグして **Get Movement Mode** を選択します。

	![](GetMovementMode.png)

## キャラクターの移動のクエリー

1. 	 **Movement Mode** 出力ピンからドラッグして **Equal (Enum)** を選択します。

	![](EqualEnumNode.png)

## キャラクターが落下しているかを判定する

1.	**Equal (Enum)** ノードのドロップダウンの値を **Falling** に設定します。

	![](ConnectedIsFalling.png)

1.	**[My Blueprint]** タブで **[IsFalling]** を Alt キーを押しながらクリックしてグラフにドラッグして、**Set Is Falling** ノードを作成します。

	![](IsFalling.png)

1.	**Cast to Character** ノードのラベル付けされていない出力実行ピンを **Set Is Falling** ノードの入力実行ピンと接続します。そして **Equal (Enum)** ノードの出力 Boolean データ ピンを、**Set Is Falling** ノードの入力 Boolean データ ピンに接続します。

	![](ConnectedIsFalling.png)

## キャラクターが走っているかを判定する

1.	**Cast To Character** ノードに戻り、再度 **As Character** ピンからドラッグします。今回は **Get Velocity** ノードから選択します。

	![](GetVelocityNode.png)

1.	キャラクターが静止していない場合、ベロシティ ベクターの長さはゼロよりも大きくなります。従って **Return Value** ベクター出力ピンからドラッグして **Vector Length** を選択し、そのノードをグラフに追加します。

	![](VectorLength.png)

1.	**Return Value** float 出力ピンを引き出して、 **> (float)** ノードを選択します。

	![](GreaterThan.png)

1.	**[My Blueprint]** タブで **IsRunning** を Alt キーを押しながらクリックしてグラフへドラッグして、**Set Is Running** ノードを作成します。

	![](IsRunning.png)

1.	**Set Is Falling** ノードの出力実行ピンを **Set Is Running** ノードの入力実行ピンと接続します。そして **> (float)** ノードの出力 Boolean ピンを、**Set Is Running** ノードの入力 Boolean ピンに接続します。

	![](ConnectedIsRunning.png)

1.	**Event Graph** は以下のようになります。

	[REGION:lightbox]
		[![](CompleteEventGraph.png)(w:750)](CompleteEventGraph.png)
	[/REGION]
	_ズームインするには画像をクリックします。_

