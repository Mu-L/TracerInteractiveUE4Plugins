INTSourceChangelist:3782314
Availability: Public
Title: 4.2 - 이벤트 그래프 구성
Crumbs: %ROOT%, Programming, Programming/Tutorials, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/4
Description: 일인칭 슈팅 캐릭터의 이벤트 그래프 구성법을 배워봅니다.
SkillLevel: Beginner
Version: 4.15

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[이전 단계](Programming/Tutorials/FirstPersonShooter/4/1)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[섹션 홈](Programming/Tutorials/FirstPersonShooter/4)
	[/PARAM]
	[PARAM:next]
		[다음 단계](Programming/Tutorials/FirstPersonShooter/4/3)
	[/PARAM]
[/OBJECT]
[/VAR]



이번 단계에서는 애니메이션의 이벤트 그래프를 편집하여 게임 실행 도중 애니메이션 트랜지션 변수가 제대로 발동되도록 하겠습니다.

## 스테이트 변수 업데이트

1.	**내 블루프린트** 탭의 **이벤트 그래프** 를 더블클릭하여 이벤트 그래프를 엽니다.

	![](OpenEventGraph.png)

1.	그래프에 우클릭하여 **컨텍스트 메뉴** 를 불러옵니다.

1.	**컨텍스트 메뉴** 의 검색창에 Update 라 입력한 다음 **Event Blueprint Update Animation** 를 클릭하여 노드를 추가합니다.

	[REGION:note]
	**Event Blueprint Update Animation** 노드를 통해 애니메이션이 업데이트될 때마다 스테이트 변수를 업데이트하여 항상 게임 스테이트와 동기화 상태를 유지합니다.
	![](EventBlueprintUpdateAnimationNode.png)
	[/REGION]

1.	그래프에 우클릭하여 **컨텍스트 메뉴** 를 불러옵니다.

1.	**컨텍스트 메뉴** 검색창에 Owner 라 입력한 뒤 **Try Get Pawn Owner** 를 클릭하여 노드를 추가합니다.

	![](TryGetPawnOwnerBP_Node.png)

1.	출력 핀을 끌어놓고 컨텍스트 메뉴에서 **Cast to Character** 를 선택합니다.

	![](CastToCharacterContextMenu.png)

1.	**Event Blueprint Update Animation** 의 출력 실행 핀을 **Cast to Character** 의 입력 실행 핀에 연결합니다.

	![](ConnectedCastToCharacterNode.png)

1.	**As Character** 출력 핀을 끌어놓고 **Get Character Movement** 를 선택합니다.

	![](GetCharacterMovementNode.png)

1.	**Character Movement** 출력 핀을 끌어놓고 **Get Movement Mode** 를 선택합니다.

	![](GetMovementMode.png)

## 캐릭터 무브먼트 쿼리

1.	 **Movement Mode** 출력 핀을 끌어놓고 **Equal (Enum)** 을 선택합니다.

	![](EqualEnumNode.png)

## 캐릭터가 낙하중인지 결정

1.	**Equal (Enum)** 노드의 드롭다운 값을 **Falling** 으로 설정합니다.

	![](ConnectedIsFalling.png)

1.	**내 블루프린트** 탭의 **IsFalling** 에 **Alt + 클릭** 하고 그래프에 끌어놓아 **Set Is Falling** 노드를 생성합니다.

	![](IsFalling.png)

1.	**Set Is Falling** 노드의 입력 실행 핀에 **Cast to Character** 노드의 이름 없는 출력 실행 핀을 연결하고, **Equal (Enum)** 노드의 출력 부울 데이터 핀을 **Set Is Falling** 노드의 입력 부울 데이터 핀에 연결합니다.

	![](ConnectedIsFalling.png)

## 캐릭터가 달리는지 알아내기

1.	**Cast To Character** 노드로 돌아가서 **As Character** 핀들 다시 끌어 놓습니다. 이번에는 **Get Velocity** 노드를 선택합니다.

	![](GetVelocityNode.png)

1.	캐릭터가 가만히 서있지 않는다면, 속도 벡터 길이가 0 보다 큰 것입니다. 그러므로 **Return Value** 벡터 출력 핀을 끌어 놓고 **Vector Length** 를 선택하여 그래프에 그 노드를 추가합니다.

	![](VectorLength.png)

1.	**Return Value** 플로트 출력 핀을 끌어 놓고 **> (float)** 노드를 선택합니다.

	![](GreaterThan.png)

1.	**내 블루프린트** 탭의 **IsRunning** 을 **Alt + 클릭** 한 다음 그래프에 끌어 놓아 **Set Is Running** 노드를 만듭니다.

	![](IsRunning.png)

1.	**Set Is Falling** 노드의 출력 실행 핀을 **Set Is Running** 노드의 입력 실행 핀에 연결하고, **> (float)** 노드의 출력 부울 핀을 **Set Is Running** 노드의 입력 부울 핀에 연결합니다.

	![](ConnectedIsRunning.png)

1.	**이벤트 그래프** 는 다음과 같은 모습일 것입니다:

	[REGION:lightbox]
		[![](CompleteEventGraph.png)(w:750)](CompleteEventGraph.png)
	[/REGION]
	_이미지를 클릭하면 확대됩니다._

