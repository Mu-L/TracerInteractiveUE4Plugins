INTSourceChangelist:3782314
Availability:Public
Title:4.応用編
Crumbs:%ROOT%, Programming, Programming/Tutorials, Programming/Tutorials/VariablesTimersEvents
Description:入力を C++ コードにバインドします。
version:4.9

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[前のステップ](Programming\Tutorials\VariablesTimersEvents\3 "%Programming\Tutorials\VariablesTimersEvents\3:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[](Programming\Tutorials\VariablesTimersEvents)
	[/PARAM]
	[PARAM:next]
	[/PARAM]
[/OBJECT]
[/VAR]



ここまでで学んだ知識を活かして、以下を行ってみましょう。

* **イベント** 実行時にターゲットのトランスフォームへ移動または回転する **アクタ** を作成します。これはゲーム内で動くプラットフォームまたはドアとして使用可能です。このイベントが 2 番目のイベントをトリガーする **タイマー** を開始するようにします。この 2 番めのイベントはアクタを元の位置に戻します。ハードコードされた値の代わりに公開された変数 (**UPROPERTY** を用いて) を適切な場所に使用します。
* タイマー ハンドルといくつかのカスタム イベントを使用して、燃え尽きる (火の **Particle System Component** を非アクティブにするなど) 火のついたトーチを作成します。例えば AddFuel Event でトーチの燃焼時間を延長することができます。DouseWithWater Event はトーチを瞬時に消火して、今後 AddFuel が機能しないように設定します。こうした機能は両方とも **ティック** を使用しないで記述できます。ハンドルで実行しているタイマーを単に修正するだけです。

以下はこのチュートリアルの内容の詳しい情報のリンク先です。

* タイマーに関する詳細は [%Programming/UnrealArchitecture/Timers:title%](Programming/UnrealArchitecture/Timers) ページをご覧ください。
* クラスまたは構造体の変数と合わせて UPROPERTY タグを使用したリファレンス一式については、 [%Programming/UnrealArchitecture/Reference/Properties:title%](Programming/UnrealArchitecture/Reference/Properties) ページをご覧ください。
* UFUNCTIONS とイベントの作成について学ぶには、 [%Programming/UnrealArchitecture/Reference/Functions:title%](Programming/UnrealArchitecture/Reference/Functions) ページをご覧ください。
* 詳しいチュートリアルは [%Programming/Tutorials:title%](Programming/Tutorials) ページをご覧ください。



