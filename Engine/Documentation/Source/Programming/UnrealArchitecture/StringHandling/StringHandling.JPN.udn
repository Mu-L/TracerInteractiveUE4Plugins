Availability:Public
Title:文字列の取り扱い
Crumbs:%ROOT%, Programming, Programming/UnrealArchitecture/Reference, Programming/UnrealArchitecture/Reference/Properties
Description:UE4 で利用可能な文字列クラスの概要と FName、FText、FString の参照ガイド
Version:4.9


### FName

 [INCLUDE:Programming/UnrealArchitecture/StringHandling/FName#overview]

* [FName Reference Guide](Programming/UnrealArchitecture/StringHandling\FName)

### FText 

[INCLUDE:Programming/UnrealArchitecture/StringHandling/FText#overview]

* [FText Reference Guide](Programming/UnrealArchitecture/StringHandling\FText)

### FString 

[INCLUDE:Programming/UnrealArchitecture/StringHandling/FString#overview]

* [FString Reference Guide](Programming/UnrealArchitecture/StringHandling\FString)



## 変換

|変換元 | 変換先 | 例| 
|---|------|---------| 
%fnametofstring%
%fnametoftext% 
%fstringtofname%
%fstringtoftext%
%ftexttofstring%
%ftexttofname%


[VAR:FNameToFString]
|FName | FString | `TestHUDString = TestHUDName.ToString();`   |
[/VAR]

[VAR:FNameToFText]
|FName   | FText   | `TestHUDText = FText::FromName(TestHUDName);` [REGION:warning] FName -> FText が有効な場合はありますが、FNames のコンテンツは FText の「自動ローカライゼーション」 の効果がないことに注意してください。[/REGION] |
[/VAR]

[VAR:FStringToFName]
|FString | FName |  `TestHUDName = FName(*TestHUDString);` [REGION:warning] FString -> FName は危険です。FName は大文字、小文字を区別せず、変換は不可逆であるためです。 [/REGION]| 
[/VAR]

[VAR:FStringToFText]
|FString | FText |  `TestHUDText = FText::FromString(TestHUDString);`  [REGION:warning] FString -> FText が有効な場合はありますが、FStrings のコンテンツは FText の「自動ローカライゼーション」 の効果がないことに注意してください。 [/REGION] | 
[/VAR]


[VAR:FTextToFString]
|FText   | FString| `TestHUDString = TestHUDText.ToString();` [REGION:warning] FText -> FString は危険です。いくつかの言語では不可逆な変換である可能性があるためです。 [/REGION]| 
[/VAR]

[VAR:FTextToFName]
|FText   | FName | FText から FName への直接変換はありません。かわりに、FString に変換し、次に FName に変換します。[REGION:warning] FText -> FString -> FName は、危険です。FName はケース インセンシティブ、変換は不可逆であるためです。[/REGION]| 
[/VAR]
 
## エンコーディング

一般的に、文字列変数のリテラルを設定する場合、**TEXT()** マクロを使用するようにします。TEXT() マクロを指定しない場合、リテラルは ANSI を使用してエンコードされます。 
ANSI はサポートされる文字が非常に制限されます。FString に渡された ANSI リテラルは TCHAR (ネイティブの Unicode エンコーディング) に変換される必要があります。そのため、TEXT() を使用した方が効率的です。

エンコーディングの詳しい情報は以下のドキュメントをご覧ください。[](Programming\UnrealArchitecture\StringHandling\CharacterEncoding)
