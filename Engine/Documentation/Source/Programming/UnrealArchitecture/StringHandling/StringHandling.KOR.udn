INTSourceChangelist:3108692
Availability: Public
Title:스트링 처리
Crumbs:%ROOT%, Programming, Programming/UnrealArchitecture/Reference, Programming/UnrealArchitecture/Reference/Properties
Description: UE4 에서 사용가능한 스트링 클래스에 대한 개요와 FName, FText, FString 에 대한 참고 안내서입니다.
Version: 4.9


### FName

 [INCLUDE:Programming/UnrealArchitecture/StringHandling/FName#overview]

* [FName Reference Guide](Programming/UnrealArchitecture/StringHandling\FName)

### FText 

[INCLUDE:Programming/UnrealArchitecture/StringHandling/FText#overview]
	
* [FText Reference Guide](Programming/UnrealArchitecture/StringHandling\FText)

### FString 

[INCLUDE:Programming/UnrealArchitecture/StringHandling/FString#overview]
	
* [FString Reference Guide](Programming/UnrealArchitecture/StringHandling\FString)



## 변환

| 에서 | 로 | 예제| 
|---|------|---------| 
%fnametofstring%
%fnametoftext% 
%fstringtofname%
%fstringtoftext%
%ftexttofstring%
%ftexttofname%


[VAR:FNameToFString]
|FName | FString | `TestHUDString = TestHUDName.ToString();`   |
[/VAR]

[VAR:FNameToFText]
|FName   | FText   | `TestHUDText = FText::FromName(TestHUDName);` [REGION:warning] FName -> FText 는 가능한 경우도 있지만, FName 의 내용이 FText 의 "자동 현지화" 혜택을 받지 못할 수 있음에 유념해 주시기 바랍니다. [/REGION] |
[/VAR]

[VAR:FStringToFName]
|FString | FName |  `TestHUDName = FName(*TestHUDString);` [REGION:warning] FString -> FName 은 손실성 변환이라 위험합니다. FName 은 대소문자를 구분하지 않기 때문입니다. [/REGION]| 
[/VAR]

[VAR:FStringToFText]
|FString | FText |  `TestHUDText = FText::FromString(TestHUDString);`  [REGION:warning] FString -> FText 은 가능한 경우도 있지만, FString 의 내용이 FText 의 "자동 현지화" 혜택을 받지 못할 수 있음에 유념해 주시기 바랍니다. [/REGION] | 
[/VAR]


[VAR:FTextToFString]
|FText   | FString| `TestHUDString = TestHUDText.ToString();` [REGION:warning] FText -> FString 은 안전하지 않습니다. 일부 언어에서는 변환시 손실될 위험이 있습니다. [/REGION]| 
[/VAR]

[VAR:FTextToFName]
|FText   | FName | FText 에서 FName 으로의 직접 변환은 없습니다. 대신, FString 을 거친 다음 FName 으로 변환하는 방법이 있습니다. [REGION:warning] FText -> FString -> FName 은 손실성 변환이라 위험합니다. FName 은 대소문자를 구분하지 않기 때문입니다. [/REGION]| 
[/VAR]
 
## 인코딩

일반적으로 스트링 변수 리터럴 설정시에는 `TEXT()` 매크로를 사용해야 합니다. `TEXT()` 매크로를 지정하지 않으면, 리터럴은 ANSI 를 사용해서 인코딩되기에, 지원되는 글자가 크게 제한됩니다.
FString 에 전달되는 ANSI 리터럴은 TCHAR (네이티브 유니코드 인코딩)으로의 변환을 겪어야 하기에, `TEXT()` 를 사용하는 편이 보다 효율적입니다.

인코딩 관련 상세 정보는 [](Programming\UnrealArchitecture\StringHandling\CharacterEncoding) 문서를 참고해 주시기 바랍니다.