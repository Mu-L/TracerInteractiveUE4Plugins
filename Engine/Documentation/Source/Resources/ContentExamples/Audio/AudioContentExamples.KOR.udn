INTSourceChangelist:3782314
Availability: Public
Title:오디오 콘텐츠 예제
Crumbs:%ROOT%, Resources, Resources/ContentExamples
Description:오디오 콘텐츠 예제에 제공된 샘플에 대한 개요입니다.
Related: Engine/Audio/Overview
Related: Engine/Audio
Related: Engine/Audio/SoundCues/Editor
Related: Engine/Audio/DistanceModelAttenuation
topic-image:audio_compact.png

[REGION:banner]
![](Audio_Header.png)(convert:false)
[/REGION]



**Content Examples** (콘텐츠 예제) 프로젝트 안에 위치한 **Audio** 맵은 전체 오디오 시스템 조합 방식을 직접적으로 살펴보기에 좋은 자료로, 적당한 크기의 실용적인 예제를 통해 데모가 제공되고 있기도 합니다. 이 페이지의 용도는 오디오 콘텐츠 예제에서 기대할 수 있는 것들과, 작업하고자 하는 오디오 시스템에 따른 구체적인 예제가 있는 위치를 알려드리기 위함입니다. 언리얼 엔진 4 의 시스템이 처음이거나 재교육이 필요하신 분들께 이 맵은 뛰어난 기초가 될 것입니다.


## 오디오 맵

![](contentExamplesStarterMap.png)(w:640)

[COMMENT:none]
-
오디오 맵은 언리얼 엔진 4 에서 오디오를 사용함에 있어서의 핵심적인 개념을 알려드립니다. 이 맵에서는 다양한 유형의 오디오 애셋과, 필요에 따라 다양한 이펙트를 만들기 위한 조작법 등, 여러가지 주제를 다루고 있습니다. 언리얼 엔진 4 의 시스템이 처음이거나 재교육이 필요하신 분들께 이 맵은 뛰어난 기초가 될 것입니다.
-
[/COMMENT]
| 예제 | 데모 내용 |
| ------- | ------------ |
| **1.1 AmbientSound Actor** | 앰비언트 사운드 액터 - 일회성 이벤트로 재생되는 오디오입니다. |
| **1.2 AmbientSound Looping** | 앰비언트 사운드 루핑 - 멈추라 할 때까지 계속해서 재생되는 오디오입니다. |
| **1.3 AmbientSound Spatialize** | 앰비언트 사운드 공간화 - 사운드 위치에서 재생되는 오디오입니다. |
| **1.4 AmbientSound Attenuation** | 앰비언트 사운드 감쇠 - 사운드 위치에서 재생되며, 거리에 따라 소리가 커지거나 작아지는 오디오입니다. |
| **1.5 Attenuation with Low Pass Filter (LPF)** | 로우 패스 필터(LPF) 감쇠 - 사운드 위치에서 재생되다가 플레이어가 사운드 위치에서 멀어질 수록 더욱 사그라드는 오디오입니다. |
| **1.6 Attenuation Shapes** | 정의된 (구체, 캡슐, 박스, 원뿔 등의) 모양 내 사운드 위치에서 재생되는 오디오입니다. |
| **1.7 Shared Attenuation Settings** | 다수 **사운드 액터** 의 **감쇠** 에 영향을 끼치는 **Sound Attenuation** (사운드 어테뉴에이션) 애셋 데모입니다. |
| **1.8 AmbientSound Actor using SoundCues** | 사운드 큐를 사용하는 앰비언트 사운드 액터 - **사운드 웨이브** 대신 **사운드 큐** 를 사용하여 복잡한 사운드를 만들거나 다수의 사운드를 하나로 합치는 법에 대한 데모입니다. |
| **1.9 Audio Volume** | 오디오 볼륨 - **Audio Volume** 에 영향받은 오디오는 플레이어가 그 볼륨 안에 있을 때만 그 이펙트가 들리게 됩니다 (예: 볼륨 안에 있을 때는 대화 소리가 강당에 있는 것처럼 들리다가, 밖에 나오면 정상적으로 재생됩니다). |
| **1.10 Audio Volume using Ambient Zone** | 앰비언트 존을 사용하는 오디오 볼륨 - **앰비언트 존** 의 영향을 받는 두 개의 사운드가, 하나는 **Audio Volume** 안에, 다른 하나는 밖에 있습니다. 안쪽 사운드는 **Audio Volume** 밖에 있을 때는 조용하다가 안에 들어가면 커지는 반면, 바깥의 사운드는 **Audio Volume** 안에 있을 때는 조용하다가 그 밖에 서 있으면 커집니다 (예: 야간에 실내에서 야외 환경으로 이동할 때의 오디오). |

[COMMENT:none]

### Sound Cue Node Usage
The **Sound Cue Node Usage** section covers more in-depth usage of the **Sound Cue Editor** including: combining multiple **Sound Waves**, selective **Attenuation**, **Random** and **Delayed** playback of **Sound Waves**, and **Modulation**. 

| Example | What's Demonstrated |
| ------- | ------------ |
| **2.1 Mixer** | Two separate sounds fed through a **Mixer** node to produce a combined audio effect (e.g. ambient sounds with dripping water).  |
| **2.2 Attenuation** | A combination of two sounds with separate **Attenuation** settings where the falloff of each sound is independent of one another (e.g. audio effect from 2.1, however dripping water gets quieter the further you move away while ambient remains). |
| **2.3 Modulator** | Audio that plays back at a random volume or pitch based on its Min/Max settings (e.g. a dog that barks at a different pitch each time it's triggered). |
| **2.4 Random** | Randomly select a non-looping sound for playback each time the **Sound Cue** is triggered (e.g. a different bird call is played each time it is triggered). |
| **2.5 Delay + Looping** | Randomly select a non-looping sound for playback that repeats and has a delay between each playback (e.g. different bird calls are played and looped randomly with a delay between each sound). |


### Reverb + Ambient Zone Usage
The **Reverb + Ambient Zone Usage** section covers a how to use a **Audio Volume** and **Reverb Effect**, along with sound assets to produce dialogue that sounds as if you are standing in an auditorium. This section also covers how to use **Ambient Zones** and **Sound Classes** to generate interior/exterior sounds that play together where the volumes adjust based on whether you are inside or out. 

| Example | What's Demonstrated |
| ------- | ------------ |
| **3.1 Reverb** | Audio is affected by a **Audio Volume** where its effects can only be heard when the player is inside the volume (e.g. Dialogue plays inside a building and sounds like an auditorium. When outside, dialogue plays normally). |
| **3.2 Ambient Zone** | Two sounds are affected by an **Ambient Zone** where one sound is placed inside a **Audio Volume** and the other is not. The inside sound is quite while outside the **Audio Volume** but louder when inside, while the outside sound is quite when inside the **Audio Volume** and louder while standing outside it (e.g. audio when moving from an indoor to outdoor environment at night). |


### Ambient Showcase
The **Ambient Showcase** provides additional usage examples and illustrates how to use the four **Attenuation Shapes**, using audio in **Blueprints** to create rotating and moving sounds with **Attenuation**, and advanced usages of **Audio Volumes** and **Ambient Zones**. 

| Example | What's Demonstrated |
| ------- | ------------ |
| **4.1 Ambient Zone with Box Attenuation** | Showcases audio with **Attenuation** and an **Ambient Zone** inside a box-shaped room (e.g. entering the cockpit of an idle airplane). |
| **4.2 Rotating Cone Attenuation** | Audio is attached to a rotating object where the sound fades in/out based on it's location to the player (e.g. a rotating scanner device) |
| **4.3 Moving Sphere Attenuation** | Audio is attached to an object that moves forwards/backwards where the sound fades in/out based on it's location to the player and is adjusted based on that distance (e.g. a swarm of bees moving towards/away from you). |
| **4.4 Ambient Zone with Sphere Attenuation** | Showcases audio with **Attenuation** and an **Ambient Zone** inside a spherical room (e.g. the ambient machine noise of a mainframe or server room). |
| **4.5 Ambient Zone with Capsule Attenuation** | Showcases audio with **Attenuation** and an **Ambient Zone** inside a capsule-shaped room (e.g. exiting or entering a moving train car). |
| **4.6 Reverb + Ambient Zone with Cone Attenuation** | Showcases audio with **Attention**, **Reverb**, and an **Ambient Zone** inside a conical room (e.g. several sounds and dialogue come together to form a science fiction type setting). |


## Audio_Advanced Map

![](contentExamplesHeader.png)(w:640)

The **Audio_Advanced** map builds off the examples given in the **Starter Map** and demonstrates how to get the most out of the audio system in Unreal Engine 4. 
It offers more in-depth coverage of using audio in **Blueprints** and advanced **Sound Cue Node**, **Sound Class**, and **Sound Mix** usage samples. Using audio in **Matinee** and generating **Surface Sounds** are also covered in this map.

### Blueprint Sound Node Usage
The **Blueprint Sound Node Usage** section covers many topics including how to play a sound at a specific location or attached to an **Actor**, how to start/stop a sound through **Blueprints**, and how to create and add **Reverb** to a sound without using a volume.

| Example | What's Demonstrated |
| ------- | ------------ |
| **1.1 Play Sound at Location** | Audio that plays from a set location (e.g. audio is heard playing from the location of a spark effect). |
| **1.2 Play Sound Attached** | Audio that plays and is attached to a moving Actor (e.g. audio is heard emitting and attached to a moving chicken). |
| **1.3 Play/Stop** | Showcases, through **Blueprints**, how to start or stop a looping sound. |
| **1.4 Fade In/Fade Out** | Showcases, through **Blueprints**, how to add a fade in or fade out effect to a sound. |
| **1.5 Adjust Volume** | Showcases, through **Blueprints**, how to adjust the volume of a sound that is currently playing. |
| **1.6 Set Pitch Multiplier** | Showcases, through **Blueprints**, how to change the pitch of a sound that is currently playing. |
| **1.7 Set Sound** | Showcases, through **Blueprints**, how to change the sound asset assigned to an audio component. |
| **1.8 Is Playing** | Showcases, through **Blueprints**, how to have an audio component return it's current **Playing** or **Not Playing** condition. |
| **1.9 Activate/Deactivate Reverb Effect** | Showcases, through **Blueprints**, how to activate **Reverb Effects** without using an **Audio Volume**. |

### Advanced Sound Cue Node Usage
The **Advanced Sound Cue Node Usage** demos are setup using **Blueprints** and covers examples on how to have a sound adjust its volume or pitch over time, more advanced cross-fading techniques, using float values to drive effects, using Booleans inside of **Sound Cues**, and **Doppler** effects. 

| Example | What's Demonstrated |
| ------- | ------------ |
| **2.1 Enveloper** | Audio that changes its volume and pitch over time (e.g. a dying police car siren). |
| **2.2 Oscillator** | Showcases how to have audio that moves back-and-forth between volume, pitch, and frequency settings. |
| **2.3 Group Control** | Showcases how to play different sounds based on the number of identical **Sound Cues** playing (e.g. one soldier marching versus a platoon of soldiers). |
| **2.4 Branch** | Showcases how to setup a Boolean inside a **Sound Cue** and play a sound based on its condition (e.g. a police siren that only plays if a revving engine is playing). |
| **2.5 Wave Param** | Showcases how to specify a sound within a **Sound Cue** that can be swapped out at anytime through **Blueprints**. |
| **2.6 Continuous Modulator** | Audio that modulates based on an incoming float value (e.g. a car engine that gets louder or softer based on speed). |
| **2.7 Crossfade By Param** | Showcases how to have multiple sounds that fade in or out based on an incoming float value.  |
| **2.8 Crossfade By Distance** | Showcases how to play different sounds that fade in or out based on the **Sound Cue's** distance from the player. |
| **2.9 Doppler** | Showcases how to add a **Doppler** effect to a sound in motion (e.g. a jet engine sound based on distance from the player). |


### Sound Class + Sound Mix Usage
The **Sound Class + Sound Mix Usage** section demonstrates how the two are different as well as how they work together. 
A prime example is given showing how to use **Sound Mixes** to combine music, audio, and combat sounds as well as how to focus in on sounds by pushing or popping them. 
There are also examples on **Passive Sound Mixes** which activate and deactivate automatically as well as using Low/High Pass Filters, or how to apply a radio transmission effect to your audio. 

| Example | What's Demonstrated |
| ------- | ------------ |
| **3.1 Set Base Sound Mix** | Showcases how to set up a **Sound Mix** containing multiple **Sound Cues** (e.g. basic mix of dialogue, music, and background sounds) |
| **3.2 Dialogue Focused Sound Mix** | While playing audio from 3.1, this illustrates how to push/pop the **Dialogue** so that it is louder/softer than the other sounds. |
| **3.3 Music Focused Sound Mix** | While playing audio from 3.1, this illustrates how to push/pop the **Music** so that it is louder/softer than the other sounds. |
| **3.4 Background Focused Sound Mix** | While playing audio from 3.1, this illustrates how to push/pop the **Background** combat sounds so that they are louder/softer than the other sounds. |
| **3.5 Clear Sound Mix Modifiers** | While playing audio from 3.1 and activating 3.2, 3.3, or 3.4 to focus on a sound, this illustrates how to clear all currently pushed **Sound Mixes**. |
| **3.6 Passive Sound Mix** | Showcases how to have **Sound Mixes** activate and deactivate automatically based on **Sound Classes* (e.g. whenever a sound is played, other sounds automatically adjust). |
| **3.7 EQ** | Showcases how to apply equalizer effects to a sound that is playing by using Low/High Pass Filters by pushing/popping them in **Blueprints**. |
| **3.8 Radio Filter** | Showcases how to apply a radio transmission effect to a sound.  |


### Matinee Sound Usage
The **Matinee Sound Usage** section covers how to use sound within **Matinee** sequences. This includes attaching sounds to Static Meshes or the camera, using the **Sound Track** in **Matinee**, and using **Volume** and **Pitch** curves. 

| Example | What's Demonstrated |
| ------- | ------------ |
| **4.1 Attach Sound Actor to Static Mesh** | Audio that plays while attached to a Static Mesh Actor that moves around in a **Matinee** sequence. |
| **4.2 Attach Sound Actor to Camera** | Audio that plays from the location of a camera inside a **Matinee** sequence. |
| **4.3 Sound Track** | Showcases how to add audio to a **Matinee** by using the **Sound Track** and attach it to an Actor in the scene (e.g. dialogue that plays from the location of a character who walks around in a scene).|
| **4.4 Volume and Pitch Curves** | Showcases how to fade **Sound Tracks** in and out using **Volume** and **Pitch** curves (e.g. adjusting the music pitch to account for a slow-motion sequence).  |


### Blueprint Sound Node Showcases
The **Blueprint Sound Node Showcase** provides more tailored examples of using the audio systems to bring to life effects like fireworks or objects like a flickering fluorescent light. 
There are also examples showing how to dynamically alter the audio experience based on game events (like triggering an alarm), play sounds at random locations, modifying the pitch of a sound based on its movement, as well as attaching and playing sound from a specific location of a character.

| Example | What's Demonstrated |
| ------- | ------------ |
| **5.1 Volume Ducking** | Audio that plays inside an encapsulated room. **Reverb** effects are altered based on whether or not the player is inside the room with the door closed or open. |
| **5.2 Play Sound at Particle Collision** | Audio is played at the location of particle collision (e.g. a bouncing particle effect that emits sound when colliding). |
| **5.3 Play Sound at Particle Spawn and Particle Death** | Audio that plays at a particle's spawn location with different audio that plays at its destroy location (e.g. fireworks flying in the air then exploding). |
| **5.4 Set Volume Multiplier With Timeline Driven Float** | Audio that adjusts its volume based on a float value defined by a **Timeline** curve (e.g. a flickering fluorescent light). |
| **5.5 Play Sounds at Random Locations Around an Object** | Showcases audio that plays randomly around the player pawn. Also shows audio that plays randomly around a **Blueprint** spawn location (e.g. explosions randomly firing off around the player or at a location randomly).  |
| **5.6 Set Sound Based on Game Events** | Showcases how to completely change audio based on in-game events (e.g. ambient music is changed when triggering an alarm).  |
| **5.7 Synch Pitch to Moving Object** | Audio that adjusts in pitch automatically based on the location of an object. |
| **5.8 Play Sound from Bone Location** | Showcases how to attach audio to specific bone locations of a **Skeletal Mesh** and call them via **Anim Sequence** or **Blueprint** (e.g. footstep sounds synched with player movement, fire sounds emitting from the location of a body part, or dialogue sounds that appear to come from a characters mouth). |


### Surface Audio
The **Surface Audio** section covers how to generate sounds based on different types of **Materials** that you interact with. 
Whether your walking on wood floors or firing projectiles into glass, this section covers how to set up sounds for these types of scenarios. 

| Example | What's Demonstrated |
| ------- | ------------ |
| **6.1 Grass** | Audio sounds when shooting or walking on grass. |
| **6.2 Water** | Audio sounds when shooting or moving in water. |
| **6.3 Wood** | Audio sounds when shooting or walking on wood. |
| **6.4 Concrete** | Audio sounds when shooting or walking on concrete. |
| **6.5 Metal** | Audio sounds when shooting or walking on metal. |
| **6.6 Glass** | Audio sounds when shooting or walking on glass. |


## Audio_Speaker_Test Map
![](contentExamples51.png)(w:640)

The **Audio_Speaker_Test** map demonstrates how to setup audio for multichannel usage. 
In this map, you can test out playing music from the Left Front, Center, Right Front, Left Rear, and Right Rear Speakers as well as from a Subwoofer. 
You can play them individually or in any combination to hear the different effects. 


[/COMMENT]
