Availability: Public
Title:1.2 - GPU Particles with Velocity Cone Module
Crumbs:%ROOT%, Resources, Resources/ContentExamples, Resources/ContentExamples/EffectsGallery
Description:An overview of the Effects Gallery example level.
Related: Engine/Rendering/ParticleSystems/Overview
Related: Engine/Rendering/ParticleSystems/Reference
Related: Engine/Rendering/ParticleSystems/Optimization
Related: Engine/Rendering/ParticleSystems/Reference/TypeData/GPUSprites
Related: Engine/Rendering/ParticleSystems/ParticleLights
Related: Engine/Rendering/ParticleSystems/Reference/Modules/VectorField
Version: 4.9
topic-image:1_BTopic.png

[REGION:fullwidth]
![](image010.png)
[/REGION]


[INCLUDE:Resources\ContentExamples\ExampleLevelOverview#PlaySim]


This next example demonstrates the use of the **Velocity Cone** module, which outputs particles in a cone shape. The Particle System actually contains 3 Emitters:

* 2 Emitters that output cones of sparks - one that fires upward and another that fires downward.
* 1 Emitter that outputs a single Static Mesh by way of a Mesh TypeData module.

[REGION:fullwidth]
![](VelocityConeEmitters.png)
[/REGION]

The first two Emitters are GPU Sprite emitters. The most important modules in the effect are the Velocity Cone module, which handles the shape of the emission. There is also a Constant Acceleration module on each one which provides a sense of gravity, as well as a Collision (Scene Depth) module that uses Z-Buffer information to allow collision simulation.

The third Emitter uses a Mesh TypeData module to emit an instance of a Static Mesh into the Particle System, in this case a simple sphere. The Emitter's Lifetime is set to 0, which effectively causes the particle to live forever.

For the purposes of creating particle effects, it is often useful to think about a complete particle effect as a series of different subsystems. Here, we broke the effect into two fountains with a mesh in the middle. For other effects, such as a campfire, you would likely separate out such elements as the core of the fire, external flames, spark, smoke, and possible heat distortion into separate emitters within a single Particle System.
  
For more information on Velocity modules, please see the [Velocity Modules documentation](Engine/Rendering/ParticleSystems\Reference\Modules\Velocity). 

### Blueprints and Particles

An interesting side note regarding this example is that it is more than just a Particle System. In the level, the effect has been added by way of a Blueprint (BP_sway_cube). The Blueprint simply has the Particle System as a Component, and uses a simple node graph that defines a looping rotation animation. This causes the effect to slowly spin the Blueprint Actor. This is an excellent example of how Blueprints can be utilized to add a bit more life into your particle-based effects. Note that this is one of many possible ways to achieve a rotation effect.

[REGION:fullwidth]
![](SwayCube.png)
[/REGION]
