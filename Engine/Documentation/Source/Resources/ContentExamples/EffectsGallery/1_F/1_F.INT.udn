Availability: Public
Title:1.6 - Random Burst of Particles, Light, and Sound
Crumbs:%ROOT%, Resources, Resources/ContentExamples, Resources/ContentExamples/EffectsGallery
Description:An overview of the Effects Gallery example level.
Related: Engine/Rendering/ParticleSystems/Overview
Related: Engine/Rendering/ParticleSystems/Reference
Related: Engine/Rendering/ParticleSystems/Optimization
Related: Engine/Rendering/ParticleSystems/Reference/TypeData/GPUSprites
Related: Engine/Rendering/ParticleSystems/ParticleLights
Related: Engine/Rendering/ParticleSystems/Reference/Modules/VectorField
Version: 4.9
topic-image:1_FTopic.png

[REGION:fullwidth]
![](image026.png)
[/REGION]

[INCLUDE:Resources\ContentExamples\ExampleLevelOverview#PlaySim]


Rarely do particles alone handle the job of a special effect. In most cases, you will need to combine particles, lights, sounds, and other elements to achieve your goal. This example shows how a [Blueprint](Engine/Blueprints) can be created in order to combine a Particle System with a light and sound effect. The effect is a simple Blueprint Class deriving from Actor. It contains the following Components:

* The P_spark_burst Particle System.
* A Sound Component that plays the _sparks_ sound effect.
* A Light Component to supply a dynamic flash of light.


[REGION:fullwidth]
![](image028.png)
[/REGION]


The graph for the Blueprint defines a very simple behavior:

* First, we calculate a random delay factor.
* Once that random delay finishes, we fire the Particle System and then the sound effect.
* We use a [Timeline](Engine/Blueprints\UserGuide\Timelines) node to animate the brightness of the Light Component to cause the visible illumination of the flash.



Since the Particle System is set up to only fire a single burst, we get a nice single "pop" of particles that coincides beautifully with the light and sound.


**Click for full size**
[REGION:lightbox]
[![](RandomFlashBPNetwork.png)(w:935)](RandomFlashBPNetwork.png)
[/REGION]

