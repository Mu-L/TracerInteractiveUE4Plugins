INTSourceChangelist:3782314
Availability:Public
Title:1.2 - マテリアル インスタンス
Crumbs:%ROOT%, Resources, Resources/ContentExamples, Resources/ContentExamples/Materials
Description:マテリアル インスタンスのサンプル レベルの概要、サンプル 1.2：Material Instance（マテリアル インスタンス）
Related:Engine/Rendering/Materials/MaterialInstances
Related:Engine/Rendering/Materials/PhysicallyBased
Related:Engine/Rendering/Materials
Related:Engine/Rendering/Materials/ExpressionReference
Related:Engine/Rendering/Materials/MaterialInputs
Related:Engine/Rendering/Materials/LayeredMaterials
Related:Engine/Actors/DecalActor
Version:4.9


![](MI_1_2_001.png)(w:900)

**マテリアル インスタンス** は子マテリアルです。つまり、 **親マテリアル** にある全てのものを持ちますが、**パラメータ** はマテリアル インスタンス上で個別に修正することができます。

何故インスタンスを使用するのでしょうか？マテリアルは非常に柔軟なので、思いついたものはほとんど何でもマテリアル エディタによって命を吹き込むことができます。しかし、複雑なシェーダー デザインをテクニカル アーティストに任せて、そのマテリアルを使用してマテリアル インスタンスを作成し、テクニカル アーティストが公開したテクスチャやパラメータを調整するだけにしたい場合もあるでしょう。このような場合にインスタンスが役立ちます。

インスタンスのもう一つの利点は処理速度です。変更するにはシェーダーをコンパイルする必要があるため、マテリアルの変更には時間を要します。既にシェーダーがコンパイル済みであるため、 マテリアル インスタンス のパラメータ変更を即時に行うことができます (ただし StaticSwitchParameter の変更は例外です。StaticSwitches がシェーダーの複雑性を変更するのでシェーダーの再コンパイルが必要となり、常に遅くなります。)。従って、マテリアルに微調整を加えたい場合、処理速度が断然早いマテリアル インスタンスを推奨します。

