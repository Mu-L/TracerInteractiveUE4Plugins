INTSourceChangelist:2346120
Availability: Public
Title:支点描画器内容示例
Crumbs:%ROOT%, Resources, Resources/ContentExamples
Description:在支点描画器内容示例中提供的实例概述。
Related: Engine/Rendering/Materials
Related: Engine/Rendering/Materials/ExpressionReference
Related: Engine/Rendering/Materials/Functions/Reference/PivotPainter
Related: Engine/Rendering/Materials/Functions/Creating

[REGION:banner]
![](PivotPainter_Header.png)(convert:false)
[/REGION]

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Resources/ContentExamples/PivotPainter:title%](pivotPainter_compact.png)
	[/PARAM]
	[PARAM:title]
		%Resources/ContentExamples/PivotPainter:title%
	[/PARAM]
	[PARAM:description]
		%Resources/ContentExamples/PivotPainter:description%
	[/PARAM]
	[PARAM:path]
	[RELATIVE:Resources/ContentExamples/PivotPainter]
	[/PARAM]
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Resources/ContentExamples/PivotPainter:title%](pivotPainter_compact.png)
	[/PARAM]
	[PARAM:title]
		%Resources/ContentExamples/PivotPainter:title%
	[/PARAM]
	[PARAM:path]
	[RELATIVE:Resources/ContentExamples/PivotPainter]
	[/PARAM]
[/OBJECT]
[/VAR]

[TOC(start:2 end:2)]


## 概述
[支点描画器工具](Engine\Content\Tools\PivotPainter)是将模型支点和旋转信息存储在模型顶点数据中的MaxScript(Max脚本)。 这些信息可以随后在虚幻引擎4的着色系统中引用，从而创建互动效果。 

在 **内容示例** 项目中的 **支点描画器** 贴图提供了使用 **支点描画器材质函数** 的多个示例以制作达到此效果的模型，并演示了如何通过诸如风或玩家互动的多种力来操作模型。 


 
## 支点描画器贴图

![](PivotPainter_Topic.png)(w:640)

下方列出的为 **PivotPainter** （支点描画器）贴图中提供的示例： 

| 示例 |  展示的内容 |
| ------- | ------------ |
| **1.1. 缩放元素** |随时间增加/减少对对象的缩放。  |
| **1.2. 使用相机距离缩放** | 基于与玩家的距离来增加/减少对对象的缩放。 |
| **1.3. 创建独特的动画段 ** | 如何为多个对象创建独特的动画段。  |
| **1.4. 使用随机存储值来进行动画处理** | 使用随机存储值来对多个对象创建独特的动画段。  |
| **1.5. 旋转子对象** | 随时间而旋转对象。 |
| **1.6. 更新网格物体法线** | 如何随时间来旋转对象以及对象的法线。  |
| **1.7. 更新顶点着色器中的法线** | 通过顶点着色器来随时间旋转对象及其法线。 这样做节省性能消耗并增强性能表现。 |
| **1.8. 更新法线贴图** |随时间旋转对象及其法线并计算顶点着色器中的法线。 |
| **1.9. 平移子对象** | 如何使用随机的基于数字的动画来偏移对象的顶点。  |
| **1.10. 将对象移动到远离玩家的位置** | 创建与基于支点的玩家进行响应并远离它的对象（例如，草会随着玩家走过而移动，并且其不受风的影响）。 |
| **1.11. 锁定对象支点** | 类似于示例10，但同时会创建3D球体移动蒙板。 |
| **1.12. 自远离风向处旋转** | 如何创建与风向响应并基于其旋转的对象（例如，自点A向点B来回移动的对象）  |
| **1.13. 通过面向对象来限制旋转** | 类似于示例12，但限制通过面向对象属性的移动量。 通过将其方向朝向风源来限制对象的旋转量，这可以模拟树枝对风的响应。 |
| **1.14. 使用风来变更动画段** | 多个对象具有基于风的独特运动（例如，受风影响且不需玩家接触的草）。 | 
| **1.15. 使用与支点衰减偏移的距离来改进动画** | 类似于示例14，但是通过使用衰减偏移来控制移动从而应用更为自然的运动。 | 
| **1.16. 使用随机来改进动画** | 类似于示例15，但通过使用随机衰减偏移来创建更为真实的运动。 |
| **1.17. 使用贴图来进行动画处理** | 通过贴图来基于风对对象进行动画处理（这需要DirectX 10或以上）。  |
| **1.18. 使用贴图及先前的动画偏移技术** | 组合示例10到17来产生与风响应的贴图化的动画处理对象。 |
| **1.19. 组合多个旋转** | 显示玩家如何同时在顶点着色器内正确执行多种旋转。 |
| **1.20. 环境生物** | 基于与玩家的距离而进行响应的环境生物（例如，当玩家靠近时就激动的生物）。 |
| **1.21. 高级草** | 基于风而移动并对玩家接触进行响应的更为符合游戏示例的贴图化的草。 |
| **1.22. 高级棕榈树 ** | 基于风而摆动的贴图化处理的棕榈树。 |
| **1.23. 高级树** | 具有枝叶的贴图化的树，它会对风进行响应（使用层次描画器创建） |
