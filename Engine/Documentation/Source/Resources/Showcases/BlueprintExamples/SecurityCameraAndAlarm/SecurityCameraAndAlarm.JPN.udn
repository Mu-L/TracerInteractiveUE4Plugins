INTSourceChangelist:3782314
Availability:Public
Title:セキュリティ カメラの切り替えボタン
Crumbs:%ROOT%, Resources, Resources/Showcases/BlueprintExamples
Description:セキュリティ カメラと Alarm ブループリントの概要
Related:Engine/Blueprints/Overview
Related:Engine/Blueprints/UserGuide/Variables
Related:Engine/Animation/AnimBlueprints/EventGraph
Related:Engine/Blueprints/UserGuide/UserConstructionScript
Related:Engine/Blueprints/UserGuide/Components
Version:4.9


[EXCERPT:Overview]
既存カメラと直結したブループリントは、セキュリティ制御管理室です。管理室にはビデオスクリーンに囲まれたセキュリティ コンソールがあります。プレイヤーがコンソール中央にある大きなボタンを押すと、スクリーンはレベルのあちらこちらに配置されているさまざまなセキュリティ カメラからのビューの表示を切り替えます。これらのカメラはレベル全体に配置されているセキュリティ カメラと同一です。プレイヤーがビューに入り込むと、アラーム システムをトリガーします。
[/EXCERPT:Overview]

## Screen ブループリント

![](ScreenBlueprint.png)(w:600)


本来の **Screen** ブループリントは、異なる Scene Capture アクタ間を切り替えるための最適化メカニズムです。セキュリティ カメラのエフェクトは、それぞれの [Camera ブループリント](Resources\Showcases\BlueprintExamples\SecurityDoor) 内に配置されている Scene Capture アクタで作成されます。Scene Capture アクタの目的は、カメラのように機能し、捉えた画像の解像度をキャプチャすることです。画像の解像度は、後に内部ビデオスクリーンのような機能を持つ Render Target テクスチャへ送信されます。Render Target テクスチャをマテリアルに適用することにより、カメラが捉えた映像を表示するマテリアルを効果的に作成できます。

問題点？多数のカメラを同時に実行すると、全てのカメラが現在のビューをキャプチャおよび送信しなくてはいけないため、パフォーマンス問題が発生する可能性があります。問題を軽減するには、スクリーン ブループリントは一度に 1 つの Scene Capture を立ち上げて、前回使用した Scene Capture を無効にします。

![](DeactivateSceneCapture.png)(w:600)



### ブループリントの設定

このブループリントのコンポーネント リスト、コンストラクション スクリプト、そしてイベント グラフで実行されるタスクは以下の通りです。


|ブループリントの特性 |目的 |
|---|---|
| **Components List** | [INCLUDE:#ScreenCL] |
| **Construction Script** | [INCLUDE:#ScreenCS] |
| **Event Graph** | [INCLUDE:#ScreenEG]  |


### 編集可能な変数



スクリーンには以下の公開プロパティがあります。

![](ScreenProperties.png)

| プロパティ | 説明 |
| --- | --- |
| **Camera Blueprints** | シーンに配列された全ブループリントを配列に保持します。これによりそれぞれの Scene Capture アクタへアクセスすることができます。 |




## Button ブループリント

![](ButtonBlueprint.png)(w:600)

赤い大きなボタンはカメラの切り替え装置として機能します。ボタンを押すたびに、各セキュリティカメラが捉えた異なるビューを表示します。

ボタンはアラームとカメラの相互作用を機能させるブループリント インターフェースと同様の手段で作用します。ブループリント内の別の機能構成要素として、機能は **Monitor Camera Swap** という名前で呼ばれます。特定のアクタに呼び出すことができるリモートイベントなどに使用します。つまり、スクリーンに呼び出すことができます。 

Button ブループリントは、トリガーボリュームとして使用する、Box Component も含んでいます。プレイヤーがボタン領域内にいるかどうか、また、ボタン上に表示するヘルプテキストをプレイヤーに表示するか否かを決定するために、プレイヤーに [E] キーを押すように指示します。

![](EToInteract.png)(w:600)

[REGION:lightbox]
[Infiltrator デモのロボット工場をシャットダウンするために使用するボタンとコンソールであることに気付いたらボーナス ポイント](InfiltratorDesk.png)
[/REGION]


### ブループリントの設定

このブループリントのコンポーネント リスト、コンストラクション スクリプト、そしてイベント グラフで実行されるタスクは以下の通りです。


|ブループリントの特性 |目的 |
|---|---|
| **コンポーネント リスト** | [INCLUDE:#ButtonCL] |
| **コンストラクション スクリプト** | [INCLUDE:#ButtonCS] |
| **イベント グラフ** | [INCLUDE:#ButtonEG]  |


### 編集可能な変数



ボタンには以下の公開プロパティがあります。

![](ButtonProperties.png)

| プロパティ | 説明 |
| --- | --- |
| **Screen Blueprints** | シーン内の全スクリーン ブループリントを保持する配列を含んでいます。|
| **Camera Blueprints** | シーンに配置されている全カメラ ブループリントを保持する配列です。 |







[COMMENT:none]
------------------------------



[EXCERPT:ScreenCL]
スクリーンの コンポーネントリスト は、とても単純です。スクリーン自体の単一スタティックメッシュのみを格納します。
[/EXCERPT:ScreenCL]


[EXCERPT:ScreenCS]
コンストラクション スクリプトは以下のタスクを実行します。
* スクリーンメッシュに [Material Instance Dynamic (MID)](Engine/Rendering/Materials/MaterialInstances) を作成して適用します。
[/EXCERPT:ScreenCS]



[EXCERPT:ScreenEG]
イベント グラフは以下のタスクを実行します。
アラーム インターフェースから「Camera Swap (カメラの切り替え)」シグナルを受信すると以下が行われます。
* 前回のキャプチャ アクタをオフにします。
* スクリーン マテリアルのノイズを操作するタイムラインを再生します。
* 次の Scene Capture アクタをアクティベートします。
* スクリーン上部のテキストを変更するために、スクリーンのマテリアルに特殊なテクスチャと UV を使用します。
[/EXCERPT:ScreenEG]



[EXCERPT:ButtonCL]
ボタンのコンポーネント リストは以下のように設定します。
![](ButtonComponents.png)

[/EXCERPT:ButtonCL]


[EXCERPT:ButtonCS]
コンストラクション スクリプトは機能しません。
[/EXCERPT:ButtonCS]



[EXCERPT:ButtonEG]
イベント グラフは以下のタスクを実行します。
* プレイヤーがボックス コンポーネントへ立ち入ったタイミングを確かめます。
* プレイヤーが一度コンポーネント内に立ち入ると、ヘルプテキストを作成します。
* 作成したヘルプテキストを、プレイヤーに向けて回転します。
* プレイヤーがボックス コンポーネント内にいる間、 **[E]** キーからの入力を処理します。
* プレイヤーが **[E]** キーを押した場合、ボタンをアニメートして [Monitor Camera Swap] 機能を全スクリーン上に呼び出します。
* プレイヤーがボックス コンポーネントから立ち去った時、ヘルプテキストを破壊して、 **[E]** キーからの入力処理を停止します。
[/EXCERPT:ButtonEG]

-------------------------------
[/COMMENT]

