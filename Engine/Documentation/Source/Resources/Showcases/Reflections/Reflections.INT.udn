Availability: Public
Title:Reflections 
Crumbs:%ROOT%, Resources
Description:An overview of the Reflections Example included with UE4.
Related: Engine/Rendering/LightingAndShadows/ReflectionEnvironment
Related: Engine/Rendering\LightingAndShadows
Related: Engine/Rendering/Materials
Related: Engine/Rendering/PostProcessEffects/ScreenSpaceReflection
Related: Resources/ContentExamples/Reflections/1_4
Related: Resources/ContentExamples/Reflections/1_3
Version: 4.9
topic-image:Reflections_Topic.png


[REGION:fullwidth]
![](ReflectionHeader.png)
[/REGION]

[TOC(start:2 end:2)]

This example shows off the real-time reflection capabilities of Unreal Engine 4. The scene shows a rundown subway terminal with a lot of water leaks, grimy ceramic tiles, dilapidated pipe work, and other worn-out environment details. In this document, we will give a high-level rundown of the techniques employed and the features involved in bringing the effect together.

The following image shows the reflections in this scene blending on and off to demonstrate their effect.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
JZaQVznNBcA
[/PARAMLITERAL]
[/OBJECT]


## Reflection Environment

[INCLUDE:Engine/Rendering/LightingAndShadows/ReflectionEnvironment#RefEnvIntro]

![](Engine/Rendering/LightingAndShadows/ReflectionEnvironment\reflection_environment.png)(w:600)

For more information on the Reflection Environment and Reflection Captures, please see [](Engine/Rendering/LightingAndShadows/ReflectionEnvironment).

## Reflection Capture Actors

![](CaptureIcon.gif)

Reflection Capture Actors are objects that are strategically placed throughout the level and feed reflection data into the Reflection Environment. 

[INCLUDE:Engine/Rendering/LightingAndShadows/ReflectionEnvironment#RefCaptures]


For more information on the Reflection Environment and Reflection Captures, please see [](Engine/Rendering/LightingAndShadows/ReflectionEnvironment).

## Screen Space Reflections

Screen space reflections are an engine feature that aid in the grounding of objects on flat surfaces like the ground. They are activated by default, and blend with the results of the Reflection Environment to give a more complete sense of reflection. 

![](ScreenSpaceReflections.gif)

Screen space reflections are active by default in Unreal Engine 4, but can be toggled using the console command _r.SSR.Quality 3_ or _r.SSR.Quality 0_ depending on the set.
Below is the results of the reflection example scene both with (r.SSR set to 1) and without screen space reflections (r.SSR set to 0).

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
DUe4z3-5WvU
[/PARAMLITERAL]
[/OBJECT]


## Reflection Considerations

When creating environments built to make use of reflections, our artists keep a few considerations in mind:

### Contrast

Reflections will tend to be more pronounced and apparent in areas where there is a strong sense of overall light and shadow contrast. Just as in the real world, reflections will tend to "pop" in environments that are generally dark in and of themselves, but are cast in harsh lighting conditions. This is why the subway scene used in this example was selected. Being underground, there is no real source of natural light. The few light fixtures are spaced well apart and are rather bright. This means that the pools of shadow and darkness will become prime locations for reflections to stand out to the viewer or player.

![](Contrast.png)(w:600)


### Real-World Reflective Surfaces

Along with use of contrast, it is also important when creating realistic reflections to consider the types of surfaces that would create reflections in the real world. In the case of this demo, we chose to use wet concrete on the floor with ceramic tile on walls. Water is dripping and running across most of the scene, adding reflectivity to most of the environment. This, of course, means that clever creation of materials is key to getting a good look. 

For more information about material creation, please check out our [](Engine/Rendering/Materials) and [](Engine/Rendering/Materials\PhysicallyBased) documentation.

![](Subway.png)(w:600)



### Placing Reflection Captures

![](ReflectionActors.png)(w:600)

The key to getting reflections just right is to place Reflection Capture Actors across your scene. Your first impulse may be to scatter these Actors across your scene until you see a good result. However, there are some rules to keep in mind when using these Actors:

* **Screen Space** - Each of the Reflection Capture Actors incurs a cost based on how much of your screen is covered by its radius. In this way, they are similar to particles or dynamic lights. This means that you need to be careful not to over-push the radii of your capture Actors.

* **Overlap** - Reflection Capture Actor radii can overlap. This increases the per-pixel cost of reflections caused by overlapping Actors. When combined with the fact that cost increased by screen space, it may quickly become performance prohibitive to simply cover your scene with high-radius Reflection Capture Actors. 

* **Hierarchical Placement** - To save resources and still have a nice layout of Reflection Capture Actors, using a hierarchical layout gives you a solid reflection setup with minimal overlap. In such a system, one large-radius capture is placed that grabs reflections from the background, and then a series of smaller capture Actors grab reflections around details. 

[REGION:raw]
![](LevelReflection.png)(w:600)
[/REGION]
	
[REGION:simpletable]
|||
| --- | --- |
| [REGION:red]**RED**[/REGION] | Large radius. Reflects bulk of the level and the background. |
| [REGION:blue]**BLUE**[/REGION] | More localized reflection. Captures individual rooms. |
| [REGION:green]**GREEN**[/REGION] | Detail reflection with small radius. Placed in areas where small important details are required. |
[/REGION]

## Related Topics




