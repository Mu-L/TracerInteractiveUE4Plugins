Availability:NoPublish
Title: 状态机
Crumbs:
Description: 状态机允许把骨架动画分解为各种状态，并且可以充分地控制从一个状态到另一个状态的混合方式。

[EXCERPT:DummyExcerpt]

[/EXCERPT:DummyExcerpt]



[EXCERPT:UAnimStateNode]

从概念上讲，最好把状态想象成为一个组织良好的动画图表部分，我们知道角色或骨架网格物体将会定期地混入及混出该状态。 然后，您可以变换到图表的这部分中或者从这部分变换出来。 比如，您的角色动画可能有一个空闲状态，而且该状态可能仅包含一个单独的动画。 

这是在状态机看到的空闲状态。

![](State.png)

当双击它时，会显示空闲状态中的简单图表。

![](IdleStateInside.png)

一旦角色开始移动，它们可以变换到Movement(移动)状态 - 该状态下可以定义角色在表面上横向移动的效果，比如走路或跑动。

![](MoveState.png)

在这个状态中，可以包含[混合空间](Engine/Animation/Blendspaces)，该混合空间由角色的运动速率和运动方向定义。

![](MovementInside.png)

状态内部及其本身都没有引脚，因为我们想让它们具有更加灵活的布局。 要想把一个状态连接到另一个状态上，仅需简单地从该状态的外边缘拖拽一条线即可。 这个操作也可以用于创建新状态，就像在蓝图中创建一个新节点一样。

![](DragWire.png)
[/EXCERPT:UAnimStateNode]




[EXCERPT:UAnimStateConduitNode]


Conduits(通道)是一种更加高级的、共享的变换资源。 变换规则始终是简单地从一个状态变换到另一个状态的1-对-1的变换关系，而通道可以实现一-对-多、多-对一、多-对-多的变换关系。 

![](ConduitNode.png)

比如，您可能会遇到这样的情况，当一个角色被杀死时，您有多个可播放的动画。 首先，您可以使用简单的变换规则，它规定当角色的生命值小于等于零时，角色进入Death（死亡）状态。 但是，如果要进入的状态不只一个，那么该变换就可以使用通道，您可以执行一系列的判断来确定玩家是如何死的(枪杀、刺死、炸死、撞死、铁砧打入头部等)，然后从此开始展开分支，对应进入不同的独立死亡状态。 

这样的图表如下所示（可能有一点简化）:

![](ConduitGraph.png)

在内部，通道图表和变换规则看上去是一样的：

![](ConduitInside.png)

然后，退出通道的实际变换规则可以随后决定死亡的类型，并允许混合到适当的状态中。
[/EXCERPT:UAnimStateConduitNode]






[EXCERPT:UAnimStateTransitionNode]


一旦您定义完了状态，您需要能够控制您的网格物体从一个状态变换到另一个状态。 这就是变换规则发挥作用之处。 变换规则是沿着连接状态的连线而自动创建的。

![](TransitionRule.png)

变换规则可以对多个变量的值进行任意数量的判断及检测，最终的目的是输出一个 True/False 值。 这个布尔值输出决定了该动画是否可以执行该变换。 

![](TransitionRuleInside.png)

在这个示例中，我们检测了角色的Speed(速率)的值。 一旦该值大于10，我们将启用该变换。 在这种情况下，角色可以从Idle (空闲状态)移动到Movement（运动）状态。 然后，我们可以使用一个完全独立的规则来返回到空闲状态。 比如，这里我们有一个从运动状态返回到空闲状态的变换规则。

![](TransitionRuleReturn.png)

在内部，这个规则判断我们变换为运动状态所使用的同一个值是否不再为true。 

![](TransitionRuleReturnInside.png)

有关变换规则及其属性的更多信息，请参照[变换规则文档](Engine/Animation/StateMachines\TransitionRules)。
[/EXCERPT:UAnimStateTransitionNode]





[EXCERPT:UAnimGraphNode_Root]

当您在动画图表中处理完动画后，连接最终动画姿势的结果到此节点上以应用其到网格物体上。
[/EXCERPT:UAnimGraphNode_Root]


[EXCERPT:UAnimGraphNode_StateMachine]

状态机是一系列状态，变换和通道的集合。 状态机会基于在状态转换中定义的规则来改变状态。 每个状态都是理论上的自包含动画图表，而且可以输出动画姿势。 可以随后在包含状态机的动画图表中进行进一步操作。
[/EXCERPT:UAnimGraphNode_StateMachine]
