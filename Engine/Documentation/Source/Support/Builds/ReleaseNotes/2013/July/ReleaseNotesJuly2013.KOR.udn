INTSourceChangelist:6537038
Title: 2013년 7월 릴리즈 노트
Crumbs:%ROOT%, Support/Builds
Description:
Availability:Licensee
Parent:Support/Builds
Order:-7
Order: 51

[TOC(start:2 end:2)]

## 빌드 정보


[REGION:simpletable]
| 항목 | 정보 |
| ---- | ---- |
| **Label** | QA_APPROVED_UE4_BUILD_2013_07 |
| **Changelist #** | 1735924 |
| **VISUAL STUDIO VERSION** | Microsoft Visual Studio 2010 version 10.0.40219.1 SP1 Rel |
| **DIRECTX** | June 2010 |
[/REGION]

## 중요 정보

 * 현재 엔진 개발 로드맵 : [UE4 로드맵](https://udn.unrealengine.com/questions/topics/roadmap.html)
 * QA 빌드 디렉터리 변경: [2013년 7월 QA 빌드 디렉터리 변경](https://udn.unrealengine.com/questions/170530/qa-build-directory-changes-201307.html)
 * 수정된 버그: [수정된 버그 2013년 7월](UE4_Fixed_2013_July.xlsx)
 * 알려진 문제: [UE4 미해결 버그 2013년 7월](UE4_Bugs_2013_July.xlsx)


## 주요 신기능

####Editor Tools
* **Plugins Editor**
	* There is now a new interface that lets you see, browse and maintain Plugins -  both built-in plugins as well as plugins installed into your game project     
		![](pluginsEd.png)
	* 카테고리를 둘러보고 검색/필터를 적용하거나 플러그인 켜고/끄기나 설치해제까지, 모두 이 인터페이스에서 가능합니다.
* **신규 PlayerController 및 마우스 인터페이스 이벤트**
	* PlayerController 를 통한 새로운 마우스 인터페이스 / 커서 시스템이 구현되었습니다.  
		![](nc1.png)
	* ShowMouseCursor enables the system and will begin displaying the default mouse cursor when in-game.  NOTE: this does not work with Play in Viewport, you must use Play in New Window
	* The interface uses a very simple set of input touch events and index in order to "touch" an object:  
		![](mc2bpnode.png) ![](mc2bpnode2.png) ![](mc2bpnode3.png)
* **배치 브라우저를 통한 볼륨 추가**
	* 이제 여러가지 유형의 볼륨을 배치 브라우저를 통해 놓을 수 있습니다!  
		![](PBVolume.png)(h:480)
* **Play In 인터페이스 개선**
	* Play In 버튼이 다시 현재 활성 Play 모드에 강조되도록 변경되었습니다.
	* 메뉴도 개편되어, PlayInNewProcess 가 PlayOn 에서 Play In 으로 이동되었습니다:  
		![](playin.png)

####블루프린트
* **블루프린트에서의 본 조작**
	* 본의 직접 조작을 위한 블루프린트 함수가 있는 컴포넌트(PoseableMeshComponent)를 추가했습니다.  
		![](BPbones.png)(h:480)
	* 이제 스켈레톤의 본에서 위치/방향/크기를 직접 구하거나/설정할 수 있고, 리셋까지 가능합니다.


##추가사항

####블루프린트
* 반환값이 없는 함수로의 블루프린트 호출이 유효하지 않은 타깃에서 호출되어도 더이상 'Access None' 로그 오류가 나지 않습니다.
* 블루프린트 디버깅 기능이 개선되었습니다 (이제 실행 시퀀스를 디버깅할 수 있으며, impure 함수의 중단점에 대한 퇴보를 고쳤습니다).
* 블루프린트 부모변경시 블루프린트 경고가 새로 생겼습니다.
* 액터 삭제시 레벨 블루프린트나 다른 액터의 블루프린트에서 참조되고 있음을 알리고, 사용자가 조치를 취할 수 있도록 해 주는 검사를 추가했습니다.
* 블루프린트 에디터에서 그래프 유형을 구분하고 렌더링을 단순화시키기 위한 아이콘을 추가했습니다.


####사운드
* 이제 Reverb Volume 없이도 Reverb Settings 를 지정할 수 있습니다.


####코어
* 이제 툴팁의 코멘트에 UENUM 과 그 값이 표시됩니다. 앞에 붙는 코멘트여야 합니다.
* 재배포가능 플러그인이 지원됩니다.
	* Monolithic 빌드에서, 플러그인은 이제 빌드 시간에 주 실행파일 속으로 링크되는 정적인 라이브러리를 생성합니다.
	* 이 라이브러리에 대한 소스 코드가 존재하지 않는 경우, 그 lib/dll 파일이 이미 컴파일되고 링크 인 되었다 가정합니다.
* SCOPE_LOAD_TIME 매크로를 추가, 코드 블록을 실행시키는 데 시간이 얼마나 걸리는지를 로그에 출력시킵니다. 로드 시간을 모니터링하는 데 사용합니다.
* 컨테이너, 스트링, 얼로케이터 에서의 Move 시맨틱으로, (컨테이너를 값으로 반환하는 함수 등) 임시 컨테이너 복사 작업이 최적화됩니다.
	* (std::move 에 상응하는) move 연산을 명시적으로 발동시키는 MoveTemp 함수도 있습니다.
* (클래스 리디렉터를 가진) 다른 클래스에서 오브젝트가 로드될 때의 노티파이 함수 UObject::LoadedFromAnotherClass 를 추가했습니다.
	* 단일 스레드로 엔진을 실행시키는 기능을 추가했습니다 (-singlethread 명령줄 파라미터)
	* 임의의 DDC pak 갯수를 mount 시키는 기능을 추가했습니다 (DDC.MountPak, DDC.UnmountPak 콘솔 명령)
	* DDC pak 파일의 2GB 제한을 제거했습니다.


####에디터 툴
* **슬레이트와 UI**
	* STextBlock 에 자동 줄바꿈 기능이 지원됩니다 (새로운 AutoWrapText 특성).
		* 위젯의 여분 공간에 맞춰 텍스트를 자동으로 줄바꿈 합니다.
		* 중요한 주의사항이 있습니다. 자세한 정보는 파라미터 코멘트를 참고하세요!
	* 터치 스크린 플랫폼(, -faketouches/-simmobile 옵션으로 데스크톱)용 (초기 단계) 슬레이트 가상 조이스틱을 추가했습니다 

* **에디터**
	* 현재 프로젝트 이름이 제목줄 오른쪽 멀리에 표시됩니다.
	* 주요 탭 뿐만 아니라 모든 탭에 닫기 버튼을 추가했습니다.
	* 우클릭 컨텍스트 메뉴에서 "Select All Brushes" (모든 브러시 선택)이 가능합니다.
	* SIE/PIE 에서 실행시간에 스폰된 임시 액터를 숨기는 씬 아웃라이너 필터를 추가했습니다.
	* 씬 아웃라이너에 'Show Only Selected' (선택만 표시) 뷰 모드가 추가되었습니다.
	* 일부 씬 아웃라이너 코드를 리팩터링, 다른 필터와 기능의 추가로 인한 침입이 덜하도록 만들었습니다.
	* 이제 씬 아웃라이너가 독립형 위젯 모드에 있을 때는 액터 수가 항상 표시됩니다.
	* 스크롤바의 스크롤 영역에 클릭하면 뷰를 해당 스크롤 위치에 맞추도록 하여 그 이후의 드래깅으로 계속해서 스크롤이 가능합니다.
	* 액터 이름변경 작업이 씬 아웃라이너에서 바로 가능합니다.
	* 이제 현재 스트리밍 메서드에는 현재 레벨 선택에 일치하는 옵션들 옆에 틱이 표시됩니다.
	* 이제 Open Project 창을 억제시킬 수 있습니다.
	* "Convert" 작업의 타깃 클래스 선택시 클래스 항목에 툴팁을 추가하여 타깃 클래스가 더욱 잘 표시되도록 했습니다.
	* Replace Actor With 기능으로 호환 애셋이 포함된 메시 컴포넌트가 있는 액터를 대체시키는 경우, 칠해놓은 메시 버텍스 컬러가 보존됩니다.
	* 이미 마티네의 일부인 액터가 후속 마티네에 추가되지 않았는지 확인하기 위한 검사를 추가했습니다.

* UnrealBuildTool: 프로젝트 파일 생성기에 Visual Studio 2013 이 지원됩니다.
	* "GenerateProjectFiles.bat -2013" 로 프로젝트를 생성합니다. 참고로 아직 VS 2013 으로는 컴파일이 불가능합니다.

* **프로파일러**
	* 다중 인스턴스에 대한 첫 지원으로, 사용자는 한 번에 여러 인스턴스 캡처/미리보기가 가능합니다.
	* 프로파일러의 안전성이 약간 개선되었습니다.

* **랜드스케이프**
	* PDI->DrawLine() 에 DepthBias 가 지원됩니다.
	* 에디터에 랜드스케이프 스플라인용 메시가 선택되어 있지 않은 경우, 확인과 선택 편의를 위해  간단한 평면 메시로 렌더링합니다.
	* 이제 랜드스케이프에 머티리얼 드래그 & 드롭이 가능합니다.


####게임플레이 및 프레임워크
* **피직스**
	* 이제 PhAT 작업방식이 Body 용과 Constraint 용 두 가지로 분리되었습니다. 툴바 버튼으로 모드를 전환합니다.
	* SkeletalMesh Partial 래그돌이 지원됩니다.
		* 각 바디는 PhAT 에서 고정/미고정/기본 으로 정의됩니다.
		* 시뮬레이션과 블렌딩이 별도의 연산입니다. 피직스에 시뮬레이션은 멈추되 계속해서 블렌딩은 가능합니다.
		* 예를 들어 각 BodyInstance 에 대해 PhysicsBlendWeight 를 수정할 수 있습니다.

* **DisplayAllLocation**, **DisplayAllRotation** 명령을 추가했습니다. 
	* UE3 의 `displayall [actorclass] location` 과 `displayall [actorclass] rotation` 처럼 사용됩니다.
* Pawn 에 **AutoPossess** 플래그가 가능합니다. Actor 의 **AutoReceiveInput** 과 비슷합니다.
* **Replication** RepNotify: 리플리케이트된 프로퍼티의 이전 로컬 값을 구하는 기능이 추가되었습니다: [링크](https://udn.unrealengine.com/questions/168304/repnotify-how-can-i-find-the-previous-value-of-a-r.html)


####플랫폼
* 대부분의 플랫폼에 APEX Clothing 이 지원됩니다.
* Generic PlatformProperties 에 새 함수가 추가되었습니다:
	* **SupportsFastVRAMMemory** - 플랫폼이 FastVRAM 패스를 지원하면 True, 아니면 False (디폴트)를 반환합니다.
* TexCreate 와 BUF 힌트 플래그를 새로 추가했습니다: `*_FastVRAM`
	* 가능하다면 RHI 가 텍스처나 버텍스/콘스턴트 버퍼에 FastVRAM 을 사용하도록 합니다.
* 기본 FFastVRAMAllocator 클래스를 추가했습니다 (기본적으로 아무것도 하지 않습니다).


####렌더링
* 프리미티브 유니폼 버퍼는 이제 로컬 스페이스 바운드를 포함합니다.
* 'ObjectLocalBounds' 엔진 머티리얼 함수를 추가, 로컬 스페이스 바운드에 접근할 수 있는 머티리얼 시스템이 제공됩니다.
* 'Alpha' 의 텍스처 압축 유형을 새로 추가했습니다 (싱글 채널, 감마 보정 없음).
* 큐브나 2D 텍스처에서 'Create Static Texture' 를 할 때 HDR (float16) 소스 텍스처가 지원됩니다.
* Microsoft 의 새로운 섀도잉 메서드를 기본으로 사용합니다 (이전 메서드는: r.shadow.method 0)
	* 드로 콜 수가 적습니다.
	* 코드가 단순합니다.
	* z 거리 기반입니다 (전에는 방사형(radial) 이었습니다).
	* 캐스케이드 이행이 부드럽습니다.
	* 섀도 바이어스 개선과 아울러 다이내믹 섀도 퀄리티가 약간 향상됩니다.
* 포워드 셰이딩 (ES2) 패스가 이제 HDR, 노출, 블룸을 지원합니다.
* MinRoughness 라이트 파라미터를 추가했습니다 (fill light 에 매우 유용합니다).


####애니메이션/페르소나
* 이제 콘텐츠 브라우저의 컨텍스트 메뉴를 통해 스켈레탈 메시에서 Animation Blueprint, Montage, Blendspace, AnimOffset 애셋을 바로 만들 수 있습니다.
* AnimGraph 가 '애니메이션으로 익스포트' 기능을 지원합니다.
	* 현재 애님 그래프를 애니메이션으로 익스포트할 수 있습니다 (상체/하체 분리 또는 스프링에 좋습니다).
* 스태틱 메시 에디터에서 소켓을 복제할 수 있습니다.
* 이제 스태틱 메시/스켈레탈 메시 이외의 컴포넌트에 대해서도 소켓 선택이 가능합니다.
* 페르소나에서 모드가 변경되어도 현재 애니메이션이 유지됩니다.
* 모드 전환시 뷰포트 상태의 모든 옵션이 확실히 유지되도록 했습니다.



##업그레이드 노트

####블루프린트
* 블루프린트 상속(블루프린트의 블루프린트)이 공식적으로 가능해 졌습니다! 이제 새 블루프린트를 만들 때 클래스 브라우저에서 부모 클래스를 선택하거나, 콘텐츠 브라우저에서 블루프린트에 우클릭한 다음 "Create child of this blueprint..." 를 선택해서, 블루프린트의 블루프린트를 만들 수 있습니다.
* 이제 블루프린트는 TWeakObjectPtrs 를 제대로 지원하기에, 그 포인터를 파라미터로 사용하는 UFUNCTION 을 보다 안전하게 실행할 수 있습니다.
* 이제 블루프린트를 레퍼런스 전달 변수로 설정 가능합니다. 내부적으로 파라미터 값을 수동 조작할 필요가 있어서 파라미터를 참조 전달하는 함수에 좋습니다.
* 애셋 트리에 블루프린트 생성용 스크롤바가 추가되었습니다.
* VimBlueprint (빔 블루프린트)를 AnimBlueprint (애님 블루프린트)로, VimInstance (빔 인스턴스)를 AnimInstance (애님 인스턴스)로 바꿨습니다. 변수 이름과 코멘트에서 "Vim" 이라는 단어를 제거하도록 업데이트했습니다.


####사운드
* 사운드 클래스 에디터가 새로 생겼습니다. 모든 SoundClass 가 부모를 딱 하나만 갖도록 하려면 모든 SoundClass 를 로드한 다음 재저장할 것을 추천합니다.
	* 부모가 여럿 있는 로드된 SoundClass 에 대해서 부모 하나로 강제하기 전 로그 경고가 생성됩니다.
	* 이 경고를 통해 해당 SoundClass 에 부모가 제대로 설정되었는지 확인하세요. 알파벳 순서로 처리되기에 예상한 바와 다를 수가 있습니다.
	* 새 에디터에서는 SoundClass 의 위치를 저장하지 않으며, 에디터에서 열 때마다 자동 배치합니다.
* 이제 SoundCue 액터에 Find in Content Browser 옵션이 생겼습니다.


####코어
* FString 이 리팩터링 되었습니다.
* FString 이 더이상 TArray 에서 상속되지 않습니다.
* InStr 이 Find() 로 대체되고, Contains() 가 추가되었습니다 ( **주: 파라미터와 그 기본값이 변경되었습니다!!!** )
* Split 함수의 파라미터가 변경되었습니다.
* EndsWith, StartsWith, Replace, ReplaceInline, MatchesWildcard 는 이제 부울 대신 ESearchCase 를 두 번째 인수로 받습니다.
* 스트링 함수의 기본 동작이 대소문자를 구분하지 않도록 변경했습니다.
* 모든 FFileName 함수를 FPaths 로 이동하고 스태틱으로 만들었습니다. 이제 스트링에도 바로 작동합니다.
* FFilename 유형을 제거했습니다.
* 파라미터 최대 5 개까지의 오버로드 포함 FPaths::Combine() 을 추가했습니다.
* 경로 연결 연산자 `*` 와 `*=` 를 `/` 와 `/=` 로 대체했습니다.
* CoreMisc.h/.cpp 의 FPaths 를 Paths.h/.cpp 로 옮겼습니다.
* USTRUCT 는 더이상 UFUNCTION 을 가질 수 없습니다.
* TPreallocatedArray`<Type, Count>` 가 위험요소로 인해 제거되었습니다. 대신 `TArray<Type, TFixedAllocator<Count> >` 를 사용해야 합니다.
* FQuat::operator- 의 구현이 직관적이지 않아서 제거되었습니다. 사용하시던 라이선시 께서는 기존 레퍼런스를 FQuat::Inverse() 로 변경해 주시기 바랍니다.
* TemplateMapMetadata 애셋 유형을 폐기시켰습니다.
	* 템플릿 맵은 이제 DefaultEngine.ini 의 [/Script/UnrealEd.UnrealEdEngine] 섹션에 설정됩니다 (예로는 BaseEngine.ini 참고).
	* 게임에 TemplateMapMetadata 애셋이 있는 경우, 콘텐츠 브라우저에서 텍스트 필터를 사용하여 찾아 지우시기 바랍니다.
* CurveEdPresetCurve 애셋 유형을 폐기시켰습니다.
	* 이 애셋 인스턴스가 게임에 있는 경우, 콘텐츠 브라우저에서 텍스트 필터를 사용하여 찾아 지우시기 바랍니다.
* 플러그인은 로드하기 전 활성화시켜야 합니다. 플러그인을 활성화시키려면 DefaultGame.ini 파일의 [Plugins] 섹션 내 EnabledPlugins 리스트에 추가해 주시기 바랍니다.
* TContainerTraits 가 TTypeTraits 로 변경되었습니다.
	* 그 이유는 컨테이너의 특성을 나타내는 TContainerTraits 클래스가 새로 생긴 반면, TTypeTraits 는 컨테이너 요소의 특성을 나타내기 때문입니다.
	* 자체 유형 중 TContainerTraits 로 전문화된 것이 있는 경우, TTypeTraits 전문화된 것으로 바꿔줘야 합니다.
	* 'NeedsMoveConstructor' 와의 구분을 위해 'NeedsConstructor' 특성 이름을 'NeedsCopyConstructor' 로 바꿨습니다.


####에디터 툴
* **에디터**
	* CalcCamera 의 시그너처와 약간의 기타 내부 카메라 메서드가 (느슨한 변수 대신 FMinimalViewInfo 구조체를 사용하도록 전환하는 등등) 변경되었습니다.
	* GET_MEMBER_NAME_CHECKED 에 비트필드가 지원됩니다.
	* 확장성 개선:
		* 커스텀 노드 팩토리에 더해 커스텀 핀 팩토리를 등록시키는 것이 가능해 졌습니다.
		* UWorld 라이프사이클 델리게이트를 추가했습니다.
		* virtual APlayerController::GetAudioListenerPosition 을 추가했습니다.
	* 이제 마티네 커브 트랙을 처음 추가할 때 올바르게 표시됩니다.
	* Check Out Assets 창이 뜰 때, 이제 Check Out Selected 버튼에 포커스가 잡혀 엔터를 치면 그 옵션이 선택됩니다.
	* 마티네 키프레임 Set Time 에 되돌리기/다시하기가 지원됩니다.
	* 이제 레벨 에디터 위젯에 오브젝트 스케일 음수값이 허용됩니다.
	* 레벨 에디터 위젯으로 오브젝트의 스케일이나 로테이션을 변경하면 커서가 초기 위치로 돌아갑니다.
	* 스트리밍 볼륨 메뉴 옵션이 레벨 메뉴의 레벨 섹션 내 서브메뉴로 이동되었습니다.
	* 패키지 저장 실패시의 오류 메시지를 개선시켰습니다.
	* 이제 마티네 그룹에서 액터를 선택하면 씬 아웃라이너에서 액터를 선택합니다.
	* 이제 마티네 유형 프로퍼티가 없는 액터에 대해 마티네 트랙을 추가하려 하면 오류 메시지가 표시됩니다.
	* 씬 아웃라이너는 이제 Actors Component Mobility 변수에 대해 두 번째 아이콘이 표시됩니다.

* **랜드스케이프**
	* Retopologize 툴 + XYOffect 을 활성화시켰습니다.
	* LandscapeMeshCollision 컴포넌트에 쿠킹된 PhysX 데이터를 추가시켰습니다.


####게임플레이 및 프레임워크
* **짧은 패키지 이름에 대한 지원이 ini 파일에서 제거되었습니다. 섹션 이름도 포함됩니다.**
	* `[Engine.GameEngine]` 같은 클래스 섹션 이름을 `[/Script/Engine.GameEngine]` 로 바꿔야 한다는 뜻입니다.
* AEnvironmentVolume 가 제거되었습니다.
* 이제 인풋 바인딩에 인풋을 컴포넌트 별로 바인딩하는 대신 바인딩 별로 소모되도록 지정할 수 있습니다. 컴포넌트에 ConsumeNone/Bound/All 를 지정하는 대신 각 바인딩에는 bConsumesInput 부울으로 그 인풋을 소모시킬지 나타내고, 컴포넌트는 bBlocksInput 부울으로 후속 컴포넌트가 입력을 받도록 할지를 나타냅(이전의 ConsumeAll 과 같습)니다.
* FGameWidgetWorldContext 가 FGameWorldContext 로 바뀌었습니다.
* 여러가지 MovementComponents 이름을 작명 규칙에 맞도록 바꿨습니다:
	* Character
	* Rotating
	* Projectile
	* Vehicle
	* Shooter
* 게임 전용 코드에 (UNavigationSystem 에서 파생되는) 커스텀 내비게이션 시스템 클래스 정의를 위한 옵션을 도입했습니다.
* **콜리전 프로파일 리팩터링**
	* ECC_WorldTrace 가 사라졌습니다. 고정된 지오메트리를 찾는 경우, ECC_Static 을 사용하세요 (무브먼트 채널은 ECC_Static, Mobility 는 Movable 아님)
	* 글로벌 디폴트 값은 코드와 INI 파일을 통해 정의됩니다. 글로벌 디폴트는 더이상 모든 블럭이 아닙니다.
		* 기본 채널 디파인(글로벌 디폴트)에 DefaultResponse 가 포함되도록 문법을 변경했습니다.
				
				+CustomTraceChannel=(Channel=GameTraceChannel1, Name=Interact, Response=Ignore)
		* Profile 정의에서 DefaultResponse 를 제거했으나 글로벌 디폴트에서 시작됩니다.
	* CollisionResponse 데이터 구조체가 글로벌 디폴트에서 변경된 채널만 허용하도록 변경되었습니다 (CDO 값이 아니라 글로벌 디폴트 입니다).
	* 계속해서 변경중입니다!
* **UPhysicalMaterialProperty 를 폐기시켰습니다**. 이제 PhysicalMaterial 에는 일반적인 Enum 값이 들어가며, DEFAULT.INI 에서 수정할 수 있습니다.
	* 이제 Engine 에 프로젝트 별로 커스터마이징 가능한 EPhysicalSurface Enum 이 생겼습니다.
	* UPhysicalMaterialProperty 와 모든 자손 클래스를 폐기시켰습니다.
	* `DefaultEngine.INI` 안의 예제입니다:

			[PhysicalMaterial.SurfaceTypes]
			SurfaceType1=Asphalt
			SurfaceType2=Dirt
			SurfaceType3=Water
* APawn 에서 MeleeRange 변수를 제거했습니다. 로컬 폰에서 사용중이라면, 게임의 파생 클래스에 넣어줘야 합니다.
* **SkeletalMeshComponent 에서 PhsyicsWeight 를 제거했습니다**. 각 BodyInstance 에 대해 `bBlendPhysics` 를 사용하거나 `PhysicsWeight` 를 정의하시기 바랍니다.


####온라인
* Steam 을 참조하던 OnlineSubsystemLive 의 오타를 수정했습니다.
* HTTP 를 플랫폼 레이어에 들여왔습니다:
	* 이제 각 플랫폼에는 자체적인 http 요청/반응이 있습니다.
	* 참고로 일부 플랫폼은 아직 구현되지 않아 GenericPlatformHttp 를 사용합니다.


####렌더링
* (다른 렌더 스레드 명령과의 순서대로) 렌더 스레드에 전파된 상태를 구하기 위한 콘솔 변수 플래그 ECVF_RenderThreadSafe 을 새로 만들었습니다. 다른 스레드에는 작동하지 않습니다.
* 이제 앰비언트 큐브는 둘 이상의 포스트 프로세스 볼륨과 합칠 때 add 대신 lerp 연산을 합니다.
* 앞으로의 반복처리를 위해 애디티브 항을 제거했습니다.


####플랫폼
* PrepTargetForDeployment 함수가 TargetType 만 받기 보다는 TargetRules 오브젝트를 받도록 변경했습니다.
* D3D11Drv 를 D3D11RHI 로 바꿨습니다.
* 모든 D3D11 RHI 를 하나의 모듈로 병합했습니다.
	* WinRTRHI 를 삭제했습니다.


####애니메이션과 페르소나
* 스태틱 메시 에디터 소켓 프로퍼티 변경을 되돌리기/다시하기 가능합니다.
* 스태틱 메시 에디터 소켓 삭제를 되돌리기/다시하기 가능합니다.



##앞으로의 추가사항

####애널리틱스
* 엔진 애널리틱스 개선:
	* 오류 리포트가 개선되었습니다.
	* 어느 키바인딩이 리매핑되었는지 기록합니다.
	* OS 언어와 GPU 드라이버 버전을 기록합니다.
	* 새 블루프린트 클래스 생성을 기록합니다.
	* 주요 서브 에디터 툴의 "가동 시간"(up time)을 기록합니다.


####블루프린트
* 블루프린틔 루트 컴포넌트에 더이상 트랜스폼을 적용시킬 수 없습니다.
* 새 함수는 더이상 블루프린트 인터페이스 편집시 순수(pure) 마킹되지 않습니다.
* 이제 DELETE 키로 블루프린트 에디터의 블루프린트 탭에서 아이템을 제거할 수 있습니다.
* 더이상 되돌리기/다시하기를 짧은 시간 내 반복해도 워크스페이스에 알림 팝업창 스팸이 발생하지 않습니다.
* UObject 서브클래스 핀을 끌어 놓으면 IsValid 노드가 올바르게 나타납니다.
* 더이상 상속된 변수 카테고리를 변경할 수 없습니다.
* 블루프린트 컴포넌트 에디터에서 루트 컴포넌트가 선택된 경우 트랜스폼 위젯이 숨겨집니다.
* 부동소수점 값에 붙는 0 갯수가 줄어듭니다.
* 변수에 대한 Find Instances 결과에 유의미한 것들만 표시되도록 개정했습니다.
* 창(Window) 메뉴를 통해 접근하는 블루프린트 부모변경(re-parent) 메뉴에 제목을 추가했습니다.
* 드래그한 핀에 대해 변수로 승격시키는 옵션을 추가했습니다.


####사운드
* Enveloper 노드에 모듈레이션 세팅이 생겼습니다.
* 더이상 콘텐츠 브라우저에 우클릭해도 사운드 재생이 끊기지 않습니다.


####코어
* 명령줄 -AllowStdOutLogVerbosity 를 추가했습니다. `* -Cmd.exe` 를 실행한 경우 verbosity >= Log 가 있는 모든 로그는 stdout 에 출력됩니다.
* 새 플러그인 디스크립터 변경사항
	* 플러그인 디스크립터에 새로운 칸이 많이 추가되었습니다 (곧 문서 업데이트 예정입니다!)
	* 이제 플러그인이 (Icon128.png 썸네일용) Resources 서브 폴더를 가질 수 있습니다.
* 이제 Simplygon 이 VS 2012 빌드에 컴파일됩니다.
* 이제 FModuleManager::LoadModule 를 통해 다른 모듈 로드 전 DLL 버전 호환성을 테스트합니다.
	* 이제 FindModules 에 발견된 모듈은 리스트에 추가하기 전 현재 엔진 버전과의 호환성 검사를 합니다.
* VSAccessor 는 이제 경로에 공백이 있는 솔루션 파일경로도 열 수 있습니다.
* "New Project" 대화창으로 C++ 프로젝트를 생성한 이후에는 에디터 대신 비주얼 스튜디오가 열립니다. 실제 C++ 프로젝트 빌드도 가능하도록 강화 테스트를 약간 추가하기도 했습니다.
* 프로젝트가 자동 로드에 실패하면, 에디터 로드에 성공할 때까지 자동 로드 기능이 꺼집니다.
* "New Project" 대화창이 마법사가 되어, 첫 페이지에서는 템플릿을, 둘째 페이지에서는 이름과 위치를 선택합니다.
* 콘텐츠 브라우저에서 애셋 동기화시 필터로 인해 해당 애셋이 표시되지 않게 될 때만 필터가 리셋됩니다.
* 이제 프로젝트의 기본 위치는 "내 문서" 그 자체가 아니라 그 하위 폴더가 됩니다.
* UAsset 파일이 퍼포스에 텍스트 포맷으로 추가되는 것을 방지하기 위한 약간의 실패방지 코드를 추가했습니다.
* 서버 다운일 때 SCC 컬렉션 작업 처리를 위한 컬렉션 오류를 추가했습니다.
* 일반적인 컨테이너 최적화가 있었습니다.


####에디터 툴
* **슬레이트와 UI**
	* 슬레이트 스타일 시스템 개선 작업중입니다.

* **에디터**
	* Play in Editor 와 Simulate 세션 시동 퍼포먼스를 향상시켰습니다.
	* 프레임율이 충분치 않은 경우 대부분의 메뉴와 툴팁 애니메이션이 생략됩니다.
	* PIE/SIE 모드에서 씬 아웃라이너 테두리 패딩을 제거했습니다.
	* 색 선택 툴의 스포이트 마우스 포인터가 활성화되면 선택기 창 밖에도 표시됩니다.
	* PromptForCheckoutAndSave (체크아웃과 저장 확인) 창에서 사용자가 체크 해제한 패키지를 기억합니다.
	* 항목에 아이콘이 생기도록 Consolidate (통합) 창을 적합한 동글 버튼 스타일 위치에 오도록 했습니다.
	* 동글 버튼 아이콘 & 스타일을 업데이트했습니다.
	* 텍스처에 칠하기와 변화 계산에 걸리는 시간 감소를 통해 메시 페인트 퍼포먼스를 향상시켰습니다.
	* **Select Actors Using This Asset** (이 애셋 사용 액터 선택) 사용시 애셋이 Actor 부모가 아니라 실제 오너에 추적되는지 확인합니다.
	* 팝업 메뉴가 떠 있을 때는 자동저장 기능 & 알림을 미룹니다.
	* Property Matrix 에서 일치되는 Enum 이름이 없는 항목을 목록 끝에 오도록 하여 오류 내성을 높였습니다.
	* Property Matrix 표의 소팅 방식을 바이트 값이 아닌 Enum 이름 알파벳 순으로 변경했습니다.
	* 카메라 이동속도 모드간 속도차를 4->3 은 작게, 2->3 은 크게 하여 1-3 모드간의 차이를 고르게 만들었습니다.
	* 이름변경시 씬 아웃라이너의 선택이 유지되도록, 그리고 강조 문제 방지를 위해 이름 수정 박스에 포커스가 완전히 잡히도록 변경했습니다.
	* 액터 추가 등의 작업 이후 뷰를 완전히 새로고칠 때, 씬 아웃라이너 창에 마지막 선택된 것이 표시되도록 변경했습니다.
	* Select Actors (액터 선택)시 선택에 추가되는 것이 아니라 대체되는 것이라고 툴팁을 변경했습니다.
	* FBX 임포트 옵션은 이제 애셋과 함께 저장되어 임포트시 재사용됩니다. 스태틱 메시, 스켈레탈 메시, 애니메이션 시퀀스에 적용됩니다.
	* 콘텐츠 브라우저의 "New" (새 애셋) 메뉴가 더이상 화면 세로 크기 절반 이상이 될 수 없습니다.
	* 액터 변환시 더이상 액터 라벨을 다시 짓지 않습니다.
	* 맵 파일 오류에 실패 이유에 대한 설명이 더욱 자세히 나옵니다.
	* 익스포트 대화창을 사용자에게 표시할 때 FBX 가 (적용 가능한 경우) 첫 옵션으로 나열됩니다.
	* 다수의 애셋이 병합되어 표시되는 경우 RowName 이 더이상 강제 변경되지 않습니다.
	* 카테고리가 선택되면 변수의 Category ComboBox 가 자동으로 닫히지 않습니다.
	* 이제 레벨이 열리면 씬 아웃라이너는 (레벨에) 선택되어 있는 (리스트의) 액터를 선택합니다.
	* "종료" 대화창 억제 옵션이 플랫폼무관(agnostic) 환경설정에 저장됩니다.
	* 애셋 이름짓기 오류 메시지가 보다 정확해 졌습니다.
	* 사용자의 검색어를 동작에 일치시키는 데 있어 GenerateFilteredItems (필터링된 항목 생성)을 보다 정확하게 변경했습니다.
	* 이제 Create Destructible Mesh 에 실패 가능성 보호가 적용됩니다.
	* 패키지 저장 오류를 저장된 내용에 따라 맵이든 애셋이든 지시하도록 변경했습니다.
	* 제목 줄 아래 영역을 이동 선택할 수 있게 되었습니다.
	* 에디터의 창 목록이 알파벳 순으로 정렬됩니다.
	* 잘못된 인덱스 검사에 대한 보호가 추가되었습니다.
	* 'exists in package' 부분을 'exists in file' 로 대체했습니다.
	* 에디터 URL 은 이제 데이터 주도형입니다.
	* Move Selected Actors (선택 액터 이동) 코드에서 더이상 액터가 선택되어있다 가정하지 않습니다.
	* GetAttachedActors (붙어있는 액터 구하기)는 이제 리스트에 액터를 추가하기 전 NULL 이 아닌지 확인합니다.

* **월드 브라우저**
	* 레벨에 부모->자손 관계를 추가했습니다.
	* 월드의 레벨 위치는 부모 레벨에 상대적으로 저장됩니다.
	* 리스트 뷰와 폴더 뷰가 레벨 계층구조 뷰로 대체되었습니다.
	* 거리 기반 레벨 스트리밍 기능이 추가되었습니다.
		* 스트리밍 거리는 각 월드 레이어 별로 지정 가능합니다.
	* 지정된 월드 위치에서 보일 수 있는 스트리밍 레벨 (하이라이트로) 미리보기 기능이 추가되었습니다 (Alt+MousePosition).
	* 이제 레벨 위치조정은 로딩 이후 단계가 아닌 레벨을 월드에 추가하는 시점에 발생합니다.
	* 월드 원점에서 충분히 멀리 떨어진 레벨의 경우 강제 언로딩하기 보다는 숨겼다가(shelved) 월드 원점에 어느정도 가까워지면 자동으로 표시합니다(unshelved).
	* 레벨에 AlwaysLoadedLevel (항상 로드되는 레벨) 태그를 추가했습니다. 이 태그가 붙은 레벨은 사용자가 에디터에서 월드를 열면 자동 로드됩니다.
	* 데모렛 월드를 부모->자손 관계로 재구성했습니다.
	* 편집불가 레벨이 있는 타일은 비활성화 (회색 탈색) 상태로 표시됩니다.
	* 계층구조 뷰에서 드래그 앤 드롭으로 스트리밍 레벨을 추가/제거하는 기능을 추가했습니다.
	* 게임에서 월드 컴포지션을 여는 기능을 추가했습니다 ( /Game/Maps/MyWorldRoot?worldcomposition ).
	* 월드 컴포지션을 에디터에서 로드할 기본 맵으로 지정하는 기능을 추가했습니다.
	* 화살표 키로 레벨을 이동하는 기능을 추가했습니다.
	* 이제 월드 원점 전환(shift)이 SIE 에서도 작동합니다.
	* 에디터 개인설정에서 월드 브라우저 켜고/끄기가 에디터 재시작이 필요하지 않습니다.

* **레벨 스트리밍**
	* UWorld::UpdateLevelStreaming 은 이제 퍼시스턴트 월드와 스트림-인 된 레벨 중 보이는 모든 레벨의 스트리밍 오브젝트를 업데이트합니다.
	* 이제 여러 스트리밍 오브젝트가 같은 레벨을 가리키도록 할 수 있습니다.
	* 레벨이 언로드/숨겨지는 때는 레퍼런스된 스트리밍 오브젝트 전부가 언로드/숨기기 명령을 내릴 때만 가능합니다.

* **랜드스케이프**
	* 머티리얼 컴파일 완료에 대한 콜백을 추가, 랜드스케이프 에디터 모드와 랜드스케이프 레이어 썸네일 코드에서 셰이더 맵 포인터를 테스트하는 대신 그 컴파일 완료된 머티리얼을 사용합니다.
	* 랜드스케이프 내비메시 생성을 최적화시켰습니다.
	* 새로운 랜드스케이프 그리드와 바닥 평면 사이의 Z-파이팅 방지를 위해 퍼스펙티브 뷰포트의 에디터 그리드에 오프셋을 줬습니다.

* **프로파일러**

####게임플레이와 프레임워크
* **피직스**
	* 바디에 대한 PhAT 컨텍스트 메뉴를 깔끔히 정리했습니다. 단일 바디에 대해서는 고정해제(unfix)와 삭제 옵션이 추가되었습니다.
	* bShouldSimulatePhysics 에 World 옵션을 추가, 켜고/끄고 할 수 있습니다.
	* 시뮬레이션 허용치를 노출시켰습니다.
	* 에디터 레벨 뷰포트에서 StaticMeshComponent, SkeletalMeshComponent, BrushComponent 에 대한 충돌을 기본으로 켭니다.
		* 기본적으로 "Query Only" 콜리전만 켭니다.

* **최적화** 
	* Component Attach 최적화: UseAttachParentBound
 
* 이제 배열은 로드된 것과 같은 순서대로 config 에 저장됩니다.
* 스프라이트 컴포넌트를 ALight 액터에서 ULightComponent 로 옮겼습니다.


####온라인
* GameCenter OnlineSubsystem 용 stub 모듈을 추가했습니다.
* Facebook OnlineSubsystem 용 stub 모듈을 추가했습니다.


####렌더링
* 이제 GPU 스프라이트는 이미터 원점과 로테이션을 참고합니다.
* 텍스처 프리뷰 툴에 펼쳐진(unwrapped) 큐브 텍스처가 제대로 된 종횡비로 표시됩니다.
* 라이트매스의 라이트맵 겹침 허용치를 높혔습니다. 오차가 1% 를 넘어가야 오류가 납니다.
* 직각 카메라 뷰포트에는 포그가 렌더링되지 않습니다.
* 텍스처 프리뷰 툴은 더이상 HDR 텍스처를 제한(clamp)시키지 않습니다. 노출(exposure) 컨트롤에 HDR 디테일이 표시됩니다.
* DX11 의 RHIReadSurfaceFloatData 메모리 요구치를 1 / 8 로 줄였습니다.
* 디렉셔널 라이트의 일부 프로퍼티 이름을 보다 명확하게 변경했습니다.
* 다이내믹/스태틱 간의 전환 미세조정을 위해 캐스케이드 섀도 맵에 대한 세팅을 노출/이름변경 하였습니다.
* MSAA 텍스처에 VisualizeTexture 가 지원됩니다.
* 이제 게임 일시정지시 모션 블러도 제대로 정지됩니다 (모션블러 퀄리티 작업에 좋습니다).
* 일부 SystemSetting 은 이제 콘솔 변수로 노출되었습니다:
	* r.UseVSync 
	* r.MaxAnisotropy 
	* r.MaxShadowResolution 
	* r.ParticleLODBias 
	* r.SkeletalMeshLODBias 
	* r.TranslucencyLightingVolumeDim 
	* r.DetailMode
* **r.UseTextureStreaming** (현재 r.TextureStreaming 으로 이름변경된 것)도 도입되어 텍스처 스트리밍을 실행시간에 토글시킬 수 있습니다.
* 라이트맵 밉맵 생성이 개선되었습니다.
* 텍스처 리임포트 또는 세팅 유지 덮어쓰기 도중 텍스처에 bFlipGreenChannel 이 보존됩니다.
* Clamp 머티리얼 표현식에 ClampMin / ClampMax 용도를 맞바꿨습니다.
	* 주: CL 1672610 (2013-06-03) 과 CL 1706681 (2013-06-25) 사이에 변경된 'Clamp' 노드가 있는 머티리얼은 확인이 필요합니다. 앞의 CL 에서 ClampMin 과 ClampMax 값이 맞바뀐 상태이며, 뒤의 CL 이전에 있던 애셋은 그에 대한 보호를 받지 못합니다.


####플랫폼
* 쿠킹된 플랫폼은 바이너리가 GameAgnosticExe (게임 무관 EXE)가 아닌 경우, (자신 이외에) 프로젝트를 기반으로 한 실행이 불가능합니다.
	* 그 이유는 게임이 (QAGameInfo 등의) 기본 클래스를 덮어쓸 소지가 있어, 그 클래스는 해당 프로젝트 파일에서 사용할 수 없는 애셋을 참조할 수 있기 때문입니다.
* Freetype2 업데이트 (2.4.12) 
* 미지원 플랫폼에 대한 타깃을 빌드하려 할 때, UBT 는 다음과 같은 메시지와 함께 빌드 예외를 던집니다: `<Target> does not support the <platform> platform`
* DynamicRHI 생성을 정리했습니다 (코드를 플랫폼 전용 파일로 분할해 넣었습니다).
* SM_PCD3D_SM5 인지만 체크하는 것을 대체하기 위해 RHISupportsTessellation(EShaderPlatform) 함수를 추가했습니다. 
* 엔진과 에디터를 Mac 으로 이식중입니다.


####애니메이션과 페르소나
* 메시 리임포트 이후에도 LoD 세팅 창이 제대로 작동합니다.
* 페르소나 메시 LoD 세팅은 이제 현재 선택된 LoD 가 삭제되면 "자동" 으로 변경됩니다.
* 이제 페르소나의 바닥은, 메시와 겹치지 않도록 메시의 원점이 아닌 바운딩 박스 밑부분에 놓입니다.
* 페르소나 뷰포트에서 현재 선택된 본은 "선택된 항목" 색으로 렌더링됩니다.
* 페르소나 뷰포트의 빈 공간을 클릭하면 소켓/본 선택이 해제됩니다.
* 이제 애니메이션 타임라인 슬라이더를 문지르면, 마우스 클릭을 놓을 때만이 아니라 끄는 동안 애니메이션이 실시간 업데이트됩니다. 
* .FBX 가 (이전에 페르소나 뿐만 아니라) 콘텐츠 브라우저에서도 AnimSequence 에 대한 익스포트 옵션이 되었습니다.
* 페르소나 스켈레톤 트리에서 Delete 키로 선택된 소켓과 어태치된 애셋을 삭제할 수 있게 되었습니다.
* 씬 아웃라이너에서 스켈레톤 소켓을 어태치할 수 있게 되었습니다.
* 페르소나 뷰포트에서 "Set Mesh Root Translation" (메시 루트 트랜슬레이션 설정) 옵션이 제거되었습니다.
* PhAT 에서 "Delete All Bodies" (모든 바디 삭제)의 되돌리기/다시하기는 한 번만 하면 됩니다.
* 페르소나의 "Import LoD" 기능이 정상 작동합니다.
* 이제 페르소나에서 스켈레톤 저장(기본 메시 변경)이 필요한 동작을 하면 사용자에게 알려줍니다.
* 오류가 있으면 페르소나에 오류 로그가 표시됩니다.