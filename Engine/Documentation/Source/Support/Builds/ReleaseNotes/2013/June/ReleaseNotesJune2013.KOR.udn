INTSourceChangelist:6537038
Title: 2013년 7월 릴리즈 노트
Crumbs:%ROOT%, Support/Builds
Description:
Availability:Licensee
Parent:Support/Builds
Order:-8
Order: 52

[TOC(start:2 end:2)]

## 빌드 정보


[REGION:simpletable]
| 항목 | 정보 |
| ---- | ---- |
| **Label** | QA_APPROVED_UE4_BUILD_2013_06 |
| **Changelist #** | 1687979 |
| **VISUAL STUDIO VERSION** | Microsoft Visual Studio 2010 version 10.0.40219.1 SP1 Rel |
| **DIRECTX** | June 2010 |
[/REGION]

## 중요 정보

 * 현재 엔진 개발 로드맵: [UE4 로드맵](https://udn.unrealengine.com/questions/topics/roadmap.html)
 * UE4 병렬 렌더링 로드맵: [UE4 의 병렬 렌더링 계획](https://udn.unrealengine.com/questions/168240/parallel-rendering-plans-for-ue4.html)


## 주요 신기능

####블루프린트
* **새로운 사용자 지정 Enum 애셋**
	* 내 블루프린트 위젯에 "사용자 지정 Enum" 카테고리가 새로 생겼습니다. 여기에는 현재 블루프린트에 사용된 사용자 지정 Enum이 전부 포함되어 있습니다.  
		![](UDEnumb.png)(h:360)  ![](UDEnuma.png)(h:360)  

* **블루프린트에 새 피직스 조인트와 컨스트레인트**
	* 이제 블루프린트에 피직스 조인트(컨스트레인트)를 추가시킬 수 있습니다!  
		![](constraints1.png)(w:480)
	* 블루프린트 에디터의 컴포넌트 메뉴에서 기존 컴포넌트에 여러 유형의 컴포넌트를 추가시킬 수 있으며, 디테일 패널의 컴포넌트 변수를 통해 "조인트" 또는 "컨스트레인트" 를 추가시키는 기능도 생겼습니다.  
		![](constraints2.png)


####에디터 툴
* **배치 브라우저**
	* 새로운 복합 브라우저로, 레벨에 놓을 수 있는 콘텐츠만 확인할 수 있습니다.  
		![](PlacementBrowser.png)(w:640)
	* 확장된 컨트롤 스키마를 통해 애셋 배치가 더욱 부드럽고 돋보이게 됩니다!
	* 배치하고자 하는 콘텐츠 조각을 클릭한 다음 놓고자 하는 뷰포트 안에 클릭, 또는 배치할 때 [CTRL] 키를 누르고 있으면 여러 개를 빠르게 놓을 수 있습니다.

* **새 애셋 & 애셋 선택기**
	* 사용할 수 있는 애셋 유형에 따라 색이 입혀지는 위젯이 새로 추가되었습니다. 썸네일에 더블클릭하면 표시된 애셋에 맞는 에디터가 열립니다.  
		![](widget1.png)
		* 모든 애셋에 기본적으로 썸네일이 표시되지는 않습니다만, 새로 생긴 UPROPERTY 메타태그 ShowThumbnail="true" 설정으로 켤 수 있습니다.
	* 새로운 선택기는 콘텐츠 브라우저에서의 애셋 드래그 앤 드롭을 지원, 콘텐츠 브라우저와 위젯간의 애셋 복사 & 붙여넣기도 가능합니다.  
		![](widget3.png)
	* 선택기에서는 화살표를 통해 콘텐츠 브라우저 메뉴로 접근할 수도 있으며, 메뉴 하단에 추가 옵션도 있습니다.  
		![](widget5.png)
	* 쉬운 접근을 위해 '브라우징' 이 메인 위젯에도 복사됩니다.
	* 액터 프로퍼티 전문화까지도 지원, 콤보 버튼 화살표를 클릭하면 씬 아웃라이너를 표시합니다. 메뉴의 '표시' 항목으로 해당 액터에 뷰포트 포커스를 맞춥니다.

* **FBX 리임포트 개선**
	* 스태틱 메시, 스켈레탈 메시, 애니메이션 시퀀스에 대한 UAssetImportData 파생 클래스를 생성하도록 FBX 코드가 리팩터링 되었습니다!	
		![](FBXimport.png)(w:480)
	* FBX 에서 애셋을 임포트할 때 이제, 애셋 생성 당시에 설정했던 임포트 옵션이 저장되며, 리임포트할 때마다 재사용됩니다.
	* 이 옵션은 애셋의 프로퍼티 중 "Asset Import Data" 에서 수정할 수 있습니다.

####게임플레이 및 프레임워크
* **C++ 클래스 마법사**
	* 이 기능으로 게임에 새로운 폰, 캐릭터, 플레이어 컨트롤러, 기타 게임 기능을 도입하기 위한 새로운 부모 클래스 추가가 가능합니다.  
		![](NCW.png)(w:640)
	* **"File->Add Code to Project..."** 를 통해 불러올 수 있습니다.
		* 이제 생성되는 코드의 저작권 줄을 ini 파일에서 설정할 수 있습니다.


####페르소나와 애니메이션 툴
* **페르소나에서 AnimSequence 를 AnimMontage 와 AnimComposite 로 변환**
	* 페르소나에서 AnimSequence 를 사용할 때 AnimComposite 와 AnimMontage 를 생성하는 컨텍스트 메뉴가 생겼습니다.  
		![](Anim.png)(convert:false)
	* 콘텐츠 브라우저에서 AnimSequence 를 선택하고 우클릭하기만 하면 이제, 사용자는 메뉴 마우스 클릭 한 번으로 AnimMontage 나 AnimComposite 유형을 만들 수 있게 되었습니다!


##추가 사항

####블루프린트
* 이제 private UPROPERTY 의 BlueprintReadWrite 또는 BlueprintReadOnly 는 불법입니다. public 또는 protected 로 만들어 주세요.


####사운드
* Reverb Effect 애셋 유형을 통해 Reverb Setting 을 노출시켰습니다.


####코어
* DisplayName 과 FriendlyName 은 이제 지정자 키워드로, meta=(...) 블록 안에 지정할 필요가 없습니다.
* UENUM 만 들어있는 헤더가 더이상 컴파일 오류를 유발시키지 않습니다.
* FFileHelper::SaveStringToFile 에 빈 문자열을 제공하면 0 바이트 파일을 생성시킵니다.
* DEFINE_LOG_CATEGORY_STATIC 를 헤더에 사용하면 안됩니다.
	* 그 대신 헤더에 DECLARE_LOG_CATEGORY_EXTERN 를 지정하고, 관련된 .cpp 파일에 그에 상응하는 DEFINE_LOG_CATEGORY 를 놓아 줘야 합니다.
* CrashDebugHelper 에 DepotName 접근을 추가했습니다.
	* 사용자가 디포 이름을 지정할 수 있어, 어느 브랜치에서도 미니덤프 디버깅이 가능합니다.
* documentation 폴더를 동기화시키지 않은 상태에서 프로젝트 생성시 빠진 폴더 생성을 적절히 처리합니다.



####에디터 툴
* **랜드스케이프:**
	* TerrainLayerSwitch, TerrainLayerBlend, LandscapeLayerBlend 에 Material Attributes 유형이 지원됩니다.
	* 프리미티브 통계 창에 랜드스케이프를 추가했습니다.
* 가장 최근 로드된 프로젝트 로딩을 토글하는 게임 무관 세팅을 추가했습니다. 이 기능은 로켓 사용자가 아니어도 사용 가능하지만, 기본적으로는 꺼져 있습니다.
* 이제 HighResShot 이 에디터 뷰포트에서 OutputLog 를 통해 작동합니다.
	* "HighResShot 1920x1080" 식으로 입력하면 각 레벨 뷰포트에 대해 1920 x 1080 픽셀 크기 스크린 샷을 찍습니다.
	* HighResShot 2 식으로 입력하면 뷰포트 해상도 * 2 해상도로 샷을 찍습니다.
	* 생성된 UE4 솔루션 파일에 대해 "Build and Run" 프로젝트가 가능합니다.
	* 이제, 컴파일하여 실행하는 모든 것들은 새로 생긴 Build and Run 폴더의 솔루션 상단에 있습니다.
* 새로운 (게임 무관) UE4Editor 및 UE4Game 타깃이 추가되었습니다. 샘플을 로드하고자 하는 경우 좋습니다.
* 인스턴트 서브메뉴가 추가되었습니다:
	* 서브메뉴가 마우스 커서를 올리는 즉시 열리도록 변경되었습니다!
	* 서브메뉴에서 커서가 벗어났다고 사라지는게 아니라, 메뉴쪽으로 움직여야 사라집니다.
	* 서브메뉴를 열 때의 반응성도 개선되었습니다.
* **슬레이트 & UI:**
	* 편집가능 텍스트 "룩 & 필" 을 개선시켰습니다.
	* 슬레이트 툴팁 캐시를 추가(하여 UI 에 마우스를 올렸을 때의 버벅임을 제거)하였습니다.
* 사용자가 AnimSequence 에서 AnimComposite 와 AnimMontage 를 만들 수 있는 메뉴 옵션을 콘텐츠 브라우저에 추가시켰습니다.
* 탭을 닫으면, 그 왼편에 있는 탭으로 포커스가 옮겨갑니다.


####게임플레이 및 프레임워크
* 기존 프로젝트에 소스 코드 파일을 추가시키는 마법사가 추가되었습니다.
	* File->Add Code to Project... 로 불러올 수 있습니다.
	* 생성 코드의 저작권 줄을 ini 파일에서 설정할 수 있습니다.
* PlayerInput 에 새로운 반전 시스템이 추가되었습니다.
	* 이제 `InvertAxis <AxisName>` 를 호출하여 모든 입력을 정의된 축으로 반전시킬 수 있습니다 (예를 들어 "InvertAxis Lookup" 은 기존 InvertMouse 와 같습니다).
	* 특정 Axis 키를 InvertAxisKey 로 반전시킬 수도 있습니다 (예를 들어 조이스틱은 말고 마우스 룩업만 반전시키려는 경우, "InvertAxisKey MouseY" 입니다).
* 새로운 폰 SpectatorPawn 을 추가했습니다. PlayerController 관람 상태는 SpectatorPawn 을 사용합니다. 
	* DebugCameraController, LogVisualizer, 한 쌍의 게임 Controller 가 새로운 관람자 모델을 사용하도록 고쳤습니다.
* 리짓 바디 리플리케이션이 되는 컴포넌트를 추가했습니다: StaticMeshReplicatedComponent, SkeletalMeshReplicatedComponent.
* 빠른 필터링을 위해 리캐스트 오프-메시 연결에 미리 지정된 플래그를 구워넣는 옵션 함수성을 추가했습니다.
	* RecastNavMesh 를 가지고 길찾기 거리의 폴리곤을 질의할 수 있는 방법을 추가했습니다.
	* RecastNavMesh 질의 도중 사용할 네임드 필터를 도입시켰습니다.
* 게임 전용 코드별 옵션을 도입하여 (UNavigationSystem 에서 파생되는) 커스텀 내비게이션 시스템 클래스를 정의할 수 있습니다.
* MatineeActor: bHidePlayer, bDisableMovementInput, bDisableLookatInput.
* 내비메시 생성이 태스크 그래프에서 FAsyncTask 로 전환되었습니다 (더이상 커다란 내비메시 빌드시 게임 스레드가 막히지 않습니다).


####온라인
* MCP 서비스를 통한 사용자별 클라우드 스토리지를 구현했습니다. 
	* 사용자가 이용할 수 있는 파일 리스트를 열거합니다.
	* 개별 파일을 다운로드합니다.
	* 파일을 디스크에 캐시하여 해시가 일치하지 않는 경우에만 다운로드합니다.


####플랫폼
* iOS 용 (SlateViewer 같은) 프로그램 지원이 추가/개선되었습니다.


####렌더링
* dx11 용 (로우 레벨 렌더링 기능인) 유연한 뎁스/스텐실 읽기/쓰기 접근 기능을 병합시켰습니다.
* Speedtree, 스피드트리가 통합되었습니다.
* 큐브 맵 씬 캡처 Cube Map Scene Capture 액터를 추가했습니다.
* 큐브 렌더 타깃용 HDR 익스포트 기능이 추가되었습니다.
* **머티리얼 & 텍스처:**
	* MaterialParameterCollection 머티리얼 파라미터 컬렉션: 
	* 파라미터 컬렉션과 그 기본값을 정의하는 애셋입니다.
	* 머티리얼에서는 CollectionParameter 노드로 이 파리미터들을 참조할 수 있습니다.
	* 그 후 블루프린트에서는 실행시간에 효율적으로 이 파라미터에 대한 값을 설정할 수 있으며, 그러면 모든 머티리얼에 새 값이 들어갑니다.
	* 전역 머티리얼 파라미터, 또는 레벨별 파라미터, 아니면 그냥 에디터에서 대량의 머티리얼 변화를 편하게 미리보는 용도로 사용할 수 있습니다.
	* 컬렉션에서 파라미터를 제거하면 다수의 블루프린트와 머티리얼이 한꺼번에 깨질 수 있으니 주의해야 합니다.
* **라이팅 & 섀도잉:**
	* 라이트매스 솔버 퀄리티가 개선되었습니다.
	* 스무딩된 노멀이 트라이앵글 노멀과 그리 잘 일치되지 않는 지오메트리의 라이팅이 매우 얼룩지고 빌드시간도 오래 걸리던 것이 해결되었습니다.
	* 이레디언스(복사조도) 캐시에 최소 거리 휴리스틱을 사용하도록 전환, 깔끔한 건축 라이팅에 더욱 잘 돌아갑니다. 잘못된 최소 반경으로 부작용이 유발되던 것도 제거했습니다.
	* 최종 광선 수집에 의해 보이는 직사광은 이제 광자 밀도 추정 방식이 아닌 라이트의 명시적 샘플링을 통해 계산됩니다. 빛샘 현상이 감소되고 그림자가 전환되는 부분 근처의 첫 반사광 정확도가 향상됩니다.
	* 단일 매핑에 대한 이레디언스 캐시 생성과 보간이 멀티 스레드 처리되어, 스레드만 충분하다면 커다란 매핑 하나로 된 맵의 빌드 시간이 크게 줄어듭니다.
		* 512 라이트맵 하나의 빌드 시간이 5 배 빨라집니다.
	* 로우 퀄리티 HDR 디렉셔널 라이트맵을 추가, 심플 라이트맵을 제거했습니다.
	* r.DumpShaderDebugInfo 추가, 이 옵션이 1 로 설정된 동안 컴파일된 셰이더의 디버그 정보를 덤프시킵니다.
	* D3D11 에서 그 뜻은, 소스의 전처리된 버전이며, D3D 어셈블리로의 컴파일을 위해 fxc 호출할 배치 파일이고, AMD GPUShaderAnalyzer 를 (설치된 경우) 호출하는 배치파일 입니다.


####애니메이션/페르소나
* **페르소나:**
	* 페르소나 뷰포트의 Show 메뉴에 "Additive Base" 옵션을 추가, 사용자가 애니메이션의 애디티브 베이스 포즈를 확인할 수 있습니다.
	* 이제 컨텍스트 메뉴를 통해 모프 타깃을 삭제할 수 있습니다.



##업그레이드 노트

####블루프린트
* 자체적으로 월드 컨텍스트를 제공할 수 없는 블루프린트 클래스들은 UCLASS 메타데이터에 "ShowHiddenSelfPins" 플래그 설정이 가능합니다.
	* 그러면 플래그 설정된 클래스에서 파생된 블루프린트 클래스가 있는 블루프린트 그래프에 놓인 노드에 WorldContextObject 핀이 표시됩니다.
	* 현재 해당 플래그 설정된 Engine 클래스는 AnimNotify 가 유일하며, 모든 AnimNotify 블루프린트는 컴포넌트를 WorldContextObject 입력에 연결해야 합니다.
* Blueprint SkeletonGeneratedClass 는 이제 transient (휘발성)입니다.
	* 사용자 측에서 별다른 조치를 취할 것은 없지만, 블루프린트 시스템을 변경했다면 스켈레톤 클래스로의 레퍼런스를 저장하지 않도록 하시기 바랍니다.
	* 시리얼라이즈된 레퍼런스는 이제 모두 GeneratedClass 를 가리켜야 하며, 안그러면 저장 도중 사라집니다.


####사운드
* SoundMode 이름이 SoundMix 로 변경, 이제 하나의 Base SoundMix 설정 및 다수의 SoundMix 모디파이어 푸시 옵션이 생겼습니다.
	* 모든 SoundMode 를 재저장해야 콘텐츠 브라우저에서 전체 로드하지 않고도 SoundMix 로 표시됩니다.


####코어
* 생성되어 저장된 환경설정에 소스 파일 계층구조에서 합친 것에 일치되는 항목이 들어있지 않도록 UE4 의 환경설정 시스템을 업데이트했습니다.
* 새 프로젝트 파일 생성시 기존 Visual Studio 명령줄은 보존되지 않습니다.
	* 이번 UE4 버전용으로 프로젝트 재생성 전 미리 저장해 두시기 바랍니다.
	* 그 이유는 생성된 .vcxproj 파일이 저장되는 폴더가 변경되기 때문입니다.
* 메타데이터 지정자용 meta(...) 문법은 더이상 지원되지 않습니다. meta=(...) 는 독점 사용해야 합니다.
* 프로퍼티 말미의 ("float Property; // My float property" 같은) 코멘트는 더이상 툴팁 메타데이터용으로 수집되지 않으며, UPROPERTY 선언 이전의 코멘트로 변경해 줘야 합니다.
* 서로 값이 다른 메타데이터 키가 여럿 있으면 오류가 발생합니다. 그 전에는 값이 연달아 나오면 기존 값을 덮어썼었습니다.
* 맵 저장시 파일명 검사를 개선시켰습니다.


####에디터 툴
* UInterface 가 더욱 탄탄해 져서 블루프린트 구현가능 이벤트는 물론 네이티브 함수도 안전하게 가능합니다.
	* 그 결과, 순수히 블루프린트로 (즉 블루프린트 프로퍼티의 "Interfaces" 섹션을 통해) 구현된 UInterface 는 이제 BlueprintImplementableEvent 만 가질 수 있습니다.
	* 블루프린트 접근 가능은 하나 네이티브 클래스에 추가된 UInterface (예를 들면 class UMyClass : public UObject, public IMyInterface) 는 BlueprintImplementable 이벤트와 BlueprintCallable 함수 둘 다 가질 수 있습니다.
	* 헤더 생성기가 이러한 범주를 위반하는 인터페이스는 생성할 수 없다고 확인해 줍니다.
* **랜드스케이프:**
	* PN-AEN 및 Flat 크랙-프리 테셀레이션을 활성화시켰습니다.
	* 레이지 포인터를 사용하는 LandscapeComponent vs CollisionComponent 크로스 레퍼런스를 추가시켰습니다.
	* 랜드스케이프 편집 모드에서는 기즈모 삭제를 금지시켰습니다.


####게임플레이 및 프레임워크
* BugIt 구현이 PlayerController 에서 CheatManager 로 이동되었습니다.
* bInvertMouse 와 bInvertTurn 은 물론 InvertMouse 와 InvertTurn 실행 함수가 PlayerController 에서 제거되었습니다 (새 반전 시스템에 대한 세부사항은 신기능 부분을 참고하시기 바랍니다).
* bIsControllerConnected 를 PlayerController 에서 제거했습니다.
* SetActorLocation 에서 bCheck 파라미터를 제거했습니다. sweep 중이지 않을 때 목적지에서의 겹침 검사가 신경쓰일 때는 Teleport 를 대신 사용하시기 바랍니다.
* SpawnActor 함수가 변경되어서 그 호출에 대한 리팩터링이 필요할 것입니다.
* GamePlayer 를 접근하는 것은 무엇이든 GetWorld 함수를 통해 LocalPlayer 를 접근하거나 해야 합니다.
* **피직스:**
	* 피직스 컨스트레인트 시스템이 크게 리팩터링 되었습니다;
		* ConstraintSetup 의 모든 세팅을 ConstriantInstance 로 옮겼습니다.
		* 컨스트레인트 셋업 클래스를 제거했습니다.
	* RB_.. 로 시작하던 많은 클래스들은 이제 Physics.. 로 시작합니다.
		* 다수의 클래스를 자체 cpp 파일 속으로 옮겼습니다 (PhysicsHandleComponent, PhysicsThruster, PhysicsContraintTemplate, PhysicsConstraintComponent, PhysicsConstraintActor, RadialForceComponent).
	* PhysicsHandleComponent 가 리팩터링되고, 내장 스무딩이 생겼습니다.
	* StallZ 가 제거되었습니다.
* DestructibleComponent 가 이제 DestructibleActor 밖의 피해에 반응합니다.


####온라인
* FVector 넷 양자화에 대한 지원이 확장되었습니다: Vector Network Quantization
* 심플 / 스트리밍 파일 서버 코드를 하나로 병합시켰습니다. 스트리밍 서버가 심플 네트워크 서버를 확장할 수 있도록 클라이언트측 코드를 업데이트했습니다.


####렌더링
* **포스트 프로세스 이펙트:**
	* Atmospheric fog : 포그 레이어가 둘 이상 존재하는 경우를 처리합니다.
* 남아있는 문제가 있어 여러줄 TextRenderActor 를 revert 시켰습니다. 추후 수정 예정입니다.
* 모든 프로젝트에 대해 SeparateTransluceny 를 기본으로 활성화시킵니다. 디자이너에게 좀 더 일관되고 폭넓은 제어권을 주며, 약간은 느리나 낮은 정밀도의 씬 컬러가 가능하며, 머티리얼 세팅에서 해당 기능을 끄지 않는 이상 반투명은 더이상 뎁스 오브 필드에 영향받지 않습니다.
* **라이팅 & 섀도잉:**
	* Lightmass EnvironmentColor 는 이제 상반구에만 적용됩니다.


####플랫폼
* UnrealBuildTool 은 이제 코드를 컴파일한 Mac 컴퓨터의 이름을 IPhonePackager 에 전달, IPP 환경 변수를 설정하거나 IPP 코드를 변경할 필요(도, 그럴 수)도 없습니다.
* 모바일 provision 파일이 /Library 가 아닌 ~/Library 로 가도록 변경, Mac에서 이상한 환경설정이 필요 없어 졌습니다.



##앞으로의 추가사항

####블루프린트
* 블루프린트에서 보이는 프리미티브 컴포넌트를 전부 제거하면 일반 썸네일로 다시 되돌아갑니다.
* 새로 생성된 블루프린트는 그래프 모드가 아닌 컴포넌트 모드에서 열립니다.
* 블루프린트, 특히 math 라이브러리 내 함수에 대한 검색 기능이 강화되었습니다.
* 블루프린트 에디터의 '미사용 핀 숨기기' 토글 옵션을 세 가지 옵션으로 나누고, 툴바에서 꺼내 메뉴바(의 뷰 옵션 아래)로 옮겼습니다.
* FortPathFollowingComponent 를 BlueprintType 으로 만들었습니다.
	* PathFollowingComponent 에 블루프린트 노출 함수를 추가시켰습니다: GetPathActionType(), GetPathDestination().
		* 해당 경로가 전체/일부인지, 경로 종점이 어디인지, 새로 생긴 함수를 통해 사용자가 알아낼 수 있습니다.
* 블루프린트 에디터: 대소문자가 붙은 경우를 자동으로 띄워 인식하는 방법으로 사용자의 애셋 검색의 적중률을 높였습니다.
* 라벨 KISMET SCRIPTING ERROR 를 LEVEL BLUEPRINT ERROR 로 바꿨습니다.
* 이름 EPET_Kismet 을 EPET_Blueprint 로 바꿨습니다.
* 타임라인 없음 오류는 타임라인이 추가되면 지워집니다.
* 클래스 뷰어를 통해 블루프린트가 생성되면 다시 그 패키지를 더티 마킹합니다.
* 스테이트 머신 노드에 노드별 코멘트 기능이 지원됩니다.


####사운드
* 돌출된 영역이 있는 브러시로 된 리버브 볼륨도 이제 올바르게 작동합니다.
* SoundCue 컨텍스트 메뉴의 사운드 노드에 더이상 SoundNode 접두사가 붙지 않습니다.
* ClampMin / ClampMax 메타 태그가 이제 적합한 수치 형식으로 사용됩니다.


####코어
* MinimalAPI / RequiredAPI 클래스 플래그는 실행시간 질의가 가능하도록 컴파일-인 클래스에 복사됩니다.
* 새로운 "AutomationTool", 빌드 시스템 개발 및 CIS 테스팅 보조 프로그램에 대한 작업이 계속되고 있습니다.
* AActor::bNoDelete 가 코드 베이스에서 완전히 제거되었습니다.
* 새로운 시스템 세팅의 WIP 인 UE4 용 "디바이스 프로파일" 시스템이 적합한 툴과 함께 추가되었습니다.
* 이제 에디터에서 (리컴파일, 프로젝트 파일 생성 등과 같은 작업) 실행 전 언리얼 빌드 툴이 빌드됩니다.


####에디터 툴
* **랜드스케이프:**
	* 랜드스케이프 스플라인 선택이 되돌리기/다시하기 가능해 졌으며, 스플라인 에디터 밖의 랜드스케이프 스플라인 선택 상대가 고정됩니다.
	* PIE/시뮬레이트에서 랜드스케이프 에디터가 꺼집니다.
	* 랜드스케이프 툴 렌더링 퍼포먼스가 향상되어 에디터에서의 반응이 좋아졌습니다.
* **슬레이트 & UI:**
	* FSlateApplication::GotoLineInSource 를 추가했습니다. 형식은 FullFilePath|Line:Column 입니다.
	* 새 프로젝트 대화창의 썸네일 크기를 줄이고, 설명 줄바꾸기를 조정했습니다.
	* 클래스의 40x & 256x 아이콘을 크롭 & 트윅 작업으로 업데이트했습니다. PNG 만 업데이트된 것으로, 비파괴성 체크인 입니다.
	* 16px 짜리 BlueprintEditor 함수용 아이콘을 새로 만들었습니다. 에디터에서 사용하려면 추가적인 코드 후크 업 작업이 필요합니다.
	* 256 px 짜리 여러 클래스 유형에 대한 아이콘을 만들었습니다. 코드 후크 업이 필요하며, 비파괴성 체크인 입니다.
	* 40px 짜리 BSP 모드 초기 아이콘을 생성했습니다 (20px 버전이 코드 스케일이라 가정).
		* 후크 업을 위해서는 추가적인 코드 지원이 필요합니다. 비파괴성 체크인으로, Changelist 는 PNG 애셋 뿐입니다.
	* 배치 모드용 첫 단계 아이콘이 생성되었습니다. 후크 업을 위해서는 추가적인 코드 지원이 필요합니다.
		* 비파괴성 체크인으로, Changelist 는 PNG 애셋 뿐입니다.
	* 다음에 대해 16px 짜리 아이콘을 생성했습니다: AtmosphericFog, SphereReflectionCapture, BoxReflectionCapture, DestructibleActor, Note, Pawn, Character, DefaultPawn 액터 클래스.
		* PNG 애셋 뿐이며, 비파괴성 체크인 입니다 (코드 후크 업 필요).
* 소스 컨트롤이 꺼져 있으면 더이상 콘텐츠 브라우저에 그 상태가 표시되지 않습니다.
* **월드 브라우저:**
	* 월드 브라우저에 줌 레벨이 늘어났습니다.
	* 월드 브라우저에서는 선택된 레벨을 뷰에 맞춥니다 (홈 버튼).
* 에디터 메인 메뉴 배치가 개선되었습니다!
* 실제 애셋을 편집중이었다면, 메뉴바에 애셋 메뉴만 추가됩니다.
* World Props (월드 프로퍼티) 버튼을 World Settings (월드 세팅) 으로, 툴팁과 함께 업데이트했습니다.
* 로컬 컬렉션 생성 실패에 대한 오류 메시지 창이 컬렉션 리스트에 붙기 보다는 컬렉션 뷰에 붙습니다.
* 이제 씬 아웃라이너에 PIE 액터의 선택과 수정이 지원됩니다.
* 에디터 뷰포트 그리드 크기 증감 기능에 키를 지정할 수 있게 되었습니다.
* 콘솔 창의 'log list' 가 정렬됩니다.
* 프로젝트 자동 로드에 실패하면, 에디터가 성공적으로 로드되기 전까지 자동 로드 기능이 꺼집니다.
* uproject 파일에 대해 생성된 솔루션 파일의 이름은 해당 폴더 이름이 아닌 .uproject 파일의 이름을 땁니다.


####게임플레이 및 프레임워크
* 명령줄에 맵 토큰 없이 generatedistillfilesets 를 실행하면 모든 맵 파일을 사용한다 가정합니다.
* 사용할 수 있는 컴파일러가 없거나 설치되지 않았으면서 C++ 템플릿을 선택한 경우, 새 프로젝트 대화창에서는 오류가 납니다.
* PlayerController 에서 인풋 이벤트/축을 바인딩할 수 있습니다.
* ShapeComponent 프로퍼티 (SphereRadius, CapsuleRadius, 등) 는 이제 protected 가 되었습니다. 접근하려면 Set/Get 메서드를 사용하세요.
	* ShapeComponent GetScaled* 와 GetUnscaled* 접근자가 추가되었습니다. 일반적으로 대부분의 곳에서는 스케일된 값을 읽을 것입니다.
	* ShapeComponent 의 스케일 미적용 버전을 사용하는데 관련된 여러 버그도 그 결과 고쳐졌습니다. 이제 스케일된 캡슐에 대한 캐릭터 이동도 올바르게 작동합니다.
* FMatrix 와 FTransform 의 GetAxis 를 GetScaledAxis 로 바꿨습니다.
* USkeleton 상의 AnimationNotify 에 대한 코드 루핑에 약간의 최적화가 있었습니다.
* 다수의 함수 리팩터링을 포함해서 여러가지 추가 GWorld 레퍼런스를 제거, 명백한 대안 컨텍스트가 없는 GWorld 레퍼런스의 수를 크게 줄였습니다.
	* 또한 현재 GWorld 를 반환하는 다수의 클래스에 GetWorld 를 추가했습니다 (적절한 때에 GWorld 레퍼런스를 제거하는 것이 훨씬 단순해 집니다).
* SpawnActor 와 관련된 템플릿을 개정했습니다.
	* 그에 대한 대부분의 파라미터는 이제 SpawnActor 함수/템플릿으로 전달할 수 있는 구조체에 들어갑니다. GamePlayers 를 private 로 만들고 접근자를 추가했습니다.
	* 기존에 월드를 통한 로컬 플레이어를 구하기 위해 플레이어 배열을 사용했던 여러 경우를 대체했습니다.
* **피직스:**
	* 솔버 반복처리 횟수를 늘려 피직스 시뮬레이션을 개선시켰습니다.
	* 리팩터링: bCreatePhysicsState 플래그를 제거했습니다;
		* 콜리전이 켜져 있을 때만 피직스 스테이트를 생성합니다.
		* 질의용 콜리전 없이 피직스 스테이트를 생성해야 하는 경우, bAlwaysCreatePhysicsState 를 _True_ 로 설정해 주시기 바랍니다.
* 캐릭터 이동 개선사항
	* 표면 슬라이딩을 위한 중복 코드 다수를 리팩터링하여 공통의 SlideAlongSurface() 또는 SlideAlongVerticalSurface() 함수를 사용하도록 했습니다.
	* 슬라이딩 코드가 충격 지점의 표면 노멀이 아닌, 부드러운 캡슐 노멀을 사용하도록 변경했습니다.
		* 지오메트리 구석에서의 슬라이딩이 가장 눈에 띄게 개선됩니다.
	* 이제 사실상 MaxStepHeight 의 기준이 캐릭터가 떠있는 베이스가 아닌, 실제 바닥을 기준으로 하도록 했습니다.
		* StepUp 역시도 캡슐의 부드러운 부분에서 더 높은 표면을 올라설 수 있도록 했었으나, 이제 발을 올려 딛는 충격 지점 높이를 검사합니다.
		* 게임에서 기존의 행위 반영을 위해서는 기본값을 높여야 할 수 있습니다.
	* StepUp 코드는 걸어갈 수 없는 (바닥 노멀이 나쁜) 표면에 캐릭터가 놓이지 않도록 합니다. 앞으로는 걸을 수 없는 노멀을 가진 낮은 오브젝트 위로 이동할 때의 동작을 개선시킬 것입니다.
	* 바닥 스윕 테스트가 이제 인접 세로면을 피합니다. 그러한 표면과의 충격으로 잘못된 바닥 노멀이 보고되는 것을 방지하기 위해서입니다. ComputeFloorHeight() 참고.
	* MoveComponent 에 관통 상태에서의 시작을 처리하는 SafeMoveUpdatedComponent() 를 추가했습니다.
		* 이동을 막는 관통이 감지된 경우, 빠져나와서 원래 동작을 재시도합니다.


####온라인
* 데디케이티드 서버 지원 업데이트
	* Steam 의 독립형 데디케이티드 서버 API 지원을 위해 여러가지 코드를 수정했습니다.
	* 데디케이티드 서버에는 사운드와 오디오 디바이스가 확실히 꺼지도록 했습니다.
* Windows 플랫폼 하드웨어 조사가 개선되었습니다.
	* 조사는 첫 실행시 한 번, 그 이후 한 달에 한 번 실행됩니다.
	* 에디터 시작시마다 지속적인 에디터 퍼포먼스(슬레이트 프레임 속도)를 측정하여 기록합니다.
	* CPU, 운영체제, RAM 통계가 개선되었습니다.
	* 엔진이 특정 게임에 맞게 특화된 경우 하드웨어 조사 기능을 노출시킵니다.


####렌더링
* **머티리얼과 텍스처:**
	* Visualizetexture 는 이제 뎁스 버퍼를 좀 더 알아볼 수 있는 색 범위로 매핑시킵니다.
	* 이제 큐브 텍스처는 텍스처 에디터에서 올바르게 중앙에 위치합니다.
* **라이팅 & 섀도잉:** 
	* 다수의 그림자 cvar 이름을 변경했습니다.
	* 그림자 렌더링 조사, 유색 그림자 캐스케이드를 위해 r.Shadows.FreezeCamera 를 추가했습니다.
* **포스트 프로세스 이펙트:**
	* 포스트 프로세싱 기능이 예상대로 작동하는지 테스트하기 위해 r.exposureoffset 를 추가시켰습니다.
	* RenderTestMap 에 TemporalAA 테스트 머티리얼을 추가했습니다 (TemporalAA 와 함께 사용되는 고주파 디더링으로 약간의 렌더링 트릭이 가능합니다).
	* PostProcessVolumes 등의 노출 수동 세팅이 DX10 에서 작동합니다.
* 일부 띠 현상 문제 제거를 위해 HDR 익스포트에 랜덤 디더링을 추가했습니다.


####플랫폼
* 엔진과 에디터를 Mac에 이식시키는 작업이 한창입니다.
* UnrealBuildTool 은 이제 요청에 따라 앱 번들을 PC 로 되복사시킬 수 있습니다 (Mac 실행파일을 체크인 시키는 빌드 머신에만 유용한 기능입니다).

