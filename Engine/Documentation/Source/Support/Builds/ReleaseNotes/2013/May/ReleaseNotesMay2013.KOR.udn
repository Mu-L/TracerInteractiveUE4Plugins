INTSourceChangelist:6537038
Availability:Licensee
Title: 2013년 5월 릴리즈 노트
Crumbs:%ROOT%, Support/Builds
Description:
Parent:Support/Builds
Order:-9
Order: 53

[TOC(start:2 end:2)]

## 빌드 정보


[REGION:simpletable]
| 항목 | 정보 |
| ---- | ---- |
| **Label** | QA_APPROVED_UE4_BUILD_2013_05 |
| **Changelist #** | 1652795 |
| **VISUAL STUDIO VERSION** | Microsoft Visual Studio 2010 version 10.0.40219.1 SP1 Rel |
| **DIRECTX** | June 2010 |
[/REGION]

## 중요 정보

 * 현재 엔진 개발 로드맵: [UE4 로드맵](https://udn.unrealengine.com/questions/topics/roadmap.html)
 * GDC 라이선시 세션 비디오: [라이선시 비디오](https://udn.unrealengine.com/questions/166995/gdc-2013-licensee-session-videos.html)
 * UE4 빌드 타깃 변경사항: [UE4 타깃 변경사항](https://udn.unrealengine.com/questions/166994/ue4-target-changes.html)


## 주요 신기능


#### 에디터 시스템

* **이제 스켈레탈 메시 임포트시 피직스 애셋 생성**
	* 임포트 대화창에 스켈레탈 메시에 대한 피직스 애셋을 자동 생성해 주는 옵션이 생겼습니다.
	* 기본적으로 켜져 있으며, 임포트 프로세스 도중 세 가지 방식 중 한 가지로 작동 가능합니다:
	* 새 메시에 대해 새 애셋을 만들거나,
	* 사용자가 다른 스켈레탈 메시와 피직스 애셋을 공유하도록 선택하거나,
	* 사용자가 아무것도 선택하지 않고 **CreatePhysicsAsset** 설정을 취소하도록 할 수 있습니다.
 	
		![](importSkM1.png) ![](importSkM2.png)
* **콜리전 시스템 인터페이스 개선사항**
	* 개선된 인터페이스의 콜리전 프로파일 시스템이 추가되었습니다.
	* 현재 셋업에는 NavigationTestingActor, BlockingVolume, Character, InterpActor, StaticMeshComonent, SkeletalMeshActor 가 들어 있으며, 사용가능한 프로파일 목록은 BaseEngine.ini 에서 찾을 수 있습니다.
	* (아래 스크린샷의) 커스텀 편집 UI 에 새 채널 매핑 기능이 생겼습니다.
	* 커스텀 엔진/게임 채널 이름을 BaseEngine.ini 에서 바꿀 수 있습니다.
* **색 선택 툴**
	* 색 선택 툴에 점안기 기능이 추가, 화면상의 어느 곳에서나 빠른 색 선택이 가능합니다.
		![](dropper1.png) ![](picker1.png)
* **레벨 브라우저에서의 소스 컨트롤**
	* 이제 사용자가 레벨 브라우저에서 소스 컨트롤 기능을 접할 수 있게 되었습니다.
		
		![](source.png)
	* 소스 컨트롤 어플리케이션과 UE4 사이의 전환이 잦은 상황에서의 작업방식 통합이나 가속에 커다란 이점이 있을 수 있습니다.


#### 블루프린트

* **인풋 바인딩 변경사항**
	* 블루프린트에 더이상 명시적으로 인풋 컴포넌트를 추가할 필요가 없습니다. 그 대신 인풋 서브메뉴에서 어느 블루프린트에든 바인딩을 추가시킬 수 있습니다.
	* Axis 값에 대한 Getter 를 놓거나 Action 및 Key Event 를 생성할 수 있습니다. Key Event 는 디테일 패널에서 Ctrl, Alt, Shift 조합을 지정할 수 있습니다.

		![](bindings2.png) ![](bindings3.png)
	* Action 과 Axis 는 Base/DefaultInput.ini 에 정의되며, 각 액션은 복수의 키에 매핑 가능합니다.
	* 액터는 더이상 제어되지 않습니다. 폰으로 빙의되거나, 그 위에 인풋을 켜거나 할 수 있습니다.
	* 레벨 블루프린트의 바인딩은 항상 활성, 폰의 바인딩은 빙의될 때만 활성, 액의 바인딩은 Enable/Disable Input 호출에 의해 활성/비활성 상태가 되며, 인풋 스택의 순서는 다음과 같습니다:
		
		1. Enable Input 시킨 액터
		1. 레벨 블루프린트
		1. 빙의된 폰


#### 애니메이션

* **소켓 편집 기능 강화**
	* 이제 기본적으로 스켈레톤에 소켓이 추가되며, 커스터마이징도 가능합니다!
	* 이제 메시 전용 소켓도 스켈레톤으로 승격 가능합니다.
	* 여러가지 소켓 뷰 표시를 위해 필터도 추가되었습니다. 뷰포트의 "소켓 표시" 모드를 통해 접근 가능합니다.
	* 스켈레톤 트리의 "활성 소켓" 필터를 사용해서 스켈레톤 소켓을 표시하도록 선택하면 회색으로 나타나고, 메시 소켓을 선택하면 화면상의 빨강 점으로 나타납니다.


#### 렌더링

* **포스트 프로세스 머티리얼**
	* 이제 머티리얼 에디터에서 커스텀 포스트 프로세스 이펙트를 만들 수 있습니다!
	* 다수의 이펙트를 포스트 프로세스 볼륨에 추가시킬 수 있습니다.
	* 포스트 프로세스 볼륨은 같은 베이스 머티리얼이 사용되는 경우 머티리얼 파라미터를 블렌딩합니다.
	* 포스트 프로세스 머티리얼은 커스텀 렌더링 패스에서 깊이값에 접근 가능, 화면상의 특정 오브젝트를 걸러내는 작업이 가능합니다.
		![](Teaser3.png) ![](Teaser1.png)
		![](Teaser0.png) ![](Teaser2.png)
	* 자세한 정보는 UDN 의 [포스트 프로세스 머티리얼](Engine/Rendering\PostProcessEffects\PostProcessMaterials) 문서를 참고해 주시기 바랍니다.


#### 오디오

* **사운드 큐 에디터**
	* 에디터에서 사운드 큐를 미리볼 때, 큐를 흐르는 경로가 블루프린트의 신호와 비슷하게 표시되어, 큐가 단순한지, 복잡한지, 그 이상인지를 알 수 있습니다.
		
		![](Car_Impact_Cue.jpg)(w:640)
* **감쇠 모양**
	* 이제 자체적인 Shape 프로퍼티에서 구체(기본값), 박스, 캡슐, 원뿔 중 하나를 선택할 수 있습니다.
		![](attenuation1.png)(w:425)
	* 각 감쇠 볼륨은 별도의 치수와 감쇠 거리를 가질 수 있습니다.


#### 언리얼 프론트엔드

* **언리얼 콘솔 바로가기**
	* 언리얼 콘솔/프론트엔드에서 자주 사용되는 명령을 바로가기 브라우저에 저장, 참조과 사용이 쉬워집니다.
		
		![](console4.png)(w:800)


## 새로 추가된 내용

#### 에디터와 툴

* **슬레이트와 UI**
	* 모든 메뉴에 세로 줄바꿈이 지원됩니다.
		* 큰 메뉴 크기가 작업 공간 높이 안에 맞도록 제한됩니다.
		* 메뉴에 세로 스크롤바가 필요하면 나타납니다.
	* 콘텐츠 브라우저, 레이어, 레벨, 레벨 에디터, 머티리얼 에디터, 머티리얼 인스턴스 에디터, 레벨 블루프린트의 특정 컨텍스트 메뉴에 확장가능 고리가 (x17) 추가되었습니다.
* 콘텐츠 브라우저에 "노매드 탭" 이 생겨, 최대 4 개까지 부를 수 있습니다. 노매드 탭은 어느 도킹 영역이나 탭에도 떼었다 붙일 수 있습니다.
	* 퀵 브라우저와 주요 탭 콘텐츠 브라우저가 각각 콘텐츠 브라우저 1 과 콘텐츠 브라우저 2 로 대체되었습니다.
	* 콘텐츠 브라우저 3 과 콘텐츠 브라우저 4 가 추가되었습니다.
* MakeEditWidget 메타데이터(벡터 위젯 편집하기)가 Actor 클래스의 구조체/배열 데이터 멤버 내 정의된 벡터에도 작동합니다.
* 새 프로젝트 대화창을 로켓 빌드가 아닌 데서도 사용할 수 있게 되었습니다. UE4Editor.exe 를 인수 없이 실행시키(거나 그냥 더블클릭하)면 이 창이 표시됩니다.
	* 이 대화창은 에디터에서 파일->새 프로젝트 메뉴를 통해서도 접근 가능합니다.
	* 현재 코드 템플릿 포함 프로젝트는 만들 수 없습니다. 나중에 시도해 주세요.
* "콘텐츠 이주" 기능을 추가했습니다. 한 게임의 모든 애셋과 그 의존성 전부를 다른 게임으로 복사할 수 있습니다.
	* 레벨 브라우저의 레벨, 콘텐츠 브라우저의 폴더나 개별 애셋에 우클릭한 다음 이주(Migrate)를 선택하면 됩니다.
* 리디렉터에 우클릭한 후 수동으로 고치는(fix up) 기능을 추가했습니다. 일련의 경고가 잇따릅니다.
	* 로드되지 않은 맵에서 레퍼런스된 리디렉터는 고쳐지지 않으나, 로드되지 않은 맵으로의 레퍼런스 중 고칠 수 있는 것은 고칩니다.
	* 코드에서 레퍼런스된 리디렉터는 완전히 고쳐지지 않습니다.
	* 헤드 리비전이 아니거나 다른 사용자가 체크아웃시킨 리디렉터는 완전히 고쳐지지 않습니다.
	* 그 레퍼런서가 헤드 리비전이 아니거나, 다른 사용자가 체크아웃시켰거나, 체크아웃 거부당한 리디렉터는 완전히 고쳐지지 않습니다.
* **거대 월드 지원**
	* 월드 브라우저 기능이 추가되었습니다 (개발중입니다).
	* 사용하려면 **편집 > 개인설정 > EpicLabs > WorldBrowser** 를 선택하면 됩니다.
	* **파일 > 월드 열기** 명령으로 월드를 열 수 있습니다. 모든 서브레벨이 저장된 폴더를 엽니다.
	* 월드 브라우저는 월드의 서브레벨을 시각적으로 확인하며 놓을 수 있고, 해당 서브레벨간의 스트리밍 동작을 관리해 줍니다.
	* 게임에서 월드를 실행시키기 위한 명령 패턴은 이와 같습니다: `MyGame /Game/MyWorld/MyWorldPersistentMap?addmaps=Map01`
	* 로드된 월드를 게임플레이 도중 새로운 원점(보통 제로 원점)으로 옮길 수 있습니다. 현재 자동으로 되지는 않으나 앞으로 가능할 것이며, `SetWorldOrigin` 콘솔 명령을 통해 테스트할 수 있습니다.
* **랜드스케이프**
	* 랜드스케이프 스플라인 메시의 경우 Z 만 선택할 수 있었던 것에서 "앞"(forward) 축을 선택할 수 있게 되었습니다.
	* 스플라인 편집 모드에서 랜드스케이프 스플라인 메시를 클릭하면 해당 스플라인 선분이 선택됩니다.
	* 랜드스케이프를 FBX 포맷으로 익스포트 가능해 졌습니다.
	* 이제 랜드스케이프를 감소된 LOD 로 익스포트 가능합니다. 랜드스케이프 액터의 프로퍼티에서 설정합니다.
	* 랜드스케이프 하이트맵과 레이어에 대한 "리임포트" 기능을 추가했습니다. 해당 레이어를 원래 임포트했던 파일 또는 최근 익스포트시켰던 파일에서 리임포트합니다.
	* "대화식" 프로퍼티 변경 유형 추가, 랜드스케이프 스플라인 프로퍼티를 대화식으로 편집할 때 콜리전 데이터 리빌드 작업을 몰아서(defer) 하느라 발생하던 버벅임을 해결하는 데 사용됩니다.
	* 랜드스케이프 스플라인은 이제 하이 디테일 콜리전을 생성, 총알 트레이스를 막는 등의 작업이 가능합니다.
	* 랜드스케이프 에디터가 열려있고 편집할 랜드스케이프가 없는 경우, "새 랜드스케이프" 패널이 기본으로 펼쳐집니다.
	* 랜드스케이프 툴/브러시 버튼과 세팅에 툴팁을 추가했습니다.
* **레벨 에디터 뷰포트 메뉴 손질**
	* 뷰포트 보기 메뉴를 두 개의 메뉴로 나눴습니다.
	* 카메라 유형과 뷰 모드 입니다.
	* 여러가지 메뉴 라벨과 항목 배치를 말끔히 했습니다.
	* 레벨 뷰포트 메뉴 버튼 라벨에 아이콘을 추가했습니다!
	* 카메라 유형과 뷰 모드 유형 둘 다 표시됩니다.
	* 툴바 메뉴 아이템 위젯에 옵션 라벨 아이콘이 지원됩니다.
* 모듈 UI 에 리로드 버튼이 생겼습니다.
* 레벨 에디터에 레벨 에디터 리컴파일 옵션이 생겼습니다.
* 사용자가 다른 창을 클릭하면 에디터의 모달 창이 깜빡입니다 (현재 Windows 전용).
	* 다른 슬레이트 창이 활성화되려 하면 활성 모달 창(OS 자체 창이 아닌 슬레이트 창만)이 깜빡입니다.
	* Windows 태스크바에서 모달 창을 제거했습니다.
	* 모달이 표시되면 백그라운드 창이 완전 비활성화된 백그라운드 창이 됩니다.
* 클래스 코멘트는 이제 에디터의 툴팁으로 표시됩니다.
* **프로파일러**
	* 새 이벤트 그래프 위젯을 추가했습니다.
	* 사용자가 데이터 그래프에 클릭할 때마다 새 이벤트 그래프가 새 탭 도큐먼트로 열립니다.
	* 다음과 같은 뷰 모드가 지원됩니다:
		* 계층형
		* 포함 시간(합산)에 따른 목록형
		* 제외 시간(합산)에 따른 목록형
	* 기본적인 "핫 패스 펼침", 핫 패스에 대한 컬러 코딩 기능을 구현했습니다.
	* 이벤트 그래프에 대한 컨텍스트 메뉴를 추가했습니다 (완벽 구현되지는 않았습니다).
	* 통계 종합 기능을 추가했습니다 (첫 반복처리 작업).
	* 데이터 그래프 요약에 종합된 통계 정보와 함께 현재 통계 값이 표시됩니다.
* **스태틱 메시 에디터**
	* 스태틱 메시 에디터에서 소켓 이름을 바꿀 수 있습니다.
	* Delete 키를 누르면 스태틱 메시 에디터에 선택된 소켓이 지워집니다.


#### 블루프린트

* 이제 사용자가 블루프린트 그래프의 코멘트 박스 제목 부분을 더블클릭하여 코멘트를 수정할 수 있습니다.
* 시각적 프리미티브 컴포넌트를 가진 액터 기반 블루프린트 전부에 대해 블루프린트 썸네일 렌더링 기능을 추가했습니다.
* 블루프린트 창의 변수와 함수도 숨겨진 카테고리를 따르게 되었습니다.
* 블루프린트 컴포넌트가 이제 적합한 클래스 아이콘을 사용합니다.
* GameplayStatics 함수를 추가, 블루프린트에서 Push, Pop, Clear 함수를 사용할 수 있게 되었습니다.
* 이제 루프를 통해 레벨 맵을 로드하는 등의 비고유 잠복성 동작이 블루프린트에 지원됩니다.
* 블루프린트 에디터에 diff 버튼이 추가, 소스 컨트롤에 저장된 기존 버전의 블루프린트와 비교할 수 있게 되었습니다.
* 내 블루프린트 탭에서 선택된 프로퍼티에 대한 기본값을 디테일 패널에서 바로 편집하는 기능이 추가되었습니다 (실험적 기능으로, EpicLabs 플래그를 경유합니다).
* 블루프린트 에디터 디버깅 툴바에 PIE 버튼이 포함됩니다.
* 무한 루프가 있는 블루프린트는 이제 블루프린트 예외를 던지면서 로그에도 기록되고, 블루프린트 디버거가 활성화된 경우 중단되기도 합니다.
* 새로 생성된 블루프린트는 이제 그래프 모드가 아닌 컴포넌트 모드에서 열립니다.
* 블루프린트 모달 색 선택 툴의 부모가 그 SColorBlock 으로 설정되어 최상위 레벨 창으로 나타나지 않습니다.
* 에디터에서 사용자가 일시정지된 시뮬레이션을 한 프레임씩 진행시킬 수 있게 되었습니다.


#### Analytics

* 이벤트 속도가 설정된 한계치를 넘어서면 SwrveAnalytics 가 경고를 합니다.
	* Swrve 는 분당 60 회로 정의되어 있으나, 총합 측정치는 아닙니다. 저희는 분당 70 회를 넘어설 때 이벤트를 제한시킬 것을 제안합니다.
* Analytics 는 UE_BUILD_SHIPPING 빌드 세팅이나 -RELEASEANALYTICS 명령줄이 붙었을 경우 Release 계정을 선택합니다.


#### 게임플레이와 프레임워크
  
* `OnActorHit` 델리게이트가 Actor 에 추가되었습니다.
* **리플리케이션**
	* 컴포넌트 리플리케이션: [](https://udn.unrealengine.com/questions/165062/component-replication.html)
	* 빠른 TArray 리플리케이션: [](https://udn.unrealengine.com/questions/164217/how-can-i-improve-performance-of-tarray-replicatio.html)
* **내비게이션 메시**
	* 내비메시 생성 도중 복셀 필터링 여부 제어를 위한 ini 설정 메커니즘을 추가했습니다 (RecastNavMesh::bPerformVoxelFiltering).
	* 내비메시 빌드 시간에 내비게이션 링크 종단을 스태틱 지오메트리로 끌어붙이는 범용 메커니즘을 구현했습니다.
	* 최대 내비게이션 쿼리 검색 노드를 ini 파일을 통해 설정 가능하도록 만들었습니다 (RecastNavMesh::DefaultMaxSearchNodes).
* 이제 구조체에 protected 또는 private 반영 멤버 변수가 포함됩니다.
* 모든 틱 함수를 로그로 덤프시키는 'dumpticks' 콘솔 명령이 추가되었습니다.
	* 'enabled' / 'disabled' 옵션 파라미터를 붙이면 각각 enabled / disabled 된 틱 함수만 덤프시킬 수 있습니다.
* HUD 에 계층형 트리 구조 통계 표시를 토글시키는 'stats tree 스레드이름 (옵션 통계이름)' 콘솔 명령을 추가했습니다.
	* 'stats treeup (옵션 줄수)' 콘솔 명령으로 트리 위쪽으로 이동합니다.
	* 'stats treedown (옵션 줄수)' 콘솔 명령으로 트리를 아래쪽으로 이동합니다.
* IsRunningGame(), IsRunningServer() 함수로 실행파일이 MyGame.exe 인지 MyGameServer.exe 인지, 아니면 에디터가 게임으로 실행중인지 서버 모드인지 알 수 있습니다.
* 휘발성(transient) 출력을 '내 문서' 안의 사용자 지정 위치로 저장하는 기능이 초벌 지원됩니다. -SaveToUserDir 옵션으로 켭니다.
* Actor 에서 GetNetOwner 유형 함수를 다수 제거, GetNetConnection 함수로 대체시켰습니다.
	* PlayerController 에 NetConnection 변수를 추가, 모든 GetNetConnection 호출을 그쪽으로 경유시켰습니다.
	* SERVER 에서 NULL 인 경우 -> LocalPlayer 로.
	* CLIENT 에서 NULL 인 경우 -> Non Owner 로.
	* SERVER 에서 NULL 이 아님 -> 클라이언트로의 리플리케이션 연결.
	* CLIENT 에서 NULL 이 아님 -> 리플리케이션 오너 로.
	* 코드 여러 부분에서 다수의 repowner 검사가 단순해 지기를 기대합니다.
	* PlayerController 없는 Actor 가 GetNetConnection 을 오버로드하여 RPC/Replication 을 사용합니다.
* 콘솔 자동완성
	* 콘솔 자동완성 검색시 게임마다 맵 경로에 대한 설정을 시킬 수 있습니다.
	* 현재 사용자의 개발자 폴더도 자동완성 맵 이름 검색 대상에 포함됩니다.


#### 코어

* **플러그인**
	* UE4 플러그인이 처음으로 지원됩니다! (작업중이나 사용은 가능합니다).
		* .uplugin 파일을 만들어 로드할 모듈을 선언하면 됩니다. 이 플러그인 파일은 JSon 포맷입니다.
		* `.uplugin` 파일은 UBT 와 UE4 에 자동으로 발견됩니다.
		* 플러그인 모듈과 C++ 코드는 생성되는 프로젝트 파일에 자동 추가됩니다.
		* 엔진 플러그인은 /Engine/Plugins 디렉터리에서 발견되어 로드됩니다.
		* 플러그인에는 Content 서브 폴더가 있을 수 있으며, 자동 감지됩니다.
		* 프로젝트 전용 플러그인이 지원됩니다! `<게임이름>/Plugins` 디렉터리를 만들면 됩니다.
		* 단일형(monolithic) 빌드는 현재 해당 프로젝트에 대한 모든 플러그인으로 컴파일됩니다.
		* 플러그인은 다중 모듈을 지원합니다. 각 모듈의 카테고리로는 Editor, Runtime, Development 가 가능합니다.
		* 다중 플러그인 로딩 단계가 지원됩니다 (PreEngineInit, PreGameInit, Default). 
		* 플러그인 파일은 기본적인 버전 검사를 지원합니다 (엔진 버전, 파일 버전).
* (보통 이메일에서 명령줄로 붙여넣기를 할 때) 잘못된 '-' 가 생기는 경우 경고를 띄우고 빠져나갑니다.
* PhysX3Common* 을 Engine/Binaries/Win<32/64> 폴더에서 적합한 Engine/Binaries/ThirdParty/PhysX 폴더로 옮겼습니다.
* 자동화 창, 컨트롤러, 워커 모듈이 리로드 가능한 DLL 이 되었습니다.
* 아카이브에 serialize 할 때 모듈 전용 버전 번호를 사용할 수 있게 되었습니다.
	* 모듈 로드시 모듈의 버전을 등록시키기 위해 모듈에다 FCustomVersionRegistration 유형 전역 변수를 놓을 수 있습니다.
* 서브오브젝트 삭제를 위해 서브오브젝트 리디렉터를 사용할 수 있게 되었습니다. 그러기 위해서는 subobj 리디렉터를 .ini 파일에 추가시키고 NewSubobjName 을 공백으로 설정해 줘야 합니다.
* 구조체 리디렉트가 지원됩니다. 구조체 리디렉트를 .ini 파일에 추가시키는 포맷은 다음과 같습니다: +ActiveStructRedirects=(OldStructName="Foo",NewStructName="Bar").


#### 플랫폼

* 다중 플랫폼 빌드 관련 문제 해결을 위해 DependencyCache.bin 이 플랫폼별로 나뉘었습니다.
* IOSTargetPlatform 같은 플랫폼 전용 dll 은 `Binaries/Win<32/64>` 폴더의 서브디렉터리에 들어갑니다.
	* 모듈 규칙에서 DLL 빌드시 사용되는 BinariesSubFolder 를 지정할 수 있게 되었습니다.
* 새 WindowsServer 플랫폼에 대한 쿠킹 변경사항이 있습니다.
	* WindowsServer 는 SM4,SM5 셰이더와 모든 텍스처 포맷 처리를 무시합니다.
	* 렌더 스레드 명령에 대한 **ENQUEUE** 매크로를 비활성화시켰습니다. UE_SERVER=1 실행시 항상 NOOP 입니다.
* 데디케이티드 서버에 대한 첫 지원이 시작됩니다 (NULLRHI, 렌더 스레드 없이 강제, 등).
* 데디케이티드 서버에 대한 자동 로그인 (명령줄에 -login/-pass 를 붙이면 온라인 서비스에 로그인한 다음 RegisterServer() 호출을 시도)합니다.
* 대규모 IOS 업데이트가 있었습니다 (오디오, 슬레이트, 언리얼 콘솔 지원).
* DLL 검색 경로의 안전한 수정을 위해 PushDllDirectoty/PopDllDirectory 를 추가했습니다.
* DLL 로드 전 해당 플랫폼용 DLL 이 있는지 검사하는 기능이 지원됩니다 (즉 Win64 지원 DLL 만 체크인된 상태에서, PS4 SDK 가 설치되지 않은 경우 PS4 는 크래시가 날 수 있으니 로드하지 않습니다).


#### 애니메이션

* **페르소나 뷰포트**
	* 원근 이외의 다른 뷰포트 유형을 추가시켰습니다 (직각 내려/측면/좌측).
	* 페르소나 뷰포트에서 'F' 에 대한 키 핸들러를 추가, 프리뷰 메시( 또는 선택된 경우 본이나 소켓)에 포커스를 맞춥니다.
	* 페르소나 뷰포트 메뉴에서 '본 두께' 옵션을 제거했습니다.
	* 본 축 표시 모드를 지정하는 신기능 추가, 페르소나 뷰포트 표시 메뉴를 통해 제어 가능합니다.
	* 페르소나에서 프리뷰 메시를 숨기는 기능을 추가했습니다.
	* 페르소나에 애디티브 애니메이션 렌더 모드가 추가되었습니다.
	* 페르소나에서 본 렌더링이 와이어프레임 원뿔과 구체를 그리도록, 선택된 본에 따라 색을 입히도록 바꿨습니다.
* 페르소나에서의 생성과 편집 둘 다에 AnimComposite 를 사용하도록, 빔 블루프린트에서 사용하도록 하는 기능이 지원됩니다.
* 페르소나에서 카메라 고정과 카메라 따라가기에 대한 타깃 지점을 액터 위치가 아니라 프리뷰 메시 바운드의 중심이 되도록 변경했습니다.
* **Sync Group**
	* 시퀀스 플레이어와 블렌드 스페이스는 Sync Group 멤버로 선언 가능합니다. 그룹의 리더는 시간 진행 제어와 다른 모든 멤버에 대한 생성 알림을 담당합니다.
	* 각 그룹 멤버마다 규칙이 있습니다: 블렌드 웨이트 총합이 가장 높으면 리더 (기본), 항상 리더, 절대 리더 아님
* "FBX 익스포트" 기능을 페르소나 뷰포트 메뉴에서 애셋 브라우저로 옮기고, 한 번에 여러 애니메이션을 익스포트하는 기능을 추가했습니다.
* 이제 모프 타깃 삭제를 컨텍스트 메뉴를 통해 처리 가능합니다.


#### 렌더링

* **파티클 시스템**
	* Global Vector Field tightness 를 Global Vector Field 캐스케이드 모듈에서 덮어쓸 수 있습니다.
	* ParticleSize 머티리얼 노드를 사용할 수 있게 되었습니다. 이 노드는 파티클의 xy 월드 스페이스 크기를 반환합니다.
* **머티리얼**
	* TextureObject 표현식들은 생성시 선택된 텍스처가 자동 할당됩니다.
	* TextureObject 표현식들에 Use Current Texture 메뉴 옵션이 생겼습니다.
	* TextureObject 와 TextureSample 은 새로운 메뉴 옵션으로 상호 교환 가능합니다.
	* WorldPosition 머티리얼 표현식에 새로 생긴 세팅을 통해 월드 포지션에 셰이더 오프셋을 포함시킬지 여부를 결정할 수 있습니다. 셰이더 오프셋에는 월드 포지션 오프셋과 테셀레이션 까지도 포함됩니다.
* **포스트 프로세스 이펙트**
	* 기존 모션 블러를 새로운 모션 블러 알고리즘으로 대체시켰습니다. [](http://graphics.cs.williams.edu/papers/MotionBlurI3D12/McGuire12Blur.pdf) 와 유사하나 여전히 반해상도이며, 자잘한 개선사항이 예정되어 있습니다.
	* CustomDepth 패스 렌더링 반복처리의 첫 작업으로, 프리미티브 컴포넌트의 체크박스이며, 잇따르는 포스트 프로세스에서는 그것을 선택해 줘야 보이게 됩니다 (실루엣 렌더링에 좋습니다). 에디터에서 메시/프리미티브 컴포넌트의 체크박스나 게임 코드를 통해 켤 수 있습니다.
	* 머티리얼을 통한 포스트 프로세싱 첫 반복처리가 가능합니다 (전체 화면 패스에서 렌더링할 머티리얼을 PostProcessVolume 에 지정, SceneTexture 머티리얼 표현식을 사용해서 Postprocess0 또는 GBuffer 프로퍼티를 입력할 수 있습니다). TemporalAA 개선, 멀티 패스 지원 등이 필요합니다.
	* 기본 안티-에일리어싱 솔루션이 Temporal AA 가 되었습니다. FXAA 보다 훨씬 부드러운 고품질 이미지를 내어줍니다.
* 라이트에 **ShadowSharpen** 프로퍼티가 추가되었습니다.
* r.CompositionGraphDebug 를 통해 합성 그래프 디버그 덤프가 가능합니다.
* HighResShot 명령이 해상도는 물론 곱하기 값을 사용할 때도 작동합니다. 사용 예: HighResShot 1920x1080.


#### 오디오

* SoundNodeBranch 가 추가되었습니다. 오디오 컴포넌트에 네임드 부울 파라미터를 사용하여 사운드 큐를 변경할 수 있습니다.
* SoundModes 이름이 SoundMix 로 변경되었습니다.
* 하나의 Base SoundMix 를 설정하여 여러 개의 SoundMix 모디파이어를 푸시해 주는 옵션이 생겼습니다.
* 단일 CurrentMode, 그 페이딩 분량과 함께 BaseSoundMode 개념도 활성 SoundMix 목록과 와 그 현재 상태로 대체되었습니다.
	* 'STAT SOUNDMIXES' 명령으로 어느 SoundMix 가 활성 상태인지 (사실상 ListSoundModes 명령 대체), 그 페이드 인 레벨, 어느 모드가 EQ 제어하에 있는지를 표시합니다.
	* 오디오 이펙트 매니저는 이제 EQ 변화 적용 전 사운드 모드 우선권을 검사합니다.
	* EQ Priority 프로퍼티를 통해 더욱 자세한 EQ 제어가 가능하며, 모든 사운드 모드가 꺼졌을 때 EQ 이펙트를 없애는 함수가 새로 생겼습니다.
* 새로운 Reverb Effect 애셋 유형을 통해 Reverb 세팅을 노출시켰습니다.


## 업그레이드 노트

#### 에디터와 툴
 
* 이제 Game, Editor, GameUncooked, Server 모두 자체적으로 타깃 유형을 갖습니다. Target.cs 파일의 'Type' 프로퍼티에 사용됩니다.
	* TargetType.Game:         UEBuildGame 타깃을 빌드합니다.
	* TargetType.Editor:       UEBuildEditor 타깃을 빌드합니다.
	* TargetType.Server:       UEBuildServer (데디케이티드 서버) 타깃을 빌드합니다.
	* TargetType.GameUncooked: 기본적으로 (`-game` 인수를 통해) 게임을 실행시키는 UE3BuildEditor 타깃을 빌드합니다.
	* 자세한 내용과 업그레이드 관련 정보는 [타깃 변경사항](https://udn.unrealengine.com/questions/166994/ue4-target-changes.html) 글을 확인해 주시기 바랍니다.
* UE4Editor.exe Example 가 더이상 작동하지 않으며, 그 대신 UE4Editor.exe QAGame 을 사용해야 합니다.
* TFieldIterator 생성자 파라미터의 가독성 향상을 위해 Boolean 에서 Enum 으로 변경되었습니다. 기존에 사용되던 TFieldIterator 는 업데이트가 필요합니다.
	* 이제 모든 컴포넌트가 활성화 / 비활성화 가능합니다.
	* bIsActive 가 SceneComponent 에서 ActorComponent 로 이동되었습니다.
	* 비활성 컴포넌트는 그 틱도 비활성화됩니다.
	* 틱이 필요한 기존 ActorComponent 는 적절한 때 활성화 시켜주거나 생성자에 bAutoActivate = true 로 지정해 줘야 합니다.
* Send PhysicsTransform 은 더이상 가상 함수가 아닙니다. 대신 OnUpdateTransform 을 사용해야 합니다.
* 인풋 바인딩 시스템의 구조가 변경되었습니다.
* Steam SDK 가 1.23a 로 업그레이드 되었습니다.
* 네임드 넷 드라이버를 정의와 활성 드라이버 목록으로 리팩터링시켰습니다.
	* DefaultEngine.ini 의 NamedNetDrivers 파라미터의 이름이 이제 NetDriverDefinitions 가 되었습니다.
		* GetNetMode 는 이제 넷 드라이버의 상태를 확인하여 서버/클라이언트/독립형을 결정합니다.
		* NetMode 변수가 존재는 하나 폐기상태에 접어들었습니다.
* 메시징 시스템이 강한 유형 메시지(UStruct)를 사용하도록 업그레이드 되었습니다.
* GENERATED_UCLASS_BODY() 선언 끝의 세미콜론이 더이상 지원되지 않습니다.
* 액터 팩토리를 리팩터링, 콘텐츠를 로드할 필요 없이 콘텐츠 조각에서 액터를 만들 수 있을지 결정할 수 있도록 했습니다.
* 액터를 생성해 낼 수 없는 콘텐츠를 필터링해 내는 데 관련된 기능에 대한 준비로, 나중에 해당 기능이 생기면 그러한 콘텐츠는 재저장시켜야 제대로 상호작용 가능할 것입니다.
* 사용중인 모든 '비공식' (즉 퍼포스나 ArtistSync 에서 받지 않은) 바로가기, bat 파일 등에 대한 업데이트가 필요할 것입니다.
	* Win32 빌드가 monolithic/requirescookeddata 가 되도록 강제하던 코드를 제거했습니다.
		* **주:** Win32 에디터 빌드는 컴파일러 내 (VS2010, VS2012 모두에서 발생하는) 파라미터 정렬 문제때문에 여전히 작동하지 않습니다.
		* **주:** 게임의 'Uncooked' 버전을 빌드하면 이전 명령줄 전부 그대로 작동합니다만, 커맨드렛 실행은 예외로 어느 exe 든지 "-run=" 를 붙여줘야 작동합니다.
* 이전 글로벌 캔버스 함수를 호출하던 코드는 이제 반드시 캔버스 컨텍스트에서의 동일 함수를 호출해야지, 컨텍스트를 파라미터로 전달해서는 안됩니다.
* GIsGame 은 FApp::IsGame() 로 대체되었습니다.


#### 블루프린트

* 블루프린트에도 LifeSpan 이 적용됩니다. LifeSpan 이 0 이 아닌 경우, 블루프린트는 틱 되도록 설정, 기간이 지나면 자체 소멸됩니다. 씬에서 틱되는 액터의 수가 증가할 수 있다는 점, 유의 바랍니다.
* 카테고리 숨기기가 블루프린트 에디터의 변수에도 적용됩니다.
	* 다수의 프로퍼티에서 말도 안되던 블루프린트 접근을 제거했습니다.
	* 다수의 (주로 컴포넌트) 클래스에 대해 무의미한 카테고리(, 예로 화살표 컴포넌트의 피직스)를 숨겼습니다.
* HUD 의 Canvas 프로퍼티를 protected 로 바꿨습니다.
	* DisplayDebug 의 시그너처 변경시 HUD 가 아니라 Canvas 가 들도록 했습니다.
* 블루프린트 함수 Actor.DestroyComponent 가 폐기되었습니다. 대신 ActorComponent.DestroyComponent 를 사용해 주세요.
* Actor 클래스의 'BlueprintCallable' 함수 다수가 폐기되었습니다. 이로 인해 기존 레벨 블루프린트에서 경고가 생길 수 있습니다.
	* Actor, Emitter, Light 의 AmbientSound, DecalActor, DynamicSMActor, RadialForceActor, physics 함수에 영향을 끼칩니다.
	* 이들 중 하나가 들어있는 Actor 에서 ExposeFunctionCategories 메타데이터를 사용하여 더욱 쉽게 Component 함수를 호출할 수 있게 되었습니다.
* Actor 레퍼런스를 끌어 놓으면, 노출된 컴포넌트 함수를 제공해 주고, ('get' 과 'call' 노드를 합친) 'call function on member' 노드를 놓아 줍니다.
* Actor 를 컴포넌트 함수에 연결하려 할 때, 해당 Actor 에 올바른 유형의 Component 가 들어있는 경우 'Get' 노드를 삽입 시도합니다.
* Actor 에서 NativeConstructionScript, IsRootComponentSimulatingPhysics, CheckHitInfo, GetActorMetrics, SetActorAndComponentsTickEnabled 를 제거했습니다.
* Pawn 에서 AlwaysRelevantDistanceSquared, SetViewRotation, TickSimulated, SetMaxLandingVelocity, HurtByDamageType 를 제거했습니다.
* PC 에서 PreRender, GetPartyMapName, GetPartyGameTypeName 를 제거했습니다.
* URB_BodySetup 이름을 UBodySetup 으로 변경했습니다.
* PhysicsVolume 에서 WillHurt, ModifyPlayer, NotifyPawnBecameViewTarget 을 제거했습니다.
* FEdGraphSchemaAction_K2NewNode::InstantSpawn 이름을 SpawnNodeFromTemplate 으로 변경했습니다.
* 그래프 스키마 메뉴 / 팔레트 빌딩 용으로 생성된 커스텀 블루프린트 노드 템플릿은 이제 반드시 블루프린트로 역추적 가능한 outer 로 생성해야 합니다. 거기서 파생한 커스텀 스키마가 있는 경우, UEdGraphSchema_K2 를 어떻게 변경했는지 예제삼아 보시기 바랍니다.
* WorldInfo 이름을 WorldSettings 로 변경했습니다.
	* BaseEngine.ini 에서 리디렉터를 구했는지 확인하시기 바랍니다.
* AActor::VerifyNoUnreachableReferences 가 제거되었습니다.
* AActor::TickSpecial 이름이 ::Tick 으로 변경되었습니다.
* AActor::TickAuthoritative 와 TickSimulated 가 제거되었습니다.


#### 게임플레이와 프레임워크

* PhysicsActor 와 PhysicalMaterial 에 더이상 사운드/이펙트가 직접 지원되지 않습니다.
	* 이제 게임 전용 PhysicsCollisionHandler 를 만들어야 합니다. 여기에 매 프레임마다 모든 피직스 콜리전이 주어지고, 거기에 원하는 작업을 하면 됩니다.
* Actor 에서 NotifyHitActor/NotifyHitByActor 가상함수를 제거했습니다.
	* 이제 블로킹 콜리전은 ReceiveHit 가 대신합니다.
* Actor 에서 NotifyActorTouch, NotifyActorUnTouch, NotifyComponentTouch, NotifyComponentUnTouch 가상함수를 제거했습니다.
	* 이제 ReceiveActorBeginOverlap 와 ReceiveActorEndOverlap 가 대신하거나, PrimitiveComponent 상의 델리게이트를 겹칩니다.
* **Physics: Collision:** 
	* CollisionProfileSystem 재작업 - BaseEngine.ini 에서 새로운 세트를 확인해 주세요.
	* 이름변경된 채널 : Pawn->PawnMovement, Vehicle->VehicleMovement, RigidBody->PhysicsBody.
	* 제거된 채널 : Mover(->Default), RigidBodyInteractable(->PhysicsBody), Cloth, DeadPawn.
	* 엔진에서 드러낸 채널 : TraceWeapon, Projectile, Pickup (QAGame 의 DefaultEngine 을 확인하세요).
	* 전에는 콜리전 프로파일이 없었던 것을 인스턴싱한 후 콜리전 프로파일을 설정하면 콜리전 세팅을 덮어쓸 수 있습니다.


#### 렌더링

* 포스트 프로세싱 메서드에 AA Method 를 추가했습니다.
* 포스트 프로세스 세팅에서 MotionBlurPerObjectDistance 를 제거했습니다.
* **Atmospheric fog:** 
	* Altitude 레이어 컨트롤 프로퍼티를 추가했습니다.
	* Z 위치에만 영향을 끼치는 Altitude 스케일 변화를 추가했습니다.
	* r.Atmosphere (0 / 1) 콘솔 명령을 추가, atmospheric fog 효과를 켜고/끔과 동시에 관련 리소스를 리로드/제거합니다.
	* 포그와는 별도로 atmosphere 에 대한 표시 플래그를 추가했습니다.
	* 크기 감소를 위해 뷰 균일 버퍼 변수를 반해상도로 줄였습니다.
	* 스카이박스가 없는 레벨에 대한 포그 렌더링 부작용을 제거했습니다.
* LightShaft : LightShaft CVar r.LightShaftDownSampleFactor 를 추가했습니다 (라이트 섀프트 다운샘플링 규모).
* 랜드스케이프 : 스무스 툴 개선, 스무스 필터 크기 조절 기능을 추가했습니다.
* 사전 통합된 GF 를 사용하는 IBL 셰이딩 모델 추정법을 추가했습니다. 새로운 솔루션은 더욱 정확하나 기존 머티리얼의 모습이 바뀔 수 있습니다.


#### 오디오

* SoundNode::Parse API 가 사운드 큐를 통한 경로가 트리 구조가 아닐 때 올바르게 추적하도록 변경했습니다.
	* 각각의 방문된 노드 자체에는 GetNodeWaveInstanceHash 를 사용해서 해시 적용합니다.
	* 이는 SoundNode::ParseNodes 에서 자동 처리되나, ChildNodes 에서 ParseNodes 를 직접 호출하는 노드는 반드시 이것을 적용해야 합니다 (예제로는 USoundNodeMixer::ParseNodes 를 참고하세요).


## 앞으로 추가하거나 현재 작업중인 내용

#### 블루프린트

* 블루프린트 에디터의 컴포넌트 모드에서 컴포넌트를 추가한 이후 편집하려 할 때 더이상 블루프린트를 컴파일할 필요가 없습니다.
* 블루프린트 그래프의 입구/출구/접힌 노드에 클릭하면 디테일 탭에서 입력과 출력을 추가시킬 수 있습니다.
* 블루프린트 세팅을 글로벌 유저 세팅으로 옮겼으며, 이제 개인설정 에디터 앱에서 접근 가능합니다. 블루프린트 에디터에서도 세팅 메뉴를 제거했습니다.
* 블루프린트 글로벌 세팅을 블루프린트 에디터에 새로 생긴 블루프린트 프로퍼티 툴바 버튼으로 접근 가능한 디테일 패널로 옮겼습니다.
	* 블루프린트 에디터 툴바의 '부모재설정'(Reparent) 기능도 디테일 패널로 옮겼습니다 (더이상 에디터 툴바에는 없습니다).
* 이제 블루프린트 에디터의 디테일 패널에서 컴포넌트 프로퍼티를 변경하면, 편집중인 블루프린트를 기반으로 한 액터 인스턴스도 제대로 업데이트됩니다.
* 블루프린트 그래프에 서브 아이템이 하나밖에 없는 경우, '링크 끊기' 서브메뉴는 더이상 나타나지 않으며 그 서브 아이템 자체만 표시됩니다.
* 블루프린트 에디터에서 Actor 가 아닌 것의 부모를 Actor 기반 블루프린트로 재설정할 때면 컴포넌트 토글 버튼이 켜집니다.
* 블루프린트 에디터의 컴포넌트 모드에서 컴포넌트를 옮기면 이제 블루프린트가 더티 상태로 변합니다.
* 블루프린트 미리보기 뷰포트에 앰비언트 큐브 맵이 있는 포스트프로세스 볼륨이 포함됩니다.
* 블루프린트 에디터에서 Actor 기반 블루프린트가 아닌 경우 더이상 컴포넌트 편집 모드가 활성화되지 않습니다.
* 매크로 블루프린트를 편집할 때는 블루프린트의 컴포넌트 모드가 더이상 활성화되지 않습니다.
* 블루프린트의 코드 리팩터링 및 디프리케이팅 개선을 위한 안전성 작업 중입니다.
* UGameplayStatics에 GetPlayerCharacter() 블루프린트 함수를 추가했습니다. GetPlayerPawn() 와 비슷합니다만 캐릭터와 캐릭터 이동에 접근해야 하는 것에 대해서는 APawn 대신 ACharacter 를 반환합니다.
* Select 노드에 지원되는 옵션 수보다 높은 인풋 인덱스 값을 받아서 컴파일 오류가 생겼을 때 (예로 그래프에서 사용된 enum 에다가 나중에 코드에서 값을 더했을 경우), 해당 문제의 추적을 위한 상세 정보가 포함된 메시지를 출력합니다. 이제 오류가 발생한 블루프린트 전체 경로와 Select 노드의 인덱스 유형 이름 (즉 bool, int 또는 enum 의 구체적인 이름)이 나열됩니다.
* 폐기된 블루프린트 함수는 UFUNCTION 메타 섹션에서 DeprecationMessage 를 사용해서 도움이 되는 메시지를 띄울 수 있습니다.
* 블루프린트 에디터의 UI 및 작업방식을 대대적으로 손질하고 있습니다.
* 블루프린트 매크로의 디테일 뷰 입력과 출력에 대한 삭제 버튼이 업데이트되었습니다.
* 블루프린트 변수에 대한 리플리케이션 상태의 버튼 아트워크가 새로 생겼습니다.
* 디테일 뷰에서의 블루프린트 생성 및 채취(Harvest) 버튼을 말끔히 정리했습니다.
* '블루프린트에서 찾기' 대화창에 결과가 없는 경우 메시지가 표시됩니다.
* 블루프린트 함수를 이름으로 fetch 했을 경우 이제 존재 여부를 검사합니다.
* 이제 에디터 종료시 블루프린트 에디터 창이 먼저 닫힙니다.
* 블루프린트 에디터의 핀 숨기기에 대한 아이콘을, 기존 플레이스홀더 아이콘에서 hide_unusedpins.png 로 대체했습니다. 그림만 바뀐 비파괴성 업데이트입니다.
* 여러가지 블루프린트 컴파일 상태에 필요한 아이콘을 명확히 했습니다. 기존 플레이스홀더 아이콘을 새로 승인된 버전으로 대체했습니다. 그림만 바뀐 비파괴성 업데이트입니다. 
* 액터에서 블루프린트 생성, 블루프린트 채취 에 대한 아이콘을 생성(, 기존 플레이스홀더 아이콘을 대체)했습니다. 비파괴성 업데이트입니다.
* '현재 블루프린트에서 찾기', '블루프린트 옵션', 기존 리비전과 비교' 아이콘을 새로 만들었습니다. 가능한 사이즈는 40px & 512px 이며, PNG 애셋만 가능합니다. 비파괴성 체크인입니다 (코드 후크 업이 필요합니다).
* 외부 (써드파티) 모듈의 인클루드 파일은 자신의 PublicInclude 경로에 추가됩니다.
* 써드파티 또는 시스템 파일 인클루드 경로는 정/역슬래시 확인을 하지 않습니다.
* 블루프린트에 FortInteractInterface 인터페이스를 (제거한 이후) 다시 추가해도 더이상 오류가 나지 않습니다.
* 블루프린트 함수는 이제 키워드로 검색 가능합니다.
* LoadStreamlevel / UnloadStreamLevel 블루프린트 액션은 스트리밍 레벨을 찾는 데 있어 전체 경로 없이도 제공된 이름의 일부분만 끝부분이 일치해도 찾을 수 있습니다.
* 액터에 대해서 '콘텐츠 브라우저에서 찾기' 기능 사용시 다른 애셋 유형보다 블루프린트가 선호됩니다.
* 블루프린트 컴파일: 자동생성된 변수 이름이 모호하지 않도록 노드 GUID 가 포함됩니다.
* 디테일 패널에서의 블루프린트 생성 작업방식을 개선시켰습니다.
* 블루프린트 에디터에 대한 UI 손질 작업이 진행중입니다.
	* 블루프린트 탐색기, 변수 탭은 완전히 폐기되어 '내 블루프린트' 탭으로 대체되었습니다.
	* 블루프린트 검색 기능이 리팩터링되었습니다.
	* 블루프린트 인터페이스 UI 가 리팩터링되었습니다.
	* 그래프 액션 메뉴에 컨텍스트 정보를 사용할 것인지 토글시키는 기능이 추가되었습니다.
* 제목을 편집할 수 있는 노드에 대해, 제목 편집 키보드 단축키(F2)를 추가했습니다.
* 엔진 수정 없이 어느 노드에도 노드 제목 변경 기능을 지원할 수 있도록 만들었습니다.
* 그래프 스키마의 노드 템플릿 생성 방식이 여러모로 개선되었습니다.
* 코멘트 박스가 여러모로 개선되었습니다 (바로 편집, 줌아웃 또는 겹친 상태에서 더 나은 적중 검사, 등...).
* 리컴파일 기존 아이콘을 '컴파일 완료' - '더티' 상태에 대해 색상과 채도를 변경시킨 아이콘으로 업데이트시켰습니다. 그림만 변경된 비파괴성 업데이트입니다.
* 변수 추가, 함수, 매크로, 이벤트 그래프에 대해 아이콘을 새로 만들었습니다. 가능한 크기는 16px, 40px, 512px 입니다. 아트 애셋만 추가한 비파괴성 체크인입니다.
* 블루프린트에 MovementComp_Projectile::StopMovement 를 노출시켰습니다.
* CallFunction 에 대한 필터가 친근한 이름을 기반으로 하며, 가능한 경우 짧은 이름도 사용합니다.

 
#### 프레임워크

* ACharacter::BaseChange() 와 JumpOff() 개선:
	* ACharacter::BaseChange() 는 이제 월드 지오메트리라 할지라도 캐릭터가 기반으로 한 실제 액터를 검사, CanBeBaseForCharacter() (캐릭터의 베이스가 될 수 있는지) 여부를 확인합니다. 다른 목적을 위해 월드 지오메트리인 (그래서 베이스로 WorldInfo 를 반환할) 특정 유형 액터들도 이제 제대로 캐릭터의 JumpOff() (점프) 방향을 지시할 수 있습니다.
	* MovementComp_Character::JumpOff() 는 이제 파생 클래스에서 서있는 실제 액터에 따라 (점프 방향 선택같은) 처리를 덮어쓸 수 있도록 무브먼트 베이스를 인수로 받습니다.
	* UMovementComp_Character::GetBestDirectionOffActor(...) 함수를 새로 작성, 캐릭터 속도나 베이스 액터 크기 등에 따라서도 점프 선택을 위해 덮어쓸 수 있습니다.
	* 코드에 마법의 숫자(0.5 z 값)를 JumpOffJumpZFactor 로 노출시켰습니다. 이 파라미터를 사용해서 캐릭터의 베이스가 될 수 없는 무언가를 뛰어넘을 때의 점프 높이를 조정할 수 있습니다.
* **콜리전**
	* 기본 폰이 래그돌로 변하기 전까지는 피직스 오브젝트와 상호작용하지 않도록 했습니다.
	* ECC_Touch 채널 이름을 ECC_Overlap 으로 변경했습니다.
* GetResourceSize 로 이제 PhysX 메모리 풋프린트가 보고됩니다.
* GameVer 에 Engine Version 은 물론 Branch Name, Build Configuration, Command Arguments 까지도 반환됩니다. TTP 에 쉽게 붙여넣을 수 있도록 클립보드에도 복사합니다.
* load/unload/reload exec 함수는 이제 모듈 정리를 위해 pre/post callbacks 을 사용합니다.
* GWorld 를 일반적으로 감소시켰습니다.
* exec 함수를 리팩토링하고 명령 함수성은 명령별 함수속으로 이동시켰습니다.
* UMovementComponent::SetPlayerDefaults() 를 제거했습니다. 엔진에서 필요치 않은데다, 리셋시키고자 하는 것은 게임에 한정된 것입니다.
* 플레이어 컨트롤러가 일시정지 상태에 있을 때도 모디파이어 키가 처리됩니다. 게임 일시정지 동안에도 GPU 프로파일러 접근이나 셰이더 리컴파일이 가능하다는 뜻입니다.
* FTransform 의 Get/SetOrigin 이름이 Get/SetLocation 으로 변경되었습니다.
* LifeSpan 구현을 수정했습니다.
* 일부 글로벌이어서 캔버스 컨텍스트로 전달되었던 Canvas 함수들이 Canvas 클래스로 이동되었습니다.
* 에디터 전용 액터 라벨 함수를 Actor 클래스 밖으로 옮겼습니다.


#### 엔진과 코어

* UnrealBuildTool 시작 시간이 크게 개선되었습니다.
* "플러그인" 지원이 일부 구현되었습니다. 이 부분에 대한 안정성 강화 작업중입니다.
	* 테스트 목적으로 두 가지 예제 플러그인이 추가되었습니다.
* `bAllowManagedCode` 와 `WITH_MANAGED_CODE` 를 완벽 제거했습니다.
* `LoadANSITextFileToStrings` 는 이제 빈 줄을 보존합니다.
* `FCoreDelegates::LevelAddedToWorld`, `FCoreDelegates::LevelRemovedFromWorld` 는 이제 게임과 에디터에서 호출됩니다.
* `GetCategory` 와 `GetCategoryFName` 을 UProperty 밖으로 옮겼습니다. 이들은 이제 `FObjectEditorUtils` 네임스페이스의 유틸리티 함수입니다.
* 엔진 첫 실행시 분석을 위해 하드웨어 사양을 수집합니다 (현재 Windows 전용).
* 라이브 프리뷰, 스탯 프로파일러, 메모리 프로파일러용 아이콘을 모두 다시 만들어 기존 플레이스홀더 아이콘을 대체했습니다. 비파괴형 체크인으로, CL 은 PNG 애셋 뿐입니다.
* 잘못된 '-' 를 잡아내어 앱 종료 전 사용자에게 알려줍니다.
* 메시징: 메시지 de-/serialization 및 transport 가 지속적인 개선중입니다.
* UObject 네이티브 베이스 클래스는 더이상 'F' 로 시작할 필요가 없습니다.
* 원격 디버깅 셋업
	* Engine.ini 에 다음과 같은 세팅이 생겼습니다:
			
			[Engine.ErrorHandling] 
			bPromptForRemoteDebugging=false
			bPromptForRemoteDebugOnEnsure=false
		* 아무거나 true 로 설정하면 사용자는 크래시 발생시 프로그래머가 문제를 원격 디버깅할 수 있도록 묻는 창이 뜹니다.
		* 뒤의 것을 true 설정한 경우, 확인시에도 묻는 창이 뜹니다.
		* 각각 명령줄 옵션 `-PROMPTREMOTEDEBUG`, `-PROMPTREMOVEDEBUGENSURE` 로도 설정 가능합니다.


#### 플랫폼

* 엔진과 에디터를 Mac 으로 이식중입니다
* **언리얼 프론트엔드**
	* 새로운 언리얼 프로젝트 파일을 사용하도록 런처 업그레이드 중입니다. 현재 작동하지 않습니다.
	* 디바이스 매니저의 켜짐/꺼짐/리셋 상태에 대한 툴바 아이콘을 새로 만들었습니다. 코드 후크 업이 필요합니다.
	* 이제 스크린샷은 요청한 프론트엔드 앱에 바로 전송됩니다.
	* 디바이스 매니저의 새로운 레이아웃에 대한 코딩이 있었습니다 - **Power On**, **Power Off**, **Reboot**.
* DependencyCache.bin 파일은 이제 플랫폼 별로 존재합니다.
* 이제 모듈 규칙에 DLL 빌드시 사용되는 `BinariesSubFolder` 를 지정할 수 있습니다. 예:
	
	`BinariesSubFolder=IOS` 이면, Win64 빌드에 대한 DLL 결과는 `Engine/Binaries/Win64/IOS` 에 놓이게 됩니다.
* Desktop 플랫폼용 Game 또는 Server 타깃인 경우, Sandbox 디렉터리를 지정하지 않은 경우 추론해 냅니다.
* 이동: `PhysX3Common` -> `Engine/Binaries/ThirdParty` 폴더로 옮겼습니다. 더이상 엔진의 일부로 로드할 필요가 없습니다.


#### 온라인

* 로비가 꽉 찼다고 결정되면 Steam 로비는 참가 기능을 자동 설정합니다.


#### 오디오

* 에디터에서 스페이스 바를 치는 것으로 현재 사운드큐를 자동 재생 / 중지할 수 있게 되었습니다.
* 6 채널 ogg 파일 사용시 더이상 서라운드 우측 스피커 소리가 약해지지 않습니다.
* 연관된 Sound 노드가 제거되면 Graph 노드도 삭제됩니다.
* 멀티채널 사운드를 리임포트할 수 있게 되었습니다.
* 사운드 큐 에디터에서 연결 끊기 동작을 되돌릴 수 있게 되었습니다.
* 사운드가 재생중일 때 SoundClasses 를 통해 SoundModes 를 활성화시킬 수 있게 되었습니다.
* SoundWave 애셋은 썸네일에 웨이브 형태로 표시됩니다.
* VOIP 데이터 전송이 보다 적극적으로 일어납니다.
	* 최대 1k 까지의 모든 음성 데이터를 하나의 번치에 즉시 전송합니다.
	* 더이상 여러 프레임에 데이터 버퍼링을 전혀 하지 않습니다.


#### 에디터와 툴

* **슬레이트**
	* SlateUI 에 대한 MultiLineEditableText 기능 작업중입니다.
	* SColorBlock 이 비활성화된 스타일을 사용하지 않도록 변경했습니다.
	* 위젯 생성시 더이상 빈 멀티 박스로 인해 추가적인 공간을 차지하지 않습니다.
* **유저 인터페이스**
	* 더이상 에디터가 열릴 때 기존의 창 뒤에 나타나지 않습니다.
	* AutonomousTabPanel 이름을 NomadTab 으로 변경했습니다. 관련된 함수 이름, 코멘트, 변수를 고쳤습니다.
	* 노매드 탭이 이미 스폰된 경우 레이아웃을 복원할 때 노매드 탭 스포너가 더이상 자신의 탭을 스폰시키지 않습니다.
	* 노매드 탭을 이제 주요 탭 부분에 도킹시킬 수 있습니다. 노매드 탭은 떠다니거나 주요 탭 부분에 도킹되었을 때 주요 탭과 같은 스타일로 표시됩니다.
	* TabSpawnerEntries 에 메뉴 배치를 제거하는 기능이 생겼습니다.
	* 구식 탭 유형도 지원, 스폰 시간에 구식 탭 이름이 자동-변경 ID 에 등록되도록 했습니다.
	* 엔진 전반에 걸쳐 AddHeader 사용처 전부와 AddMenuSeparator 사용처 대부분을 제거했습니다.
	* 메인 에디터 메뉴 상당수의 (비주얼, 배치 등의) 손질 작업중입니다.
	* 디테일 뷰의 Property Matrix 버튼을 업데이트했습니다.
	* 버텍스 밀도 모드 메뉴 아이템의 아트워크를 업데이트했습니다.
	* 몰입 모드의 복원 버튼을 업데이트했습니다.
	* 폴리지 모드 세팅 저장/로드에 대한 아이콘 아트워크를 업데이트했습니다.
	* 툴바와 메뉴 바 버튼이 잘렸을 때 펼침 버튼이 표시되며, 클릭하면 잘린 항목이 포함된 컨텍스트 메뉴가 표시됩니다.
	* 되돌리기/다시하기 메뉴 옵션에 다시 아이콘이 표시됩니다.
	* 이제 WorkflowTabs 가 창 메뉴의 애셋 에디터 카테고리 아래 나열됩니다.
	* 알파를 줄인 'x' (삭제 버튼)을 새로 만들었습니다. 비파괴성 체크인으로, 아트 애셋만 있는 것입니다.
	* Property Matrix 버튼과 관련 창/메뉴 항목에 대한 16px 아이콘을 새로 만들었습니다. 코드 후크 업이 필요합니다.
	* 몰입에서 복원 버튼 아이콘 - 16px 아이콘을 새로 만들었습니다. 코드 후크 업이 필요합니다. 비파괴성 체크인으로, 아트 애셋만 있습니다.
	* 에디터의 리플리케이션 아이콘을 새로 만들었으며, 상태 변화를 위해서는 코드 후크 업이 필요합니다. 비파괴성 체크인으로, 아트 애셋만 있습니다.
	* 뷰포트의 버텍스 밀도 모드에 대한 아이콘을 새로 만들었습니다. 코드 후크 업이 필요합니다. 아트 애셋만 대체되며, 비파괴성 업데이트입니다.
	* 폴리지 모드에 대한 아이콘을 새로 만들었습니다. 아트 애셋만 대체되며, 비파괴성 업데이트입니다.
	* 다음의 모든 액터 클래스에 대한 16px 아이콘을 새로 만들었습니다: ArrowComponent, AtmosphericFogComponent, BoxComponent, CapsuleComponent, DestructibleMeshActor/Component, InstancedStaticMeshComponent, MaterialSpriteComponent, RadialBlurComponent, SceneCapture(Component), SceneCapture2D(Component), SceneComponent, SphereComponent, SpriteComponent, TextRenderActor/Component. PNG 애셋만 있으며, 비파괴성 체크인이고, 코드 후크 업이 필요합니다.
	* 모든 메인 에디터 툴바 아이콘을 새로 만들어 업데이트했습니다 (다른 플레이 옵션을 위한 추가 아이콘은 다른 TTP 에서 다뤘습니다). 비파괴성 체크인으로, CL 에는 512px 의 고해상도 애셋만 추가됩니다.
	* 레벨 브라우저 메뉴에 대한 16px 아이콘을 새로 만들었습니다. 새로운 PNG 파일들로, 비파괴성 체크인이며 코드 후크 업이 필요합니다.
	* 삭제된 액터에 대한 아이콘을 새로 만들었습니다. 크기는 16px 이며, 비파괴성 업데이트입니다.
* 데이터 / 커브 테이블 애셋에 대한 _디렉터리 탐색_, _외부 에디터에서 실행_ 옵션을 추가했습니다.
* 내비메시 생성 퍼포먼스가 향상되었습니다.
* **씬 아웃라이너**
	* SIE 모드에서는 노랑 테두리가 생깁니다.
	* 레벨이 새로 추가되거나 제거될 때 콘텐츠가 제대로 새로고쳐집니다.
	* 씬 아웃라이너의 검색 결과에 중첩된 액터가 올바르게 표시됩니다.
* 코드 경로를 단순화시켜 통합하도록 레이어 구현을 리팩터링했습니다.
* **프로젝트 작업방식**
	* 새 프로젝트 대화창의 비주얼이 개선되었습니다.
	* 이제 프로젝트 전환시 에디터 실행에 사용된 명령줄 인수를 보존합니다.
	* 프로젝트 전환시 더이상 종료 대화창이 뜨지 않습니다.
	* 프로젝트 파일 경로에 더이상 '^' 글자가 허용되지 않습니다. Visual Studio 가 혼동됩니다.
* **콘텐츠 브라우저**
	* 첫 애셋 검색 이후 의존성을 재탐색한 패키지도 이제 제대로 업데이트됩니다.
	* 콘텐츠 브라우저에 explore 가 선택된 경우 요청에 따라 폴더가 생성됩니다.
	* 콘텐츠 브라우저 이름변경 프로세스 초기에 더 나은 애셋 이름 검사를 추가, 편하게 새로운 이름 코드 패스 입력이 가능합니다.
* FSourceControl 에 GetLabels 를 추가, 소스 컨트롤에서 제공된 패턴 문자열에 일치하는 모든 라벨을 반환합니다.
* CrashReporter: 웹사이트가 모든 브라우저에 맞게 거의 완성되었으며, 모두 정상 작동하고 있습니다. 남은 주요 작업은 문서화 작업입니다.
* **랜드스케이프**
	* LandscapeActor 로드 없이 랜드스케이프 프록시를 편집하는 기능을 추가했습니다.
	* 이제 랜드스케이프 프록시는 꼭 랜드스케이프 액터 위치와 같을 필요가 없는 자체 원점을 가질 수 있습니다.
	* 랜드스케이프 스플라인은 이제 스태틱 컴포넌트로 간주됩니다.
	* 랜드스케이프 스태틱 라이팅은 하이트맵 변경시 무효화됩니다.
	* 랜드스케이프 스플라인의 끝 제어점 삭제시 확인창의 취소 버튼을 누르면 사실상 삭제를 다시 취소합니다.
	* 랜드스케이프 에디터는 이제 활성 원근 뷰포트 뿐만 아니라 모든 뷰포트를 실시간 모드로 전환, 가해지는 변화를 확인하기 쉽도록 합니다.
	* 새로 생성된 레이어 인포 오브젝트가 콘텐츠 브라우저에 표시되며, 저장/종료시 저장해야 합니다.
	* "새 레이어 인포" 경로 텍스트 박스를 폴더 선택기로 대체했습니다.
* **마티네**
	* 마티네 드롭 다운 메뉴가 튀어보이지 않도록 올바른 크기로 표시됩니다.
	* 마티네 대화창 텍스트가 탭 위치를 (이동 가능하므로) 언급하지 않도록 문구를 바꿨습니다.
	* 레벨 브라우저를 통해 해당 액터의 레벨이 제거되면 마티네도 닫힙니다.
	* 카메라 액터 메시 업데이트, 새 카메라 아이콘과 일관된 새 메시 생성, 머티리얼과 텍스처를 추가했습니다.
	* 인터프 관련 유틸리티 코드가 리팩터링되어, FMatineeUtils 네임스페이스에 있게 되었습니다.
	* 이제 마티네 트랙의 첫 사운드에 대한 자막이 표시됩니다.
* **레벨 에디터**
	* 레벨 에디터에 다시 길이를 줄인 레벨 이름이 표시됩니다.
	* 에디터 시작시 어떤 맵을 로드시킬지 지정하는 컨픽 세팅(DefaultMapName)을 새로 추가했습니다.
		* SimpleMapName 파이프라인과는 다르며, 그 대신 명령줄을 통해 맵 이름을 지정했을 때와 비슷한 행위를 보입니다.
	* 고정된 액터를 다른 뷰포트에서 옮겼을 때 뷰포트의 카메라 위치가 업데이트됩니다.
	* 번호가 붙은 액터를 복제하면, 새로운 액터의 라벨은 다음 논리적 번호가 붙습니다.
	* 액터 복제시의 자동 이름에 앞에 붙은 0 이 보존됩니다.
	* 어태치먼트
		* 부모와 그 자식을 드래그하는 경우 더이상 Actor Transformations 스택에 쌓이지 않습니다.
		* 액터 복사하기/붙여넣기시 족보가 유지됩니다.
		* 복수의 액터를 이미 선택된 다른 액터에 붙이려 하면 이제 오류가 발생됩니다.
		* 부모가 그 후손의 자손으로 할당되는 것을 방지합니다.
	* 빙의/탈출 버튼 툴팁에 키보드 단축키가 표시됩니다.
* BrushEdit 활성화시 BuildingWall 토글이 가능합니다.
* LOD 그룹 팝업 문구를 더욱 명확하게 바꿨습니다.
* 애셋 이주 대화창에서 패키지란 용어 사용을 제거했습니다.
* 디스트럭터블 메시 생성시 편집용으로 여는 것은 물론 콘텐츠 브라우저에서도 애셋에 동기화시킵니다.
* 에디터가 닫히면 PlayOn 인스턴스도 킬 됩니다.
* 스태틱 메시 에디터에서 고유 UV 생성시 발생하는 오류는 이제 알림으로 표시됩니다.
* 소켓 매니저 위젯은 이제 레벨 에디터 툴바에서 토글시 올바르게 업데이트됩니다.
* 애셋 드래그시 프록시 에디터에 보다 정확히 닿도록 끌어붙입니다.
* MIC 파라미터의 오버라이드 플래그 토글시 머티리얼이 업데이트됩니다.
* 스크린샷 캡처 테스트와 브라우저 업데이트를 자동화시켰습니다.
* 출처의 추적에 도움이 되도록 함수 이름 컨텍스트 정보를 경고 메시지에 추가시켰습니다. 경고: (b_MF_Hand) 본에 대한 BoneIndex 를 (M_Avg_Base_AnimSkeleton) 스켈레톤에서 찾을 수 없습니다.
* 디버깅: 기본 FColors 에 Cyan (청록색)과 Magenta (자홍색)을 추가했습니다. DrawDebugCircle 을 추가했습니다.
* 어떤 LOD 에도 레퍼런스되지 않은 머티리얼 슬롯이 있는 스태틱 메시는 이제 로드시 NULL 이 됩니다. 여분의 인덱스도 잘라냅니다.
* ReferenceViewer 는 이제 노매드 탭이 되었습니다.
* 초기 텍스처로 머티리얼을 만들면 이제 제대로 텍스처를 베이스 컬러에 걸어 줍니다.
* **이벤트 뷰어:**
	* 이벤트가 시간순 정렬이 더욱 잘 되도록 이벤트 뷰어를 업데이트했습니다.
	* 족보 내 각 이벤트에 대해 더욱 자세한 정보가 제공됩니다.
* 스태틱 메시 에디터: 소켓 표시/은닉시 스태틱 메시 에디터의 뷰포트가 새로고쳐집니다.
* 액터 변환 작업방식이 개선되었습니다.
* 월드 프로퍼티 버튼을 툴팁과 함께 월드 세팅으로 업데이트했습니다.
* 블류틸리티는 이제 Epic Labs 개인설정에 있습니다.
* 스트리밍 레벨에 대한 에디터 전용 오프셋이 구현되어, 각각의 스트리밍 레벨에 대한 에디터 전용 오프셋 세팅이 가능하도록 레벨 브라우저에 옵션 열이 추가되었습니다.
* 새로운 사용자와 레벨 디자이너의 작업방식에 도움이 될 새로운 브라우저 배치 모드/툴세트를 만들었습니다.
* 쓰기 권한이 없는 폴더에 있는 패키지를 수정하려 할 때의 경고창을 추가했습니다.
* 애셋 이주시 패키지가 디스크에 존재하지 않을 때, 사용자에게 어찌할지를 묻습니다.


#### 렌더링

* 스플라인 메시 셰이더로 생성되는 셰이더 순열 수를 (파라미터화된) 하나의 버텍스 팩토리로 감소시키고 최적화시켰습니다.
* 스플라인 변형된 스태틱 메시에 LOD 가 지원됩니다.
* 스플라인 변형된 스태틱 메시가 이제 스태틱 라이팅을 받을 수 있습니다.
* 머티리얼 에디터 클린업은 이제 변경된 머티리얼만 더티 상태로 만듭니다.
* 캐스케이드 색 선택 툴은 이제 캐스케이드 뷰포트의 자손으로 등록됩니다.
* 캐스케이드 레이아웃이 올바르게 로드됩니다.
* 현재 LOD 드롭다운은 프로퍼티 배열과의 일치를 위해 0 부터 시작됩니다.
* 캐스케이드의 최저/최고 LOD 버튼 함수성을 맞바꿨습니다.
* 캐스케이드에서 고정 바운드 설정시의 불필요한 확인 대화창을 제거했습니다.
* ConditionalProcessCommandBindings 는 이제 키/마우스 버튼의 유지/반복 상태를 전달하며, _True_ 인 경우 명령을 무시합니다.
* 시뮬레이션 도중에는 부모변경 옵션이 비활성화됩니다.
* 자동저장 알림이 더이상 시간 대신 %d 로 표시되지 않습니다.
* 캐스케이드 이미터 카테고리는 이제 표시할 자손이 있을 때만 표시됩니다.
* 스켈레탈 메시 에디터에 현재 스켈레탈 메시를 여는 데 더이상 지난 스켈레탈 메시의 족보가 표시되지 않습니다.
* 서브서피스 스캐터링 컬러의 띠 현상이 개선되었습니다.
* 파괴된 디스트럭터블 오브젝트는 더이상 데칼을 받지 않습니다.
* 라이트에 IES 라이트 프로파일이 할당된 경우, IES 밝기를 사용하도록 선택했든 안했든 계산된 텍스처 배수를 사용합니다.
* 이제 파티클 이미터는 해당 기능이 캐스케이드에서 켜져 있을 때 로컬 Z 축 방향을 카메라 쪽으로 올바르게 잡습니다.
* 이제 GPU 파티클 시스템에 대해 액터 스케일이 고려됩니다.
* 일시정지 유지 모션블러 추가, 아직 추가 작업이 필요합니다.
* OpenGL 4.3 을 통한 SM5 렌더링 기능이 시범적으로 지원됩니다.
* 머티리얼 썸네일 씬의 GetViewMatrixParameters 에서 스태틱 메시에 대한 검사를 제거했습니다. 뷰 매트릭스 결정에 기술적으로 필요치 않습니다.
* Gbuffer 시각화 모드를 추가했습니다.
* 반투명 모드가 (노멀 및 별도) 혼합된 다양한 머티리얼을 사용하는 파트가 다수 있는 스태틱 메시 프리미티브가 이제 제대로 렌더링됩니다.
* 에디터의 씬에서 컬링 볼륨을 삭제했을 때, 모든 스태틱 메시 프리미티브의 그리기 거리가 그 변화를 반영하도록 업데이트됩니다.
* 이제 atmospheric fog 컴포넌트의 "Visible In Game" 플래그가 적용됩니다.


#### 애니메이션

* 페르소나 뷰포트 표시 메뉴의 "Preview Mesh" 항목을 "Mesh" 로 변경했습니다.
* 애니메이션 노드의 핀 노출가능 프로퍼티 레이아웃을 개선시켰습니다.
* UAnimMontage::GetSectionTimeLeftFromPos() 를 추가했습니다.
* Azimuth 와 Elevation 매쓰 코드를 고치고 리팩터링했습니다.
* GetClosestCollidingBoneLocation 를 SkinnedMeshComponent 에서 SkeletalMeshComponent 로 이동시키고, 충돌 리짓 바디 검사에 걸리도록 만들었습니다! 충돌하지 않는 것으로 반환되어 트레이스가 실패할 수 있었습니다.

