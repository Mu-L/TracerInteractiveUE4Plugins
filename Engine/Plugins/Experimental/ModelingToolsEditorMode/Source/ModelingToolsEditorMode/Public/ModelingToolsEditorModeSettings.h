// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once

#include "UObject/ObjectMacros.h"
#include "UObject/Object.h"
#include "ModelingToolsEditorModeSettings.generated.h"


UENUM()
enum class EModelingModeAssetGenerationBehavior
{
	/** Generate and automatically Save new Assets on creation */
	AutoGenerateAndAutosave,

	/** Generate new Assets and mark as Modified but do not automatically Save */
	AutoGenerateButDoNotAutosave,

	/** Prompt to Save each new Asset upon Creation */
	InteractivePromptToSave
};



UENUM()
enum class EModelingModeAssetGenerationLocation
{
	/** All generated assets will be stored at the Auto Generated Asset Path configured below */
	AutoGeneratedAssetPath,

	/** Generated assets will be stored in the currently-visible Asset Browser folder if available, otherwise at the Auto Generated Asset Path */
	CurrentAssetBrowserPathIfAvailable
};



/**
 * Settings for the Modeling Tools Editor Mode plug-in.
 */
UCLASS(config = Editor)
class MODELINGTOOLSEDITORMODE_API UModelingToolsEditorModeSettings
	: public UObject
{
	GENERATED_BODY()
public:

	/** How should Assets auto-generated by Modeling Tools be handled in terms of saving, naming, etc */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	EModelingModeAssetGenerationBehavior AssetGenerationMode = EModelingModeAssetGenerationBehavior::AutoGenerateAndAutosave;

	/** Where should Assets auto-generated by Modeling Tools be stored by default */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	EModelingModeAssetGenerationLocation AssetGenerationLocation = EModelingModeAssetGenerationLocation::AutoGeneratedAssetPath;


	/** Assets auto-generated by Modeling Tools are stored at this path, relative to the top-level /Game/ folder */
	UPROPERTY(config, EditAnywhere, Category = GeneratedModelingAssets)
	FString AutoGeneratedAssetPath = TEXT("_GENERATED");



public:

	DECLARE_MULTICAST_DELEGATE_TwoParams(UModelingToolsEditorModeSettingsModified, UObject*, FProperty*);
	UModelingToolsEditorModeSettingsModified OnModified;

	void PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)
	{
		OnModified.Broadcast(this, PropertyChangedEvent.Property);
	}

};
