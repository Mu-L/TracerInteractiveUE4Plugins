
/*********************************************************************************
 *							Niagara Vertex Factory data access
 *********************************************************************************/

//Currently we have no integer data being fed into the renderers.
//Buffer<int> NiagaraParticleDataInt;
//uint NiagaraIntDataOffset;
//uint NiagaraIntDataStride;

#ifndef NIAGARA_KEYGEN
#define NIAGARA_KEYGEN 0
#endif

#if (!RAYHITGROUPSHADER && !COMPUTESHADER) || NIAGARA_KEYGEN

Buffer<float> NiagaraParticleDataFloat;
uint NiagaraFloatDataStride;

float GetFloat(int RegisterIdx, uint InstanceID)
{
	return NiagaraParticleDataFloat[(RegisterIdx * NiagaraFloatDataStride + InstanceID)];
}

#else

float GetFloat(int RegisterIdx, uint InstanceID)
{
	return NiagaraVFLooseParameters.NiagaraParticleDataFloat[(RegisterIdx * NiagaraVFLooseParameters.NiagaraFloatDataStride + InstanceID)];
}

#endif

float2 GetVec2(int RegisterIndex, uint InstanceID)
{
	return float2(GetFloat(RegisterIndex, InstanceID), GetFloat(RegisterIndex+1, InstanceID));
}

float3 GetVec3(int RegisterIndex, uint InstanceID)
{
	return float3(GetFloat(RegisterIndex, InstanceID), GetFloat(RegisterIndex+1, InstanceID), GetFloat(RegisterIndex+2, InstanceID));
}

float4 GetVec4(int RegisterIndex, uint InstanceID)
{
	return float4(GetFloat(RegisterIndex, InstanceID), GetFloat(RegisterIndex+1, InstanceID), GetFloat(RegisterIndex+2, InstanceID), GetFloat(RegisterIndex+3, InstanceID));
}

