// Copyright 1998-2019 Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	OcclusionQueryVertexShader.usf: Vertex shader for drawing occlusion queries.
=============================================================================*/

#include "Common.ush"

float4 StencilingGeometryPosAndScale;

#if MOBILE_MULTI_VIEW
	uint ViewId;
#endif

void Main(
	in float4 InPosition : ATTRIBUTE0,
	out float4 OutPosition : SV_POSITION
#if MOBILE_MULTI_VIEW
	, in uint InViewId : SV_ViewID
	, out uint OutViewId : SV_ViewID
#endif
	)
{
#if MOBILE_MULTI_VIEW
	OutViewId = InViewId;

	// Make the triangles degenerate if we're not targeting this view.
	// We don't need to resolve the view info, since we already set the
	// primary view with the data for the view we're interested in.
	// TODO: Support targetting a single view properly.
	if (InViewId != ViewId)
	{
		OutPosition = float4(0, 0, 0, 1);
		return;
	}
#endif

	float3 TransformedPosition = InPosition.xyz * StencilingGeometryPosAndScale.w + StencilingGeometryPosAndScale.xyz;
	OutPosition = mul(float4(TransformedPosition, 1), View.TranslatedWorldToClip);

#if OUTPUT_GAMMA_SPACE && (COMPILER_GLSL_ES2 || COMPILER_GLSL_ES3_1 || COMPILER_GLSL_ES3_1_EXT)
	OutPosition.y *= -1;
#endif
}
