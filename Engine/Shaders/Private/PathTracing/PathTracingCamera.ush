// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================================
	PathTracingCamera.ush: Reference path tracing camera functions
===============================================================================================*/

#pragma once

#include "PathTracingCommon.ush"
#include "Sensor/PathTracingPinholeCamera.ush"
#include "Sensor/PathTracingAdaptivePinholeCamera.ush"

void SampleEmitter(
	uint2 LaunchIndex,
	inout RandomSequence RandSequence,
	inout uint SampleIndex,
	uint SourceEmitterId,
	uint SensorId,
	out RayDesc OutRay,
	out uint2 OutPixel,
	out float OutPdf
)
{
	// Pinhole camera is preferred until adaptive variance reduction is a clear win
	if (AdaptiveSamplingData.UseAdaptiveSampling == 1)
	{
		AdaptivePinholeCamera_SampleEmitter(LaunchIndex, RandSequence, SampleIndex, SourceEmitterId, SensorId, OutRay, OutPixel, OutPdf);
	}
	else
	{
		PinholeCamera_SampleEmitter(LaunchIndex, RandSequence, SampleIndex, SourceEmitterId, SensorId, OutRay, OutPixel, OutPdf);
	}
}

void PdfEmitter(
	RayDesc Ray,
	out float OutPdf
)
{
	if (AdaptiveSamplingData.UseAdaptiveSampling)
	{
		AdaptivePinholeCamera_PdfEmitter(Ray, OutPdf);
	}
	else
	{
		PinholeCamera_PdfEmitter(Ray, OutPdf);
	}
}
