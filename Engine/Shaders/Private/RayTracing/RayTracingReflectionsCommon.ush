// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================================
	RayTracingReflectionsCommon.ush: Common functions for ray traced Reflections
===============================================================================================*/

#pragma once

#include "../Common.ush"

// Note that the values stored in this will be accumulations across all valid samples and will not be normalized or averaged
// until after splitting into their own individual textures
struct FImaginaryReflectionGBufferData
{
	float3 WorldNormal;
	// Not DeviceZ so that it can be linearly interpolated in world space
	float SceneDepth;
	float2 Velocity;
	// Required for averaging to account for the fact that not all samples may hit a valid imaginary surface
	uint ValidSamples;
};

struct FSortedReflectionRay
{
	float3	Origin;
	uint	PixelCoordinates;
	float3	Direction;
	uint	DebugSortKey;
};

uint PackPixelCoordinates(uint2 PixelCoordinates)
{
	return (PixelCoordinates.x & 0xFFFF)
	     | (PixelCoordinates.y << 16);
}

uint2 UnpackPixelCoordinates(uint PixelCoordinates)
{
	return uint2(
		PixelCoordinates & 0xFFFF,
		PixelCoordinates >> 16);
}

