// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once

#include "../LightShaderParameters.ush"

bool GenerateSphereLightOcclusionRay(
	FLightShaderParameters LightParameters,
	float3 WorldPosition,
	float3 WorldNormal,
	float2 RandSample,
	out float3 RayOrigin,
	out float3 RayDirection,
	out float RayTMin,
	out float RayTMax,
	out float RayPdf
)
{
	float4 Result = UniformSampleSphere(RandSample);
	float3 LightNormal = Result.xyz;
	float3 LightPosition = LightParameters.Position + LightNormal * LightParameters.SourceRadius;
	float3 LightDirection = LightPosition - WorldPosition;
	float RayLength = length(LightDirection);
	LightDirection /= RayLength;

	RayOrigin = WorldPosition;
	RayDirection = LightDirection;
	RayTMin = 0.0;
	RayTMax = RayLength;

	float SolidAnglePdf = Result.w * saturate(dot(LightNormal, -LightDirection)) / (RayLength * RayLength);
	RayPdf = SolidAnglePdf;
	return true;
}
 