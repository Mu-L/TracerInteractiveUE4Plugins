// Copyright Epic Games, Inc. All Rights Reserved.

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FDatasmithFacadeActor : FDatasmithFacadeElement {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FDatasmithFacadeActor(global::System.IntPtr cPtr, bool cMemoryOwn) : base(DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FDatasmithFacadeActor obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FDatasmithFacadeActor() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DatasmithFacadeCSharpPINVOKE.delete_FDatasmithFacadeActor(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public FDatasmithFacadeActor(string InElementName, string InElementLabel) : this(DatasmithFacadeCSharpPINVOKE.new_FDatasmithFacadeActor(InElementName, InElementLabel), true) {
  }

  public void KeepActor() {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_KeepActor(swigCPtr);
  }

  public void SetWorldTransform(float[] InWorldMatrix) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_SetWorldTransform(swigCPtr, InWorldMatrix);
  }

  public void SetLayer(string InLayerName) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_SetLayer(swigCPtr, InLayerName);
  }

  public void AddTag(string InTag) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddTag(swigCPtr, InTag);
  }

  public void AddMetadataBoolean(string InPropertyName, bool bInPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddMetadataBoolean(swigCPtr, InPropertyName, bInPropertyValue);
  }

  public void AddMetadataColor(string InPropertyName, byte InR, byte InG, byte InB, byte InA) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddMetadataColor(swigCPtr, InPropertyName, InR, InG, InB, InA);
  }

  public void AddMetadataFloat(string InPropertyName, float InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddMetadataFloat(swigCPtr, InPropertyName, InPropertyValue);
  }

  public override void AddMetadataString(string InPropertyName, string InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddMetadataString(swigCPtr, InPropertyName, InPropertyValue);
  }

  public void AddMetadataTexture(string InPropertyName, string InTextureFilePath) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddMetadataTexture(swigCPtr, InPropertyName, InTextureFilePath);
  }

  public void AddMetadataVector(string InPropertyName, string InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddMetadataVector(swigCPtr, InPropertyName, InPropertyValue);
  }

  public void SetIsComponent(bool bInIsComponent) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_SetIsComponent(swigCPtr, bInIsComponent);
  }

  public void AddChild(FDatasmithFacadeActor InChildActorPtr) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_AddChild(swigCPtr, FDatasmithFacadeActor.getCPtrAndDisown(InChildActorPtr));
  }

  public void SanitizeActorHierarchyNames() {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActor_SanitizeActorHierarchyNames(swigCPtr);
  }

}
