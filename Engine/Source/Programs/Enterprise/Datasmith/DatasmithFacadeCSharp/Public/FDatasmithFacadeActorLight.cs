// Copyright Epic Games, Inc. All Rights Reserved.

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FDatasmithFacadeActorLight : FDatasmithFacadeActor {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FDatasmithFacadeActorLight(global::System.IntPtr cPtr, bool cMemoryOwn) : base(DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FDatasmithFacadeActorLight obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FDatasmithFacadeActorLight() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DatasmithFacadeCSharpPINVOKE.delete_FDatasmithFacadeActorLight(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public FDatasmithFacadeActorLight(string InElementName, string InElementLabel) : this(DatasmithFacadeCSharpPINVOKE.new_FDatasmithFacadeActorLight(InElementName, InElementLabel), true) {
  }

  public void SetLightType(FDatasmithFacadeActorLight.ELightType InLightType) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetLightType(swigCPtr, (int)InLightType);
  }

  public void SetEnabled(bool bInIsEnabled) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetEnabled(swigCPtr, bInIsEnabled);
  }

  public void SetIntensity(double InIntensity) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetIntensity(swigCPtr, InIntensity);
  }

  public void SetColor(byte InR, byte InG, byte InB, byte InA) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetColor__SWIG_0(swigCPtr, InR, InG, InB, InA);
  }

  public void SetColor(float InR, float InG, float InB, float InA) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetColor__SWIG_1(swigCPtr, InR, InG, InB, InA);
  }

  public void SetTemperature(double InTemperature) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetTemperature(swigCPtr, InTemperature);
  }

  public void WriteIESFile(string InIESFileFolder, string InIESFileName, string InIESData) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_WriteIESFile(swigCPtr, InIESFileFolder, InIESFileName, InIESData);
  }

  public void SetIESFilePath(string InIESFilePath) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetIESFilePath(swigCPtr, InIESFilePath);
  }

  public void SetIESBrightnessScale(double InIESBrightnessScale) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetIESBrightnessScale(swigCPtr, InIESBrightnessScale);
  }

  public void SetPointIntensityUnit(FDatasmithFacadeActorLight.EPointLightIntensityUnit InPointIntensityUnit) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetPointIntensityUnit(swigCPtr, (int)InPointIntensityUnit);
  }

  public void SetPointSourceRadius(float InPointSourceRadius) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetPointSourceRadius(swigCPtr, InPointSourceRadius);
  }

  public void SetPointSourceLength(float InPointSourceLength) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetPointSourceLength(swigCPtr, InPointSourceLength);
  }

  public void SetPointAttenuationRadius(float InPointAttenuationRadius) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetPointAttenuationRadius(swigCPtr, InPointAttenuationRadius);
  }

  public void SetSpotInnerConeAngle(float InSpotInnerConeAngle) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetSpotInnerConeAngle(swigCPtr, InSpotInnerConeAngle);
  }

  public void SetSpotOuterConeAngle(float InSpotOuterConeAngle) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetSpotOuterConeAngle(swigCPtr, InSpotOuterConeAngle);
  }

  public void SetAreaShape(FDatasmithFacadeActorLight.EAreaLightShape InAreaShape) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetAreaShape(swigCPtr, (int)InAreaShape);
  }

  public void SetAreaType(FDatasmithFacadeActorLight.EAreaLightType InAreaType) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetAreaType(swigCPtr, (int)InAreaType);
  }

  public void SetAreaWidth(float InAreaWidth) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetAreaWidth(swigCPtr, InAreaWidth);
  }

  public void SetAreaLength(float InAreaLength) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetAreaLength(swigCPtr, InAreaLength);
  }

  public void SetPortalDimensions(float InDimensionX, float InDimensionY, float InDimensionZ) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorLight_SetPortalDimensions(swigCPtr, InDimensionX, InDimensionY, InDimensionZ);
  }

  public enum ELightType {
    DirectionalLight,
    PointLight,
    LightmassPortal,
    SpotLight,
    AreaLight
  }

  public enum EPointLightIntensityUnit {
    Unitless,
    Candelas,
    Lumens
  }

  public enum EAreaLightShape {
    Rectangle,
    Disc,
    Sphere,
    Cylinder,
    None
  }

  public enum EAreaLightType {
    Point,
    Spot,
    IES_DEPRECATED,
    Rect
  }

}
