<Window x:Class="nDisplayLauncher.Cluster.Events.ClusterEventWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:uictrl="clr-namespace:nDisplayLauncher.UIControl"

        xmlns:local="clr-namespace:nDisplayLauncher.Cluster.Events"
        mc:Ignorable="d"
        Title="Cluster event editor" MinWidth="600" MinHeight="250" Height="250" Width="600" WindowStartupLocation="CenterOwner" Initialized="Window_Initialized">

	<Window.Resources>
		<Style x:Key="CommonStyle" TargetType="{x:Type FrameworkElement}"/>
		<Style x:Key="TabContent" TargetType="{x:Type Grid}">
			<Setter Property="Height" Value="430" />
			<Setter Property="Background" Value="#1C1C1C" />
		</Style>

		<Style x:Key="ControlsStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource CommonStyle}">
			<Setter Property="Background" Value="#3F3F46" />
			<Setter Property="Margin" Value="2" />
			<Setter Property="Foreground" Value="WhiteSmoke" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="1" />
		</Style>

		<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ControlsStyle}" >
			<Setter Property="Background" Value="#FF333337" />
		</Style>

		<Style x:Key="CustomTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ControlsStyle}" >
			<Setter Property="Background" Value="#FF333337" />
		</Style>

		<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource CommonStyle}">
			<Setter Property="Background" Value="#2D2D30" />
			<Setter Property="Foreground" Value="WhiteSmoke" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="Border" BorderThickness="0" 
                        Padding="10,5,15,5" Margin="0,0,0,0" >
							<ContentPresenter x:Name="ContentSite" ContentSource="Header" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
								<Setter TargetName="Border" Property="Background" Value="#0079CB"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
								<Setter TargetName="Border" Property="Background" Value="#2D2D30" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="FlowDirection" Value="LeftToRight" />
			<Setter Property="HorizontalAlignment" Value="Left" />

		</Style>

		<Style TargetType="{x:Type Menu}" >
			<Setter Property="Background" Value="#2D2D30" />
		</Style>

		<Style TargetType="{x:Type MenuItem}" >
			<Setter Property="Background" Value="#2D2D30" />
			<Setter Property="Margin" Value="0"/>
		</Style>

		<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}" >
			<Setter Property="MinWidth" Value="40" />
			<Setter Property="MaxWidth" Value="200" />
			<Setter Property="HorizontalAlignment" Value="Left" />
		</Style>

		<Style x:Key="SizeTB" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="Width" Value="70" />
			<Setter Property="HorizontalAlignment" Value="Left" />
		</Style>

		<Style x:Key="NameTB" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="Width" Value="150" />
			<Setter Property="HorizontalAlignment" Value="Left" />
		</Style>

		<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="Width" Value="150" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
		</Style>

		<Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ControlsStyle}">

			<Setter Property="MinWidth" Value="100" />
			<Setter Property="MaxWidth" Value="200" />
			<Setter Property="Height" Value="300" />
		</Style>

		<Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="MinWidth" Value="100" />
			<Setter Property="MaxWidth" Value="Infinity" />
			<Setter Property="Height" Value="300" />
		</Style>

		<Style TargetType="{x:Type uictrl:UnselectableListBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="MinWidth" Value="100" />
			<Setter Property="MaxWidth" Value="200" />
			<Setter Property="Height" Value="300" />
		</Style>

		<Style TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="WhiteSmoke" />
		</Style>

		<ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
			<Grid Margin="10,0">
				<DockPanel>
					<ContentPresenter x:Name="content" ContentSource="Header" />
				</DockPanel>
				<Popup x:Name="PART_Popup" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
					<Border BorderThickness="0" BorderBrush="White" Background="#2D2D30">
						<ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="CustomCheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
			<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="21" Width="21" Margin="5,0">
					<Grid x:Name="markGrid" Margin="0,0,3,0" Width="21" Height="21">
						<Path x:Name="optionMark" Data="M19.43043,2.3829644 L9.1518969,17.722808 8.8077779,17.722808 0,10.116135 2.4867883,6.8598807 8.2883854,11.859559 16.232593,2.9722871E-05 19.43043,2.3829644 z" Fill="#0079CB" Margin="0,0,2.3,2.3" Opacity="0" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Height="18.7" Width="18.7"/>
						<Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
					</Grid>
				</Border>
				<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,3,2,-3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="HasContent" Value="True">
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style>
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter Property="Padding" Value="4,-1,0,0"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
					<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
					<Setter Property="Fill" TargetName="optionMark" Value="#FF0079CB"/>
					<Setter Property="Fill" TargetName="indeterminateMark" Value="#FF0079CB"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
					<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
					<Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
					<Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
					<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
					<Setter Property="Fill" TargetName="optionMark" Value="#FF0079CB"/>
					<Setter Property="Fill" TargetName="indeterminateMark" Value="#FF0079CB"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
					<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="{x:Null}">
					<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
					<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="SubTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource CommonStyle}">
			<Setter Property="Background" Value="#2D2D30" />
			<Setter Property="Foreground" Value="WhiteSmoke" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="Border" BorderThickness="0" 
                            Padding="5,2,5,2" >
							<ContentPresenter x:Name="ContentSite" ContentSource="Header" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="#0079CB"/>
								<Setter TargetName="Border" Property="Background" Value="#252527"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
								<Setter TargetName="Border" Property="Background" Value="#2D2D30" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

		</Style>
		<Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
			<Setter Property="Padding" Value="2"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							<Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
								<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
								<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
								<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--ScrollViewer-->
		<Style TargetType="{x:Type ScrollViewer}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid Background="#FF3F3F46">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter Grid.Column="0" />
							<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
							<ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
							<Rectangle Grid.Row="1" Grid.Column="1" Fill="Transparent"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Scrollbar Thumbs-->
		<Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid x:Name="Grid">
							<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
							<Border x:Name="Rectangle1"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="Tag" Value="Horizontal">
								<Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
								<Setter TargetName="Rectangle1" Property="Height" Value="7" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--ScrollBars-->
		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
			<Setter Property="Foreground" Value="#8C8C8C" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Width" Value="8" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="0.00001*" />
							</Grid.RowDefinitions>

							<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
								<Track.Thumb>
									<Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
								</Track.IncreaseRepeatButton>
								<Track.DecreaseRepeatButton>
									<RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
								</Track.DecreaseRepeatButton>
							</Track>
						</Grid>

						<ControlTemplate.Triggers>
							<Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
								<Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
							</Trigger>
							<Trigger SourceName="Thumb" Property="IsDragging" Value="true">
								<Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
							</Trigger>

							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
							</Trigger>
							<Trigger Property="Orientation" Value="Horizontal">
								<Setter TargetName="GridRoot" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="-90" />
									</Setter.Value>
								</Setter>
								<Setter TargetName="PART_Track" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="-90" />
									</Setter.Value>
								</Setter>
								<Setter Property="Width" Value="Auto" />
								<Setter Property="Height" Value="8" />
								<Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
								<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
								<Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</Window.Resources>

	<Grid Background="#2D2D30" Margin="0">
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Grid Margin="0" Grid.Row="0" Background="Black">
			<Grid.RowDefinitions>
				<RowDefinition Height="10" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="10" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="10" />
				<ColumnDefinition Width="100" />
				<ColumnDefinition Width="160" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="10" />
			</Grid.ColumnDefinitions>

			<Label Grid.Row="1" Grid.Column="1" Content="Category" />
			<ComboBox x:Name="ctrlComboEventCategory" Grid.Row="1" Grid.Column="2" IsEditable="True" StaysOpenOnEdit="True" IsTextSearchEnabled="True" ItemsSource="{Binding AvailableCategories}" SelectedItem="{Binding SelectedCategory}" Text="{Binding SelectedCategory, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" HorizontalAlignment="Stretch" >
			</ComboBox>

			<Label Grid.Row="2" Grid.Column="1" Content="Type" />
			<ComboBox x:Name="ctrlComboEventType" Grid.Row="2" Grid.Column="2" IsEditable="True" StaysOpenOnEdit="True" IsTextSearchEnabled="True" ItemsSource="{Binding AvailableTypes}" SelectedItem="{Binding SelectedType}" Text="{Binding SelectedType, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" HorizontalAlignment="Stretch" >
			</ComboBox>

			<Label Grid.Row="3" Grid.Column="1" Content="Name" />
			<ComboBox x:Name="ctrlComboEventName" Grid.Row="3" Grid.Column="2" IsEditable="True" StaysOpenOnEdit="True" IsTextSearchEnabled="True" ItemsSource="{Binding AvailableNames}" SelectedItem="{Binding SelectedName}" Text="{Binding SelectedName, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" HorizontalAlignment="Stretch" >
			</ComboBox>

			<Separator Grid.Row="4" Grid.ColumnSpan="5" Margin="5"/>

			<Label Grid.Row="5" Grid.Column="1" Content="Argument" />
			<TextBox x:Name="ctrlTextEventArgument" Grid.Row="5" Grid.Column="2" Style="{DynamicResource NameTB}" Text="{Binding Path=TextArg, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Stretch" Margin="5,2" />

			<Label Grid.Row="6" Grid.Column="1" Content="Value" />
			<TextBox x:Name="ctrlTextEventValue" Grid.Row="6" Grid.Column="2" Style="{DynamicResource NameTB}" Text="{Binding Path=TextVal, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" Margin="5,2" />

			<DockPanel Grid.Row="7" Grid.Column="2" >
				<Button x:Name="ctrlBtnEventEditorArgDel" Content="-" Template="{DynamicResource ButtonTemplate}" HorizontalContentAlignment="Center" Click="ctrlBtnEventEditorArgDel_Click" Width="70" Margin="5,2,5,0" />
				<Button x:Name="ctrlBtnEventEditorArgAdd" Content="+" Template="{DynamicResource ButtonTemplate}" HorizontalContentAlignment="Center" Click="ctrlBtnEventEditorArgAdd_Click" Width="70" Margin="5,2,5,0"/>
			</DockPanel>

			<ListView x:Name="ctrlListClusterEventArgs" Grid.Row="1" Grid.Column="3" Grid.RowSpan="8" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0">
				<ListView.View>
					<GridView>
						<GridViewColumn Header="Argument" DisplayMemberBinding="{Binding Arg}" Width="Auto"/>
						<GridViewColumn Header="Value" DisplayMemberBinding="{Binding Val}" Width="Auto"/>
					</GridView>
				</ListView.View>
			</ListView>

			<Separator Grid.Row="9" Grid.ColumnSpan="5" Margin="5"/>
		</Grid>

		<Grid Background="#2D2D30" Margin="0" Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="30" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="50" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Button x:Name="ctrlBtnEventEditorCancel" Grid.Row="0" Grid.Column="0" Content="Cancel" Template="{DynamicResource ButtonTemplate}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Click="ctrlBtnEventEditorCancel_Click" Margin="5" />
			<Button x:Name="ctrlBtnEventEditorApply" Grid.Row="0" Grid.Column="2" Content="Apply" Template="{DynamicResource ButtonTemplate}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Click="ctrlBtnEventEditorApply_Click" Margin="5"/>
		</Grid>
	</Grid>
</Window>
