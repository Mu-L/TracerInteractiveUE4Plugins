#
# Build LowLevelParticles
#

SET(PHYSX_SOURCE_DIR ${PROJECT_SOURCE_DIR}/../../../)

SET(LL_SOURCE_DIR ${PHYSX_SOURCE_DIR}/LowLevelParticles/src)

FIND_PACKAGE(nvToolsExt REQUIRED)

SET(LOWLEVELPARTICLES_PLATFORM_INCLUDES
	${NVTOOLSEXT_INCLUDE_DIRS}
)

SET(LOWLEVELPARTICLES_PLATFORM_SRC_FILES
	${LL_SOURCE_DIR}/gpu/PtRigidBodyAccessGpu.cpp
)

# Use generator expressions to set config specific preprocessor definitions
SET(LOWLEVELPARTICLES_COMPILE_DEFS 
	${PHYSX_ANDROID_COMPILE_DEFS};PX_PHYSX_STATIC_LIB;
)

if(${CMAKE_BUILD_TYPE_LOWERCASE} STREQUAL "debug")
	LIST(APPEND LOWLEVELPARTICLES_COMPILE_DEFS
		${PHYSX_ANDROID_DEBUG_COMPILE_DEFS};
	)
elseif(${CMAKE_BUILD_TYPE_LOWERCASE} STREQUAL "checked")
	LIST(APPEND LOWLEVELPARTICLES_COMPILE_DEFS
		${PHYSX_ANDROID_CHECKED_COMPILE_DEFS};
	)
elseif(${CMAKE_BUILD_TYPE_LOWERCASE} STREQUAL "profile")
	LIST(APPEND LOWLEVELPARTICLES_COMPILE_DEFS
		${PHYSX_ANDROID_PROFILE_COMPILE_DEFS};
	)
elseif(${CMAKE_BUILD_TYPE_LOWERCASE} STREQUAL "release")
	LIST(APPEND LOWLEVELPARTICLES_COMPILE_DEFS
		${PHYSX_ANDROID_RELEASE_COMPILE_DEFS}
	)
else(${CMAKE_BUILD_TYPE_LOWERCASE} STREQUAL "debug")
	MESSAGE(FATAL_ERROR "Unknown configuration ${CMAKE_BUILD_TYPE}")
endif(${CMAKE_BUILD_TYPE_LOWERCASE} STREQUAL "debug")

SET(LOWLEVELPARTICLES_LIBTYPE OBJECT)

# include common low level particles settings
INCLUDE(../common/LowLevelParticles.cmake)

# enable -fPIC so we can link static libs with the editor
SET_TARGET_PROPERTIES(LowLevelParticles PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
