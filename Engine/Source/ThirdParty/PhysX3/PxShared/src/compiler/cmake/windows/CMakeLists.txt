cmake_minimum_required(VERSION 3.3)
PROJECT(PxShared CXX)
include(../common/CMakeLists.txt)


IF(NOT DEFINED TARGET_BUILD_PLATFORM) # Not defined, default to windows
	SET(TARGET_BUILD_PLATFORM "windows")
ENDIF()

SET(PLATFORM_LIST windows)

IF (NOT ${TARGET_BUILD_PLATFORM} IN_LIST PLATFORM_LIST)
	MESSAGE(FATAL_ERROR "Invalid platform:" ${TARGET_BUILD_PLATFORM})
ENDIF()

SET(CMAKE_CXX_FLAGS "/Wall /wd4514 /wd4820 /wd4127 /wd4710 /wd4711 /wd4577 /d2Zi+ /WX /W4 /GF /GS- /GR- /Gd /fp:fast")

IF(DEFINED STATIC_WINCRT)
    SET(WINCRT_NDEBUG "/MT")
    SET(WINCRT_DEBUG "/MTd")
ELSE()
    SET(WINCRT_NDEBUG "/MD")
    SET(WINCRT_DEBUG "/MDd")
ENDIF()

SET(CMAKE_CXX_FLAGS_DEBUG "/Od ${WINCRT_DEBUG} /RTCu /Zi")
SET(CMAKE_CXX_FLAGS_CHECKED "/Ox ${WINCRT_NDEBUG} /Zi")
SET(CMAKE_CXX_FLAGS_PROFILE "/Ox ${WINCRT_NDEBUG} /Zi")
SET(CMAKE_CXX_FLAGS_RELEASE "/Ox ${WINCRT_NDEBUG} /Zi")

# Build PDBs for all configurations
SET(CMAKE_SHARED_LINKER_FLAGS "/DEBUG")

# Controls PX_NVTX for all projects on windows
SET(PXSHARED_WINDOWS_ENABLE_NVTX 0)	

IF(DEFINED LINK_GPU_BINARIES)
SET(PXSHARED_WINDOWS_COMPILE_DEFS WIN32;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_WINSOCK_DEPRECATED_NO_WARNINGS;)
ELSE()
# Disable cuda and dx for all projects on windows
SET(PXSHARED_WINDOWS_COMPILE_DEFS WIN32;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_WINSOCK_DEPRECATED_NO_WARNINGS;DISABLE_CUDA_PHYSX;)
ENDIF()
SET(PXSHARED_WINDOWS_DEBUG_COMPILE_DEFS _DEBUG;PX_DEBUG=1;PX_CHECKED=1;PX_NVTX=${PXSHARED_WINDOWS_ENABLE_NVTX})
SET(PXSHARED_WINDOWS_CHECKED_COMPILE_DEFS NDEBUG;PX_CHECKED=1;PX_NVTX=${PXSHARED_WINDOWS_ENABLE_NVTX})
SET(PXSHARED_WINDOWS_PROFILE_COMPILE_DEFS NDEBUG;PX_PROFILE=1;PX_NVTX=${PXSHARED_WINDOWS_ENABLE_NVTX})
SET(PXSHARED_WINDOWS_RELEASE_COMPILE_DEFS NDEBUG)

IF(DEFINED PX_SCALAR_MATH)
	ADD_DEFINITIONS(-DPX_SIMD_DISABLED)
ENDIF()

IF(CMAKE_CL_64)
	ADD_DEFINITIONS(-DWIN64)
ENDIF(CMAKE_CL_64)		

if( "${CMAKE_GENERATOR_PLATFORM}" MATCHES "ARM*" ) 
	IF(CMAKE_CL_64)
		SET(LIBPATH_SUFFIX "arm64")
	ELSE(CMAKE_CL_64)
		SET(LIBPATH_SUFFIX "arm")
	ENDIF(CMAKE_CL_64)				
else()
	IF(CMAKE_CL_64)
		SET(LIBPATH_SUFFIX "x64")
	ELSE(CMAKE_CL_64)
		SET(LIBPATH_SUFFIX "x86")
	ENDIF(CMAKE_CL_64)				
endif()

SET(CMAKE_DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}_${LIBPATH_SUFFIX}")
SET(CMAKE_PROFILE_POSTFIX "${CMAKE_PROFILE_POSTFIX}_${LIBPATH_SUFFIX}")
SET(CMAKE_CHECKED_POSTFIX "${CMAKE_CHECKED_POSTFIX}_${LIBPATH_SUFFIX}")
SET(CMAKE_RELEASE_POSTFIX "${CMAKE_RELEASE_POSTFIX}_${LIBPATH_SUFFIX}")

# Include project cmake files here
IF(DEFINED PX_SELECT_COMPONENTS)
	if ("PxFoundation" IN_LIST PX_SELECT_COMPONENTS)
		INCLUDE(PxFoundation.cmake)
	endif()
	if ("PsFastXml" IN_LIST PX_SELECT_COMPONENTS)
		INCLUDE(PsFastXml.cmake)
	endif()
	if ("PxPvdSDK" IN_LIST PX_SELECT_COMPONENTS)
		INCLUDE(PxPvdSDK.cmake)
	endif()
	if ("PxTask" IN_LIST PX_SELECT_COMPONENTS)
		INCLUDE(PxTask.cmake)
	endif()
	if ("PxCudaContextManager" IN_LIST PX_SELECT_COMPONENTS)
		IF(DEFINED GENERATE_GPU_PROJECTS)
			INCLUDE(PxCudaContextManager.cmake)
		ENDIF()
	endif()
ELSE()
INCLUDE(PxFoundation.cmake)
INCLUDE(PsFastXml.cmake)
INCLUDE(PxPvdSDK.cmake)
INCLUDE(PxTask.cmake)
IF(DEFINED GENERATE_GPU_PROJECTS)
	INCLUDE(PxCudaContextManager.cmake)
ENDIF()
ENDIF()

