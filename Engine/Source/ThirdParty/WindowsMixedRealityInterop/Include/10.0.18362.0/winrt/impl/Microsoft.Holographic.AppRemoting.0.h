// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.190111.3

#pragma once

WINRT_EXPORT namespace winrt::Windows::Graphics::DirectX::Direct3D11 {

struct IDirect3DSurface;

}

WINRT_EXPORT namespace winrt::Windows::Media::SpeechRecognition {

enum class SpeechRecognitionConfidence;

}

WINRT_EXPORT namespace winrt::Windows::Storage {

struct IStorageFile;

}

WINRT_EXPORT namespace winrt::Microsoft::Holographic::AppRemoting {

enum class BlitResult : int32_t
{
    Success_Color = 0,
    Failed_NoRemoteFrameAvailable = 1,
    Failed_NoCamera = 2,
};

enum class ConnectionFailureReason : int32_t
{
    None = 0,
    Unknown = 1,
    NoServerCertificate = 2,
    HandshakePortBusy = 3,
    HandshakeUnreachable = 4,
    HandshakeConnectionFailed = 5,
    AuthenticationFailed = 6,
    RemotingVersionMismatch = 7,
    IncompatibleTransportProtocols = 8,
    HandshakeFailed = 9,
    TransportPortBusy = 10,
    TransportUnreachable = 11,
    TransportConnectionFailed = 12,
    ProtocolVersionMismatch = 13,
    ProtocolError = 14,
    VideoCodecNotAvailable = 15,
    Canceled = 16,
    ConnectionLost = 17,
    DeviceLost = 18,
    DisconnectRequest = 19,
};

enum class ConnectionState : int32_t
{
    Disconnected = 0,
    Connecting = 1,
    Connected = 2,
};

enum class DataChannelPriority : int32_t
{
    Low = 0,
    Medium = 1,
    High = 2,
};

enum class PreferredVideoCodec : int32_t
{
    Default = 0,
    H264 = 1,
    H265 = 2,
};

struct IAuthenticationProvider;
struct IAuthenticationProviderCallback;
struct IAuthenticationReceiver;
struct IAuthenticationReceiverCallback;
struct ICertificate;
struct ICertificateChain;
struct ICertificateProvider;
struct ICertificateProviderCallback;
struct ICertificateValidationCallback;
struct ICertificateValidator;
struct IDataChannel;
struct IPlayerContext;
struct IPlayerContextStatics;
struct IRemoteContext;
struct IRemoteContextStatics;
struct IRemoteSpeech;
struct PlayerContext;
struct RemoteContext;
struct CertificateValidationResult;
struct PlayerFrameStatistics;
struct RecognizedSpeech;
struct DataChannelCloseHandler;
struct DataChannelReceivedHandler;
struct OnConnectedHandler;
struct OnDataChannelCreatedHandler;
struct OnDisconnectedHandler;
struct OnListeningHandler;
struct OnRecognizedSpeechHandler;
struct OnSendFrameHandler;

}

namespace winrt::impl {

template <> struct category<Microsoft::Holographic::AppRemoting::IAuthenticationProvider>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IAuthenticationProviderCallback>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IAuthenticationReceiver>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IAuthenticationReceiverCallback>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ICertificate>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ICertificateChain>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ICertificateProvider>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ICertificateProviderCallback>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ICertificateValidationCallback>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ICertificateValidator>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IDataChannel>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IPlayerContext>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IPlayerContextStatics>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IRemoteContext>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IRemoteContextStatics>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::IRemoteSpeech>{ using type = interface_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::PlayerContext>{ using type = class_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::RemoteContext>{ using type = class_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::BlitResult>{ using type = enum_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ConnectionFailureReason>{ using type = enum_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::ConnectionState>{ using type = enum_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::DataChannelPriority>{ using type = enum_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::PreferredVideoCodec>{ using type = enum_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::CertificateValidationResult>{ using type = struct_category<bool,bool,bool,bool,Windows::Foundation::IReference<bool>,bool,bool>; };
template <> struct category<Microsoft::Holographic::AppRemoting::PlayerFrameStatistics>{ using type = struct_category<float,float,uint32_t,uint32_t,uint32_t,uint32_t,float,float>; };
template <> struct category<Microsoft::Holographic::AppRemoting::RecognizedSpeech>{ using type = struct_category<hstring,Windows::Media::SpeechRecognition::SpeechRecognitionConfidence,double>; };
template <> struct category<Microsoft::Holographic::AppRemoting::DataChannelCloseHandler>{ using type = delegate_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::DataChannelReceivedHandler>{ using type = delegate_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::OnConnectedHandler>{ using type = delegate_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler>{ using type = delegate_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::OnDisconnectedHandler>{ using type = delegate_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::OnListeningHandler>{ using type = delegate_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::OnRecognizedSpeechHandler>{ using type = delegate_category; };
template <> struct category<Microsoft::Holographic::AppRemoting::OnSendFrameHandler>{ using type = delegate_category; };
template <> struct name<Microsoft::Holographic::AppRemoting::IAuthenticationProvider>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IAuthenticationProvider" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IAuthenticationProviderCallback>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IAuthenticationProviderCallback" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IAuthenticationReceiver>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IAuthenticationReceiver" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IAuthenticationReceiverCallback>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IAuthenticationReceiverCallback" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ICertificate>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ICertificate" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ICertificateChain>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ICertificateChain" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ICertificateProvider>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ICertificateProvider" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ICertificateProviderCallback>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ICertificateProviderCallback" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ICertificateValidationCallback>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ICertificateValidationCallback" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ICertificateValidator>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ICertificateValidator" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IDataChannel>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IDataChannel" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IPlayerContext>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IPlayerContext" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IPlayerContextStatics>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IPlayerContextStatics" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IRemoteContext>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IRemoteContext" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IRemoteContextStatics>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IRemoteContextStatics" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::IRemoteSpeech>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.IRemoteSpeech" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::PlayerContext>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.PlayerContext" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::RemoteContext>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.RemoteContext" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::BlitResult>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.BlitResult" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ConnectionFailureReason>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ConnectionFailureReason" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::ConnectionState>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.ConnectionState" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::DataChannelPriority>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.DataChannelPriority" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::PreferredVideoCodec>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.PreferredVideoCodec" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::CertificateValidationResult>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.CertificateValidationResult" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::PlayerFrameStatistics>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.PlayerFrameStatistics" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::RecognizedSpeech>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.RecognizedSpeech" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::DataChannelCloseHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.DataChannelCloseHandler" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::DataChannelReceivedHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.DataChannelReceivedHandler" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::OnConnectedHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.OnConnectedHandler" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.OnDataChannelCreatedHandler" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::OnDisconnectedHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.OnDisconnectedHandler" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::OnListeningHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.OnListeningHandler" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::OnRecognizedSpeechHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.OnRecognizedSpeechHandler" }; };
template <> struct name<Microsoft::Holographic::AppRemoting::OnSendFrameHandler>{ static constexpr auto & value{ L"Microsoft.Holographic.AppRemoting.OnSendFrameHandler" }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IAuthenticationProvider>{ static constexpr guid value{ 0xAF3D4CD6,0x8484,0x445A,{ 0xB8,0xB3,0xB9,0x6D,0xA5,0x71,0x1E,0x3E } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IAuthenticationProviderCallback>{ static constexpr guid value{ 0xC4BC488F,0x8CD4,0x4118,{ 0xAC,0x15,0x78,0x59,0xF3,0x91,0x66,0x76 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IAuthenticationReceiver>{ static constexpr guid value{ 0xDA1E721D,0x0DE9,0x4DEA,{ 0x97,0x60,0x5D,0x21,0x86,0x22,0xEA,0xEB } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IAuthenticationReceiverCallback>{ static constexpr guid value{ 0xEBF38C18,0x3F5D,0x4B79,{ 0x95,0x24,0x1C,0x23,0x0D,0xC6,0x9D,0xE8 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::ICertificate>{ static constexpr guid value{ 0xA0669DB2,0x2157,0x4227,{ 0x88,0x00,0x0A,0x35,0x7C,0x2A,0x29,0x00 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::ICertificateChain>{ static constexpr guid value{ 0x4415B01F,0xCE8F,0x4599,{ 0xA7,0xC8,0x0B,0x5E,0x6A,0x27,0x77,0x08 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::ICertificateProvider>{ static constexpr guid value{ 0xEAF80CCD,0x2D8A,0x4F43,{ 0xA6,0x4F,0xBA,0x1F,0x91,0xBD,0xC2,0x5F } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::ICertificateProviderCallback>{ static constexpr guid value{ 0x6797F815,0xE529,0x4697,{ 0xB6,0x1D,0x68,0xEF,0x50,0x82,0xAD,0x19 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::ICertificateValidationCallback>{ static constexpr guid value{ 0xC8945A4C,0x33DB,0x4143,{ 0x8C,0x9E,0xAF,0x35,0xA2,0xE5,0x78,0x09 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::ICertificateValidator>{ static constexpr guid value{ 0xAC9BD062,0xC81E,0x479F,{ 0xB3,0x3C,0xAC,0x97,0x9C,0x67,0x12,0xE5 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IDataChannel>{ static constexpr guid value{ 0x66B1E9F7,0x5ECE,0x47F5,{ 0xB7,0x83,0x91,0xDA,0xCA,0xF0,0x61,0x88 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IPlayerContext>{ static constexpr guid value{ 0xF1A6F630,0x4427,0x429B,{ 0x82,0xBA,0x9C,0x87,0xF6,0x5D,0xAF,0xE8 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IPlayerContextStatics>{ static constexpr guid value{ 0xDFAE5C25,0x4F8A,0x4980,{ 0xB6,0x70,0xA6,0x81,0x14,0x88,0xCD,0x37 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IRemoteContext>{ static constexpr guid value{ 0xEED1E1FE,0xFFE2,0x439A,{ 0xA9,0x5C,0x70,0xA5,0x8E,0x6D,0x7A,0xA2 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IRemoteContextStatics>{ static constexpr guid value{ 0xAB97C9AB,0x4F28,0x4A07,{ 0xBB,0xC9,0xEF,0xF7,0xDA,0x9E,0xC6,0x40 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::IRemoteSpeech>{ static constexpr guid value{ 0x1A2B59D5,0x668F,0x41C1,{ 0xB0,0x2B,0x6A,0x7F,0xB5,0x43,0x32,0x91 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::DataChannelCloseHandler>{ static constexpr guid value{ 0x77467E89,0xA9FD,0x4D8D,{ 0xAE,0xA2,0xBF,0xBB,0xA5,0x0A,0x32,0xA7 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::DataChannelReceivedHandler>{ static constexpr guid value{ 0xC972E7DD,0xDA67,0x4815,{ 0xB3,0xD4,0x98,0x28,0xDF,0x3A,0x04,0x5C } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::OnConnectedHandler>{ static constexpr guid value{ 0xBD1BA158,0x486E,0x4F9A,{ 0x9A,0x56,0xE0,0x47,0x71,0x74,0xAD,0xBD } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler>{ static constexpr guid value{ 0xC3502D33,0x218B,0x42C8,{ 0x8B,0xFC,0x17,0x90,0xB3,0x57,0xD8,0xCB } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::OnDisconnectedHandler>{ static constexpr guid value{ 0xB3B7AD12,0xF720,0x4A49,{ 0x92,0xC3,0xF8,0x25,0x61,0x73,0x30,0xC5 } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::OnListeningHandler>{ static constexpr guid value{ 0x2FFB25E4,0xBF1C,0x403C,{ 0xB2,0xF8,0x69,0x53,0x4C,0x7F,0xF1,0x1B } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::OnRecognizedSpeechHandler>{ static constexpr guid value{ 0x46E4393B,0x301E,0x4F0C,{ 0xB0,0xFD,0x0D,0x1F,0x48,0x09,0x0E,0x6C } }; };
template <> struct guid_storage<Microsoft::Holographic::AppRemoting::OnSendFrameHandler>{ static constexpr guid value{ 0x63858100,0x63D6,0x4509,{ 0xB5,0x66,0x1E,0xEF,0x31,0xB3,0x5B,0x77 } }; };
template <> struct default_interface<Microsoft::Holographic::AppRemoting::PlayerContext>{ using type = Microsoft::Holographic::AppRemoting::IPlayerContext; };
template <> struct default_interface<Microsoft::Holographic::AppRemoting::RemoteContext>{ using type = Microsoft::Holographic::AppRemoting::IRemoteContext; };

template <> struct abi<Microsoft::Holographic::AppRemoting::IAuthenticationProvider>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL GetToken(void* callback) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IAuthenticationProviderCallback>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL TokenReceived(void* token) noexcept = 0;
    virtual int32_t WINRT_CALL Cancel() noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IAuthenticationReceiver>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL ValidateToken(void* token, void* callback) noexcept = 0;
    virtual int32_t WINRT_CALL GetRealm(void** result) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IAuthenticationReceiverCallback>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL ValidationCompleted(void* token, bool isValid) noexcept = 0;
    virtual int32_t WINRT_CALL Cancel() noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::ICertificate>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL GetCertificatePfx(uint32_t* __resultSize, uint8_t** result) noexcept = 0;
    virtual int32_t WINRT_CALL GetSubjectName(void** result) noexcept = 0;
    virtual int32_t WINRT_CALL GetPfxPassword(void** result) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::ICertificateChain>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL GetCertificate(uint32_t index, uint32_t* __resultSize, uint8_t** result) noexcept = 0;
    virtual int32_t WINRT_CALL get_Length(uint32_t* value) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::ICertificateProvider>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL GetCertificate(void* callback) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::ICertificateProviderCallback>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CertificateReceived(void* certificate) noexcept = 0;
    virtual int32_t WINRT_CALL Cancel() noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::ICertificateValidationCallback>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CertificateValidated(struct struct_Microsoft_Holographic_AppRemoting_CertificateValidationResult result) noexcept = 0;
    virtual int32_t WINRT_CALL Cancel() noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::ICertificateValidator>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL ValidateCertificate(void* certificateChain, void* serverName, bool forceRevocationCheck, void* systemValidationResult, void* callback) noexcept = 0;
    virtual int32_t WINRT_CALL get_PerformSystemValidation(bool* value) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IDataChannel>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL add_OnDataReceived(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnDataReceived(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL SendData(uint32_t __dataSize, uint8_t* data, bool guaranteedDelivery) noexcept = 0;
    virtual int32_t WINRT_CALL Close() noexcept = 0;
    virtual int32_t WINRT_CALL add_OnClosed(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnClosed(winrt::event_token token) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IPlayerContext>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL Connect(void* hostname, uint16_t port) noexcept = 0;
    virtual int32_t WINRT_CALL ConnectSecure(void* hostname, uint16_t port, void* authProvider, void* certValidator) noexcept = 0;
    virtual int32_t WINRT_CALL Listen(void* localHostname, uint16_t handshakePort, uint16_t primaryTransportPort) noexcept = 0;
    virtual int32_t WINRT_CALL ListenSecure(void* localHostname, uint16_t handshakePort, uint16_t primaryTransportPort, void* provider, void* receiver) noexcept = 0;
    virtual int32_t WINRT_CALL Disconnect() noexcept = 0;
    virtual int32_t WINRT_CALL get_ConnectionState(Microsoft::Holographic::AppRemoting::ConnectionState* value) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnConnected(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnConnected(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnDisconnected(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnDisconnected(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnListening(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnListening(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL BlitRemoteFrame(Microsoft::Holographic::AppRemoting::BlitResult* result) noexcept = 0;
    virtual int32_t WINRT_CALL CreateDataChannel(uint8_t channelId, Microsoft::Holographic::AppRemoting::DataChannelPriority priority) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnDataChannelCreated(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnDataChannelCreated(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL get_LastFrameStatistics(struct struct_Microsoft_Holographic_AppRemoting_PlayerFrameStatistics* value) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IPlayerContextStatics>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL Create(void** result) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IRemoteContext>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL Connect(void* hostname, uint16_t port) noexcept = 0;
    virtual int32_t WINRT_CALL ConnectSecure(void* hostname, uint16_t port, void* authProvider, void* certValidator) noexcept = 0;
    virtual int32_t WINRT_CALL Listen(void* localHostname, uint16_t handshakePort, uint16_t primaryTransportPort) noexcept = 0;
    virtual int32_t WINRT_CALL ListenSecure(void* localHostname, uint16_t handshakePort, uint16_t primaryTransportPort, void* provider, void* receiver) noexcept = 0;
    virtual int32_t WINRT_CALL Disconnect() noexcept = 0;
    virtual int32_t WINRT_CALL get_ConnectionState(Microsoft::Holographic::AppRemoting::ConnectionState* value) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnConnected(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnConnected(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnDisconnected(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnDisconnected(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnListening(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnListening(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnSendFrame(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnSendFrame(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL CreateDataChannel(uint8_t channelId, Microsoft::Holographic::AppRemoting::DataChannelPriority priority) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnDataChannelCreated(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnDataChannelCreated(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL GetRemoteSpeech(void** result) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IRemoteContextStatics>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL Create(void** result) noexcept = 0;
    virtual int32_t WINRT_CALL Create2(uint32_t maxBitrateKbps, void** result) noexcept = 0;
    virtual int32_t WINRT_CALL Create3(uint32_t maxBitrateKbps, bool enableAudio, void** result) noexcept = 0;
    virtual int32_t WINRT_CALL Create4(uint32_t maxBitrateKbps, bool enableAudio, Microsoft::Holographic::AppRemoting::PreferredVideoCodec preferredVideoCodec, void** result) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::IRemoteSpeech>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL ApplyParameters(void* language, void* grammarFile, uint32_t __dictionarySize, void** dictionary) noexcept = 0;
    virtual int32_t WINRT_CALL add_OnRecognizedSpeech(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_OnRecognizedSpeech(winrt::event_token token) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::DataChannelCloseHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke() noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::DataChannelReceivedHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke(uint32_t __dataSize, uint8_t* data) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::OnConnectedHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke() noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke(void* dataChannel, uint8_t channelId) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::OnDisconnectedHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke(Microsoft::Holographic::AppRemoting::ConnectionFailureReason failureReason) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::OnListeningHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke(uint16_t port) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::OnRecognizedSpeechHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke(struct struct_Microsoft_Holographic_AppRemoting_RecognizedSpeech recognizedSpeech) noexcept = 0;
};};

template <> struct abi<Microsoft::Holographic::AppRemoting::OnSendFrameHandler>{ struct type : IUnknown
{
    virtual int32_t WINRT_CALL Invoke(void* texture) noexcept = 0;
};};

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IAuthenticationProvider
{
    void GetToken(Microsoft::Holographic::AppRemoting::IAuthenticationProviderCallback const& callback) const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IAuthenticationProvider> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IAuthenticationProvider<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IAuthenticationProviderCallback
{
    void TokenReceived(param::hstring const& token) const;
    void Cancel() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IAuthenticationProviderCallback> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IAuthenticationProviderCallback<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IAuthenticationReceiver
{
    void ValidateToken(param::hstring const& token, Microsoft::Holographic::AppRemoting::IAuthenticationReceiverCallback const& callback) const;
    hstring GetRealm() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IAuthenticationReceiver> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IAuthenticationReceiver<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IAuthenticationReceiverCallback
{
    void ValidationCompleted(param::hstring const& token, bool isValid) const;
    void Cancel() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IAuthenticationReceiverCallback> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IAuthenticationReceiverCallback<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_ICertificate
{
    com_array<uint8_t> GetCertificatePfx() const;
    hstring GetSubjectName() const;
    hstring GetPfxPassword() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::ICertificate> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_ICertificate<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_ICertificateChain
{
    com_array<uint8_t> GetCertificate(uint32_t index) const;
    uint32_t Length() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::ICertificateChain> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_ICertificateChain<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_ICertificateProvider
{
    void GetCertificate(Microsoft::Holographic::AppRemoting::ICertificateProviderCallback const& callback) const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::ICertificateProvider> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_ICertificateProvider<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_ICertificateProviderCallback
{
    void CertificateReceived(Microsoft::Holographic::AppRemoting::ICertificate const& certificate) const;
    void Cancel() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::ICertificateProviderCallback> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_ICertificateProviderCallback<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_ICertificateValidationCallback
{
    void CertificateValidated(Microsoft::Holographic::AppRemoting::CertificateValidationResult const& result) const;
    void Cancel() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::ICertificateValidationCallback> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_ICertificateValidationCallback<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_ICertificateValidator
{
    void ValidateCertificate(Microsoft::Holographic::AppRemoting::ICertificateChain const& certificateChain, param::hstring const& serverName, bool forceRevocationCheck, optional<Microsoft::Holographic::AppRemoting::CertificateValidationResult> const& systemValidationResult, Microsoft::Holographic::AppRemoting::ICertificateValidationCallback const& callback) const;
    bool PerformSystemValidation() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::ICertificateValidator> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_ICertificateValidator<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IDataChannel
{
    winrt::event_token OnDataReceived(Microsoft::Holographic::AppRemoting::DataChannelReceivedHandler const& handler) const;
    using OnDataReceived_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IDataChannel, &impl::abi_t<Microsoft::Holographic::AppRemoting::IDataChannel>::remove_OnDataReceived>;
    OnDataReceived_revoker OnDataReceived(auto_revoke_t, Microsoft::Holographic::AppRemoting::DataChannelReceivedHandler const& handler) const;
    void OnDataReceived(winrt::event_token const& token) const noexcept;
    void SendData(array_view<uint8_t const> data, bool guaranteedDelivery) const;
    void Close() const;
    winrt::event_token OnClosed(Microsoft::Holographic::AppRemoting::DataChannelCloseHandler const& handler) const;
    using OnClosed_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IDataChannel, &impl::abi_t<Microsoft::Holographic::AppRemoting::IDataChannel>::remove_OnClosed>;
    OnClosed_revoker OnClosed(auto_revoke_t, Microsoft::Holographic::AppRemoting::DataChannelCloseHandler const& handler) const;
    void OnClosed(winrt::event_token const& token) const noexcept;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IDataChannel> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IDataChannel<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IPlayerContext
{
    void Connect(param::hstring const& hostname, uint16_t port) const;
    void ConnectSecure(param::hstring const& hostname, uint16_t port, Microsoft::Holographic::AppRemoting::IAuthenticationProvider const& authProvider, Microsoft::Holographic::AppRemoting::ICertificateValidator const& certValidator) const;
    void Listen(param::hstring const& localHostname, uint16_t handshakePort, uint16_t primaryTransportPort) const;
    void ListenSecure(param::hstring const& localHostname, uint16_t handshakePort, uint16_t primaryTransportPort, Microsoft::Holographic::AppRemoting::ICertificateProvider const& provider, Microsoft::Holographic::AppRemoting::IAuthenticationReceiver const& receiver) const;
    void Disconnect() const;
    Microsoft::Holographic::AppRemoting::ConnectionState ConnectionState() const;
    winrt::event_token OnConnected(Microsoft::Holographic::AppRemoting::OnConnectedHandler const& handler) const;
    using OnConnected_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IPlayerContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IPlayerContext>::remove_OnConnected>;
    OnConnected_revoker OnConnected(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnConnectedHandler const& handler) const;
    void OnConnected(winrt::event_token const& token) const noexcept;
    winrt::event_token OnDisconnected(Microsoft::Holographic::AppRemoting::OnDisconnectedHandler const& handler) const;
    using OnDisconnected_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IPlayerContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IPlayerContext>::remove_OnDisconnected>;
    OnDisconnected_revoker OnDisconnected(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnDisconnectedHandler const& handler) const;
    void OnDisconnected(winrt::event_token const& token) const noexcept;
    winrt::event_token OnListening(Microsoft::Holographic::AppRemoting::OnListeningHandler const& handler) const;
    using OnListening_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IPlayerContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IPlayerContext>::remove_OnListening>;
    OnListening_revoker OnListening(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnListeningHandler const& handler) const;
    void OnListening(winrt::event_token const& token) const noexcept;
    Microsoft::Holographic::AppRemoting::BlitResult BlitRemoteFrame() const;
    void CreateDataChannel(uint8_t channelId, Microsoft::Holographic::AppRemoting::DataChannelPriority const& priority) const;
    winrt::event_token OnDataChannelCreated(Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler const& handler) const;
    using OnDataChannelCreated_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IPlayerContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IPlayerContext>::remove_OnDataChannelCreated>;
    OnDataChannelCreated_revoker OnDataChannelCreated(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler const& handler) const;
    void OnDataChannelCreated(winrt::event_token const& token) const noexcept;
    Microsoft::Holographic::AppRemoting::PlayerFrameStatistics LastFrameStatistics() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IPlayerContext> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IPlayerContext<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IPlayerContextStatics
{
    Microsoft::Holographic::AppRemoting::PlayerContext Create() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IPlayerContextStatics> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IPlayerContextStatics<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IRemoteContext
{
    void Connect(param::hstring const& hostname, uint16_t port) const;
    void ConnectSecure(param::hstring const& hostname, uint16_t port, Microsoft::Holographic::AppRemoting::IAuthenticationProvider const& authProvider, Microsoft::Holographic::AppRemoting::ICertificateValidator const& certValidator) const;
    void Listen(param::hstring const& localHostname, uint16_t handshakePort, uint16_t primaryTransportPort) const;
    void ListenSecure(param::hstring const& localHostname, uint16_t handshakePort, uint16_t primaryTransportPort, Microsoft::Holographic::AppRemoting::ICertificateProvider const& provider, Microsoft::Holographic::AppRemoting::IAuthenticationReceiver const& receiver) const;
    void Disconnect() const;
    Microsoft::Holographic::AppRemoting::ConnectionState ConnectionState() const;
    winrt::event_token OnConnected(Microsoft::Holographic::AppRemoting::OnConnectedHandler const& handler) const;
    using OnConnected_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IRemoteContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IRemoteContext>::remove_OnConnected>;
    OnConnected_revoker OnConnected(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnConnectedHandler const& handler) const;
    void OnConnected(winrt::event_token const& token) const noexcept;
    winrt::event_token OnDisconnected(Microsoft::Holographic::AppRemoting::OnDisconnectedHandler const& handler) const;
    using OnDisconnected_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IRemoteContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IRemoteContext>::remove_OnDisconnected>;
    OnDisconnected_revoker OnDisconnected(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnDisconnectedHandler const& handler) const;
    void OnDisconnected(winrt::event_token const& token) const noexcept;
    winrt::event_token OnListening(Microsoft::Holographic::AppRemoting::OnListeningHandler const& handler) const;
    using OnListening_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IRemoteContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IRemoteContext>::remove_OnListening>;
    OnListening_revoker OnListening(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnListeningHandler const& handler) const;
    void OnListening(winrt::event_token const& token) const noexcept;
    winrt::event_token OnSendFrame(Microsoft::Holographic::AppRemoting::OnSendFrameHandler const& handler) const;
    using OnSendFrame_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IRemoteContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IRemoteContext>::remove_OnSendFrame>;
    OnSendFrame_revoker OnSendFrame(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnSendFrameHandler const& handler) const;
    void OnSendFrame(winrt::event_token const& token) const noexcept;
    void CreateDataChannel(uint8_t channelId, Microsoft::Holographic::AppRemoting::DataChannelPriority const& priority) const;
    winrt::event_token OnDataChannelCreated(Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler const& handler) const;
    using OnDataChannelCreated_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IRemoteContext, &impl::abi_t<Microsoft::Holographic::AppRemoting::IRemoteContext>::remove_OnDataChannelCreated>;
    OnDataChannelCreated_revoker OnDataChannelCreated(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnDataChannelCreatedHandler const& handler) const;
    void OnDataChannelCreated(winrt::event_token const& token) const noexcept;
    Microsoft::Holographic::AppRemoting::IRemoteSpeech GetRemoteSpeech() const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IRemoteContext> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IRemoteContext<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IRemoteContextStatics
{
    Microsoft::Holographic::AppRemoting::RemoteContext Create() const;
    Microsoft::Holographic::AppRemoting::RemoteContext Create(uint32_t maxBitrateKbps) const;
    Microsoft::Holographic::AppRemoting::RemoteContext Create(uint32_t maxBitrateKbps, bool enableAudio) const;
    Microsoft::Holographic::AppRemoting::RemoteContext Create(uint32_t maxBitrateKbps, bool enableAudio, Microsoft::Holographic::AppRemoting::PreferredVideoCodec const& preferredVideoCodec) const;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IRemoteContextStatics> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IRemoteContextStatics<D>; };

template <typename D>
struct consume_Microsoft_Holographic_AppRemoting_IRemoteSpeech
{
    void ApplyParameters(param::hstring const& language, Windows::Storage::IStorageFile const& grammarFile, array_view<hstring const> dictionary) const;
    winrt::event_token OnRecognizedSpeech(Microsoft::Holographic::AppRemoting::OnRecognizedSpeechHandler const& handler) const;
    using OnRecognizedSpeech_revoker = impl::event_revoker<Microsoft::Holographic::AppRemoting::IRemoteSpeech, &impl::abi_t<Microsoft::Holographic::AppRemoting::IRemoteSpeech>::remove_OnRecognizedSpeech>;
    OnRecognizedSpeech_revoker OnRecognizedSpeech(auto_revoke_t, Microsoft::Holographic::AppRemoting::OnRecognizedSpeechHandler const& handler) const;
    void OnRecognizedSpeech(winrt::event_token const& token) const noexcept;
};
template <> struct consume<Microsoft::Holographic::AppRemoting::IRemoteSpeech> { template <typename D> using type = consume_Microsoft_Holographic_AppRemoting_IRemoteSpeech<D>; };

struct struct_Microsoft_Holographic_AppRemoting_CertificateValidationResult
{
    bool TrustedRoot;
    bool Revoked;
    bool Expired;
    bool WrongUsage;
    void* NameMismatch;
    bool RevocationCheckFailed;
    bool InvalidCertOrChain;
};
template <> struct abi<Microsoft::Holographic::AppRemoting::CertificateValidationResult>{ using type = struct_Microsoft_Holographic_AppRemoting_CertificateValidationResult; };


struct struct_Microsoft_Holographic_AppRemoting_PlayerFrameStatistics
{
    float Latency;
    float TimeSinceLastPresent;
    uint32_t VideoFrameReusedCount;
    uint32_t VideoFramesSkipped;
    uint32_t VideoFramesReceived;
    uint32_t VideoFramesDiscarded;
    float VideoFrameMinDelta;
    float VideoFrameMaxDelta;
};
template <> struct abi<Microsoft::Holographic::AppRemoting::PlayerFrameStatistics>{ using type = struct_Microsoft_Holographic_AppRemoting_PlayerFrameStatistics; };


struct struct_Microsoft_Holographic_AppRemoting_RecognizedSpeech
{
    void* RecognizedText;
    Windows::Media::SpeechRecognition::SpeechRecognitionConfidence Confidence;
    double RawConfidence;
};
template <> struct abi<Microsoft::Holographic::AppRemoting::RecognizedSpeech>{ using type = struct_Microsoft_Holographic_AppRemoting_RecognizedSpeech; };


}
